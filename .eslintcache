[{"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\App.js":"1","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Magazine.js":"2","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Login.js":"3","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserProfile.js":"4","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HelpCenter.js":"5","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\PrivacyPolicy.js":"6","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\payment.js":"7","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\NewPost.js":"8","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\NewProduct.js":"9","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\UpdateRecipe.js":"10","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\bodyFocus.js":"11","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\mediaManagerUtils.js":"12","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\PlayerVideoBrowser.js":"13","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeReviewModal.js":"14","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\MusicPlayer.js":"15","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\index.js":"16","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\UserStore.js":"17","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Signup.js":"18","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TrainerProfile.js":"19","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserUpdate.js":"20","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\CookiePolicy.js":"21","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\MollieRedirectPage.js":"22","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\main.js":"23","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\WorkoutCompleteModal.js":"24","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\AllFaqs.js":"25","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\AllRecipes.js":"26","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaManager.js":"27","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\blogs.js":"28","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\UpdateProduct.js":"29","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ReplaceFreeChallengePopup.js":"30","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomExercisePanel.js":"31","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\reportWebVitals.js":"32","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\RecipeProfile.js":"33","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\NewWelcome.js":"34","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\HelpPopupPlayer.js":"35","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\AllChallenges.js":"36","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\NewUser.js":"37","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\posts.js":"38","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\communityPosts.js":"39","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMainTab.js":"40","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomWeekPanel.js":"41","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\CommentSection.js":"42","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\LanguageContext.js":"43","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AdminDashboard.js":"44","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Footer.js":"45","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\customer.js":"46","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RequestManager\\AllRequests.js":"47","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\UpdateFaq.js":"48","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMusicTab.js":"49","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\shop.js":"50","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Nutrition\\SearchNutrition.js":"51","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\PaymentProcessStore.js":"52","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AllChallenges.js":"53","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengePlayer.js":"54","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\PackageSelector.js":"55","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\goals.js":"56","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\mediaManager.js":"57","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\AllProducts.js":"58","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\EditTypeName.js":"59","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Challenges.js":"60","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteNextModal.js":"61","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Pricing.js":"62","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\MagazineArticle.js":"63","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ResetNewPassword.js":"64","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\UpdateChallenge.js":"65","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\AllUsers.js":"66","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeAdditionalTab.js":"67","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\Player.js":"68","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HowItWork.js":"69","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\authentication.js":"70","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\UpdateUser.js":"71","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengeProfile.js":"72","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\RenderedVideoPlayer.js":"73","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\NonRenderedVideoPlayer.js":"74","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ForgotPassword.js":"75","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\ChoosePlan.js":"76","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Cards\\ChallengeCard.js":"77","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\coupons.js":"78","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\faqs.js":"79","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\AllCoupons.js":"80","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Community.js":"81","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\UpdatePost.js":"82","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserDashboard.js":"83","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\NewBlog.js":"84","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\UpdateExercise.js":"85","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\UpdateCoupon.js":"86","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Common\\ReviewsModal.js":"87","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\CreatePayment.js":"88","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\NewCoupon.js":"89","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\recipes.js":"90","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutTab.js":"91","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallenge.js":"92","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteModal.js":"93","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\FullScreenPlayerVideosBrowser.js":"94","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\NewRecipe.js":"95","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\EditTypeName.js":"96","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Feed.js":"97","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TermsAndCondition.js":"98","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\EditCategoryName.js":"99","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaFileUploader.js":"100","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserSetting.js":"101","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LoggedinNavbar.js":"102","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Nutrient.js":"103","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\tags.js":"104","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\UpdateBlog.js":"105","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Trainers.js":"106","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Challenges.js":"107","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\users.js":"108","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\equipments.js":"109","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\AllPosts.js":"110","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\EmailVerificationRedirect.js":"111","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MembershipManager\\NewMembership.js":"112","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\RemoteMediaManager.js":"113","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\New\\Wizard.js":"114","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\setAuthToken.js":"115","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\EditTypeName.js":"116","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\VerifyUser.js":"117","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\AllBlogs.js":"118","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\NewFaq.js":"119","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MembershipManager\\AllMemberships.js":"120","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\AllExercises.js":"121","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\EditTypeName.js":"122","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\useWindowDimensions.js":"123","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\NewExercise.js":"124","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\products.js":"125","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\adminRequests.js":"126","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\translationHelpers.js":"127","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Navbar.js":"128","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LanguageSelector\\LanguageSelector.js":"129","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Home.js":"130","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\ScrollToTop.js":"131","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\trainers.js":"132","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Nutrition.js":"133","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Home\\Hero.js":"134","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\PrivateRoute.js":"135","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\TextEditor.js":"136"},{"size":7277,"mtime":1656169020629,"results":"137","hashOfConfig":"138"},{"size":6590,"mtime":1656366981034,"results":"139","hashOfConfig":"138"},{"size":8477,"mtime":1656367457425,"results":"140","hashOfConfig":"138"},{"size":3922,"mtime":1656365763589,"results":"141","hashOfConfig":"138"},{"size":3521,"mtime":1656367641045,"results":"142","hashOfConfig":"138"},{"size":1770,"mtime":1656366453863,"results":"143","hashOfConfig":"138"},{"size":10850,"mtime":1633858841310,"results":"144","hashOfConfig":"145"},{"size":3739,"mtime":1640718252701,"results":"146","hashOfConfig":"138"},{"size":10406,"mtime":1649704272978,"results":"147","hashOfConfig":"145"},{"size":39946,"mtime":1656271827724,"results":"148","hashOfConfig":"138"},{"size":1664,"mtime":1656361131487,"results":"149","hashOfConfig":"138"},{"size":3421,"mtime":1618777961923,"results":"150","hashOfConfig":"145"},{"size":8595,"mtime":1649104221834,"results":"151","hashOfConfig":"145"},{"size":3355,"mtime":1656367239100,"results":"152","hashOfConfig":"138"},{"size":5018,"mtime":1649103884961,"results":"153","hashOfConfig":"138"},{"size":1319,"mtime":1656168899351,"results":"154","hashOfConfig":"138"},{"size":770,"mtime":1636919810994,"results":"155","hashOfConfig":"156"},{"size":13725,"mtime":1656366280357,"results":"157","hashOfConfig":"138"},{"size":12436,"mtime":1656366196230,"results":"158","hashOfConfig":"138"},{"size":23619,"mtime":1656365468718,"results":"159","hashOfConfig":"138"},{"size":1762,"mtime":1656367887124,"results":"160","hashOfConfig":"138"},{"size":2102,"mtime":1626391458009,"results":"161","hashOfConfig":"162"},{"size":8329,"mtime":1656433838362,"results":"163","hashOfConfig":"138"},{"size":2305,"mtime":1656368158977,"results":"164","hashOfConfig":"138"},{"size":3403,"mtime":1641305964945,"results":"165","hashOfConfig":"162"},{"size":3707,"mtime":1656234049137,"results":"166","hashOfConfig":"138"},{"size":25651,"mtime":1651331432916,"results":"167","hashOfConfig":"162"},{"size":3927,"mtime":1656248679780,"results":"168","hashOfConfig":"138"},{"size":9080,"mtime":1650063740335,"results":"169","hashOfConfig":"145"},{"size":1407,"mtime":1633502003437,"results":"170","hashOfConfig":"145"},{"size":3867,"mtime":1625079704428,"results":"171","hashOfConfig":"145"},{"size":375,"mtime":1612865032814,"results":"172","hashOfConfig":"145"},{"size":15514,"mtime":1656366398219,"results":"173","hashOfConfig":"138"},{"size":12218,"mtime":1656366745333,"results":"174","hashOfConfig":"138"},{"size":6278,"mtime":1649104273475,"results":"175","hashOfConfig":"145"},{"size":6681,"mtime":1656434053620,"results":"176","hashOfConfig":"138"},{"size":23006,"mtime":1649713952144,"results":"177","hashOfConfig":"145"},{"size":2892,"mtime":1622656581848,"results":"178","hashOfConfig":"162"},{"size":3020,"mtime":1640607466365,"results":"179","hashOfConfig":"145"},{"size":29440,"mtime":1656442043476,"results":"180","hashOfConfig":"138"},{"size":6253,"mtime":1628276798022,"results":"181","hashOfConfig":"156"},{"size":6680,"mtime":1650063633769,"results":"182","hashOfConfig":"145"},{"size":1365,"mtime":1656169163698,"results":"183","hashOfConfig":"138"},{"size":23312,"mtime":1656433575944,"results":"184","hashOfConfig":"138"},{"size":4625,"mtime":1656170953296,"results":"185","hashOfConfig":"138"},{"size":1239,"mtime":1629153304912,"results":"186","hashOfConfig":"145"},{"size":6431,"mtime":1656367230662,"results":"187","hashOfConfig":"138"},{"size":7671,"mtime":1631447235491,"results":"188","hashOfConfig":"162"},{"size":4614,"mtime":1622104261627,"results":"189","hashOfConfig":"145"},{"size":2983,"mtime":1619781017191,"results":"190","hashOfConfig":"162"},{"size":16925,"mtime":1656367389139,"results":"191","hashOfConfig":"138"},{"size":474,"mtime":1624652706332,"results":"192","hashOfConfig":"162"},{"size":11681,"mtime":1656368226012,"results":"193","hashOfConfig":"138"},{"size":17439,"mtime":1656368165513,"results":"194","hashOfConfig":"138"},{"size":5858,"mtime":1626038935485,"results":"195","hashOfConfig":"156"},{"size":1293,"mtime":1656361197957,"results":"196","hashOfConfig":"138"},{"size":9071,"mtime":1636848563331,"results":"197","hashOfConfig":"162"},{"size":3800,"mtime":1650063734049,"results":"198","hashOfConfig":"145"},{"size":2084,"mtime":1631433267801,"results":"199","hashOfConfig":"145"},{"size":17661,"mtime":1656368340947,"results":"200","hashOfConfig":"138"},{"size":2361,"mtime":1649103673980,"results":"201","hashOfConfig":"138"},{"size":13226,"mtime":1656366470594,"results":"202","hashOfConfig":"138"},{"size":11052,"mtime":1656366871099,"results":"203","hashOfConfig":"138"},{"size":3805,"mtime":1656366326446,"results":"204","hashOfConfig":"138"},{"size":23058,"mtime":1656436150939,"results":"205","hashOfConfig":"138"},{"size":6014,"mtime":1641313113665,"results":"206","hashOfConfig":"145"},{"size":8252,"mtime":1656363884895,"results":"207","hashOfConfig":"138"},{"size":1714,"mtime":1629616326530,"results":"208","hashOfConfig":"162"},{"size":11152,"mtime":1656367496133,"results":"209","hashOfConfig":"138"},{"size":5714,"mtime":1636908483217,"results":"210","hashOfConfig":"145"},{"size":17627,"mtime":1651353850311,"results":"211","hashOfConfig":"145"},{"size":39068,"mtime":1656368053420,"results":"212","hashOfConfig":"138"},{"size":7026,"mtime":1649104168624,"results":"213","hashOfConfig":"145"},{"size":4130,"mtime":1649104239072,"results":"214","hashOfConfig":"145"},{"size":2429,"mtime":1656367787583,"results":"215","hashOfConfig":"138"},{"size":1297,"mtime":1656367403544,"results":"216","hashOfConfig":"138"},{"size":2066,"mtime":1638693952125,"results":"217","hashOfConfig":"162"},{"size":2568,"mtime":1631633522519,"results":"218","hashOfConfig":"145"},{"size":3349,"mtime":1656274443997,"results":"219","hashOfConfig":"138"},{"size":4814,"mtime":1643493140469,"results":"220","hashOfConfig":"145"},{"size":6966,"mtime":1656368846135,"results":"221","hashOfConfig":"138"},{"size":4465,"mtime":1649704306844,"results":"222","hashOfConfig":"145"},{"size":6634,"mtime":1656365904092,"results":"223","hashOfConfig":"138"},{"size":14213,"mtime":1656363619016,"results":"224","hashOfConfig":"138"},{"size":5433,"mtime":1651331232607,"results":"225","hashOfConfig":"162"},{"size":5887,"mtime":1641210443873,"results":"226","hashOfConfig":"145"},{"size":8304,"mtime":1631621507122,"results":"227","hashOfConfig":"138"},{"size":31010,"mtime":1641388987046,"results":"228","hashOfConfig":"145"},{"size":5962,"mtime":1643493328009,"results":"229","hashOfConfig":"162"},{"size":17072,"mtime":1656228269125,"results":"230","hashOfConfig":"138"},{"size":42919,"mtime":1656447758894,"results":"231","hashOfConfig":"138"},{"size":18689,"mtime":1656449375665,"results":"232","hashOfConfig":"138"},{"size":5872,"mtime":1640691017600,"results":"233","hashOfConfig":"145"},{"size":1183,"mtime":1628373451719,"results":"234","hashOfConfig":"145"},{"size":35533,"mtime":1656270184070,"results":"235","hashOfConfig":"138"},{"size":1585,"mtime":1631447093438,"results":"236","hashOfConfig":"162"},{"size":6833,"mtime":1656368833600,"results":"237","hashOfConfig":"138"},{"size":1678,"mtime":1656366205982,"results":"238","hashOfConfig":"138"},{"size":1547,"mtime":1631394709982,"results":"239","hashOfConfig":"138"},{"size":14193,"mtime":1640097260936,"results":"240","hashOfConfig":"145"},{"size":11467,"mtime":1656365693659,"results":"241","hashOfConfig":"138"},{"size":3509,"mtime":1656170274028,"results":"242","hashOfConfig":"138"},{"size":40313,"mtime":1656368802481,"results":"243","hashOfConfig":"138"},{"size":1242,"mtime":1656361221395,"results":"244","hashOfConfig":"138"},{"size":14496,"mtime":1656363646221,"results":"245","hashOfConfig":"138"},{"size":7271,"mtime":1656366084243,"results":"246","hashOfConfig":"138"},{"size":12850,"mtime":1656367931780,"results":"247","hashOfConfig":"138"},{"size":4700,"mtime":1641197672408,"results":"248","hashOfConfig":"145"},{"size":1663,"mtime":1656447746022,"results":"249","hashOfConfig":"138"},{"size":3947,"mtime":1641312828398,"results":"250","hashOfConfig":"138"},{"size":1973,"mtime":1656367854288,"results":"251","hashOfConfig":"138"},{"size":2517,"mtime":1615808687460,"results":"252","hashOfConfig":"156"},{"size":709,"mtime":1623854620132,"results":"253","hashOfConfig":"145"},{"size":23240,"mtime":1656367339158,"results":"254","hashOfConfig":"138"},{"size":265,"mtime":1618765090231,"results":"255","hashOfConfig":"145"},{"size":2076,"mtime":1635795065832,"results":"256","hashOfConfig":"138"},{"size":4257,"mtime":1640544512435,"results":"257","hashOfConfig":"162"},{"size":3774,"mtime":1656363526374,"results":"258","hashOfConfig":"138"},{"size":7404,"mtime":1656275468292,"results":"259","hashOfConfig":"138"},{"size":3327,"mtime":1641306131454,"results":"260","hashOfConfig":"162"},{"size":5648,"mtime":1656433905770,"results":"261","hashOfConfig":"138"},{"size":1593,"mtime":1631447061929,"results":"262","hashOfConfig":"145"},{"size":617,"mtime":1612865032711,"results":"263","hashOfConfig":"138"},{"size":5948,"mtime":1656273237565,"results":"264","hashOfConfig":"138"},{"size":507,"mtime":1619158649307,"results":"265","hashOfConfig":"162"},{"size":731,"mtime":1641047132936,"results":"266","hashOfConfig":"162"},{"size":395,"mtime":1656169167550,"results":"267","hashOfConfig":"138"},{"size":9901,"mtime":1656433322087,"results":"268","hashOfConfig":"138"},{"size":1170,"mtime":1656183413396,"results":"269","hashOfConfig":"138"},{"size":20849,"mtime":1656368927668,"results":"270","hashOfConfig":"138"},{"size":355,"mtime":1612865032711,"results":"271","hashOfConfig":"138"},{"size":2812,"mtime":1656361362751,"results":"272","hashOfConfig":"138"},{"size":7615,"mtime":1656366511395,"results":"273","hashOfConfig":"138"},{"size":2638,"mtime":1656410784145,"results":"274","hashOfConfig":"138"},{"size":484,"mtime":1640692961639,"results":"275","hashOfConfig":"138"},{"size":378,"mtime":1640879242652,"results":"276","hashOfConfig":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"72nilk",{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wxw0wd",{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"demw8x",{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19a60hy",{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"391"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"431"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"415"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"374"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"457"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"407"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"407"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"355"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"355"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\App.js",["582"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Magazine.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Login.js",["583","584","585","586","587","588"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Input, Form } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport \"../assets/login.css\";\r\nimport \"../assets/home.css\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport Logo from \"../images/logo.png\";\r\n\r\nimport {\r\n  loginUser,\r\n  loginUserWithGoogle,\r\n  loginUserWithFacebook,\r\n} from \"../services/authentication\";\r\nimport { userInfoContext, userPointsContext } from \"../contexts/UserStore\";\r\nimport setAuthToken from \"../helpers/setAuthToken\";\r\nimport { getUserPoints } from \"../services/users\";\r\nimport { T } from \"../components/Translate\";\r\n\r\nfunction Login(props) {\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const [userPoints, setUserPoints] = useContext(userPointsContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errror, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwtToken\")) {\r\n      props.history.push(\"/user/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const responseFacebook = async (response) => {\r\n    // setLoading(true);\r\n    const res = await loginUserWithFacebook({\r\n      id: response.id,\r\n      email: response.email,\r\n    });\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\"Unable to login.\");\r\n      // setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      // setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (\r\n        res.res.role === \"admin\" ||\r\n        res.res.role === \"trainer\" ||\r\n        res.res.role === \"nutrist\" ||\r\n        res.res.role === \"blogger\" ||\r\n        res.res.role === \"shopmanager\"\r\n      ) {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      // \"admin\",\r\n      //   \"trainer\",\r\n      //   \"nutrist\",\r\n      //   \"blogger\",\r\n      //   \"shopmanager\",\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    return;\r\n    // setLoading(true);\r\n    console.log(\"response google\");\r\n    const res = await loginUserWithGoogle({\r\n      googleId: response.googleId,\r\n      email: response.profileObj.email,\r\n    });\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\"Unable to login.\");\r\n      // setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      // setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (res.res.role === \"admin\") {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = () => {};\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    const res = await loginUser(values.username, values.password);\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\r\n        \"Unable to login. Please make sure you've entered correct username and password.\"\r\n      );\r\n      setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        email: res.res.email,\r\n        // isActive: ,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(\"res from login\", res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      localStorage.setItem(\"isActive\", res.res.isActive);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      getUserPoints(userPoints, setUserPoints);\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (\r\n        res.res.role === \"admin\" ||\r\n        res.res.role === \"trainer\" ||\r\n        res.res.role === \"nutrist\" ||\r\n        res.res.role === \"blogger\" ||\r\n        res.res.role === \"shopmanager\"\r\n      ) {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"login-container\">\r\n        <div className=\"login-container-column1\">\r\n          <img className=\"login-logo\" src={Logo} alt=\"logo\" />\r\n          <h1 className=\"font-heading-white\">\r\n            <T>login.login</T>\r\n          </h1>\r\n          <Form\r\n            layout=\"vertical\"\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"login-textfield-box\">\r\n              <Form.Item\r\n                label={\r\n                  <span className=\"font-paragraph-white\">\r\n                    <T>lTgin.username</T>\r\n                  </span>\r\n                }\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"login-textfield-box\">\r\n              <Form.Item\r\n                label={\r\n                  <span className=\"font-paragraph-white\">\r\n                    <T>lTgin.password</T>\r\n                  </span>\r\n                }\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </div>\r\n            <Link to=\"/forgot-password\" className=\"login-forgot-password\">\r\n              <T>logiT.forgot_pass</T>\r\n            </Link>\r\n            <div style={{ textAlign: \"center\", margin: \"10px 0\" }}>\r\n              {loading ? (\r\n                <LoadingOutlined\r\n                  style={{ color: \"#ff7700\", fontSize: \"30px\" }}\r\n                />\r\n              ) : (\r\n                <button\r\n                  className=\"common-orange-button signup-btn\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  <span className=\"font-paragraph-white\">\r\n                    <T>login.login</T>\r\n                  </span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <p\r\n              className=\"font-paragraph-white\"\r\n              style={{ color: \"#ff4d4f\", margin: \"5px\" }}\r\n            >\r\n              {errror}\r\n            </p>\r\n          </Form>\r\n\r\n          <FacebookLogin\r\n            appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n            fields=\"name,email,picture\"\r\n            callback={responseFacebook}\r\n            render={(renderProps) => (\r\n              <button\r\n                class=\"loginBtn loginBtn--facebook\"\r\n                onClick={renderProps.onClick}\r\n              >\r\n                Login With Facebook\r\n              </button>\r\n            )}\r\n          />\r\n          <GoogleLogin\r\n            clientId={process.env.REACT_APP_GOOGLE_APP_ID}\r\n            render={(renderProps) => (\r\n              <button\r\n                class=\"loginBtn loginBtn--google\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            )}\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n          />\r\n        </div>\r\n        <div className=\"login-container-column2\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n",["589","590"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserProfile.js",["591","592"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HelpCenter.js",["593"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\PrivacyPolicy.js",["594"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\payment.js",["595","596","597"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\NewPost.js",["598"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\NewProduct.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\UpdateRecipe.js",["599","600","601","602","603","604"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\bodyFocus.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\mediaManagerUtils.js",["605","606"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\PlayerVideoBrowser.js",["607"],"import React, { useContext } from \"react\";\r\n\r\nimport Carousel from \"react-multi-carousel\";\r\nimport VideoThumbnail from \"react-video-thumbnail\";\r\nimport SquarePT from \"../../assets/icons/player-video-browser-whistle-icon.svg\";\r\nimport SquarePlay from \"../../assets/icons/player-video-browser-play-icon.svg\";\r\nimport { exerciseWorkoutTimeTrackContext } from \"../../contexts/PlayerState\";\r\n\r\nconst responsive = {\r\n  superLargeDesktop: {\r\n    // the naming can be any, depends on you.\r\n    breakpoint: { max: 4000, min: 3000 },\r\n    items: 4,\r\n  },\r\n  desktop3: {\r\n    breakpoint: { max: 3000, min: 1600 },\r\n    items: 4,\r\n  },\r\n  desktop2: {\r\n    breakpoint: { max: 1600, min: 1350 },\r\n    items: 3.5,\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 1350, min: 1100 },\r\n    items: 3,\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1100, min: 850 },\r\n    items: 2.5,\r\n  },\r\n  mobile2: {\r\n    breakpoint: { max: 850, min: 600 },\r\n    items: 1,\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 600, min: 0 },\r\n    items: 1,\r\n  },\r\n};\r\n\r\nfunction PlayerVideoBrowser({\r\n  workout,\r\n  playerState,\r\n  setPlayerState,\r\n  setExerciseForHelpModal,\r\n  setOpenHelpModal,\r\n  setCurrentExercise,\r\n  currentExercise,\r\n  fullscreen,\r\n  fromFullScreen,\r\n}) {\r\n  const [exerciseWorkoutTimeTrack, setExerciseWorkoutTimeTrack] = useContext(\r\n    exerciseWorkoutTimeTrackContext\r\n  );\r\n\r\n  const handleOpenExerciseForHelp = (e) => {\r\n    setPlayerState({ ...playerState, playing: false, muted: true });\r\n    setExerciseForHelpModal(e);\r\n    setOpenHelpModal(true);\r\n  };\r\n\r\n  const handleChangeExercise = (i) => {\r\n    setCurrentExercise({\r\n      exercise: workout.exercises[i],\r\n      index: i,\r\n      completed: Math.round((i / (workout.exercises.length - 1)) * 100),\r\n    });\r\n    setPlayerState({ ...playerState, playing: false, muted: false });\r\n    updateExerciseWorkoutTimer(i);\r\n  };\r\n\r\n  const updateExerciseWorkoutTimer = (index) => {\r\n    if (workout.isRendered) {\r\n      const allExercisesBeforeTheNextExercise = workout.exercises\r\n        .slice(0, index)\r\n        .reduce((a, b) => a + (parseInt(b[\"exerciseLength\"]) || 0), 0);\r\n      const allBreaksBeforeTheNextExercise = workout.exercises\r\n        .slice(0, index)\r\n        .reduce((a, b) => a + (parseInt(b[\"break\"]) || 0), 0);\r\n      // console.log(\"allExercisesBeforeTheNextExercise\",allExercisesBeforeTheNextExercise+allBreaksBeforeTheNextExercise)\r\n      setExerciseWorkoutTimeTrack((prev) => ({\r\n        ...prev,\r\n        current:\r\n          allExercisesBeforeTheNextExercise + allBreaksBeforeTheNextExercise,\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"challenge-player-container-exercies\"\r\n      style={{\r\n        background: fromFullScreen && \"none\",\r\n        width: fromFullScreen && \"100%\",\r\n      }}\r\n    >\r\n      <div className=\"video-browser-container\">\r\n        <Carousel responsive={responsive}>\r\n          {workout.exercises &&\r\n            workout.exercises.map((e, i) => {\r\n              return i === 0 ? (\r\n                <div\r\n                  className={`${\r\n                    currentExercise.index === i\r\n                      ? \"exercise-browser-card challenge-player-container-exercies-box--currentRunning\"\r\n                      : \"exercise-browser-card\"\r\n                  }`}\r\n                >\r\n                  <div>\r\n                    <h4 className=\"challenge-player-container-exercies-round font-paragraph-white\">\r\n                      {e.exerciseGroupName ? (\r\n                        e.exerciseGroupName\r\n                      ) : (\r\n                        <span style={{ opacity: 0 }}>-</span>\r\n                      )}\r\n                    </h4>\r\n                  </div>\r\n                  {workout.isRendered && (\r\n                    <img\r\n                      src={SquarePlay}\r\n                      onClick={() =>\r\n                        setPlayerState({ ...playerState, playing: true })\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"challenge-player-container-exercies-box-asktrainerbtn\"\r\n                      style={{ padding: \"8px\" }}\r\n                    />\r\n                  )}\r\n                  <div\r\n                    className=\"challenge-player-container-exercies-box\"\r\n                    key={e._id}\r\n                    onClick={() => handleChangeExercise(i)}\r\n                  >\r\n                    <div className=\"challenge-player-container-exercies-box-imagebox\">\r\n                      <VideoThumbnail\r\n                        videoUrl={\r\n                          e.videoURL\r\n                            ? `${process.env.REACT_APP_SERVER}/uploads/${e.videoURL}`\r\n                            : \"\"\r\n                        }\r\n                        width={250}\r\n                        height={200}\r\n                        cors={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"challenge-player-container-exercies-box-details font-paragraph-white\">\r\n                      <p style={{ lineHeight: \"10px\" }}>{e.title}</p>\r\n                      <p>\r\n                        {e.exerciseLength ? (\r\n                          <>\r\n                            <span style={{ marginRight: \"8px\" }}>\r\n                              {e.exerciseLength} secs\r\n                            </span>{\" \"}\r\n                          </>\r\n                        ) : (\r\n                          <span style={{ marginRight: \"8px\" }}></span>\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className={`${\r\n                    currentExercise.index === i\r\n                      ? \"exercise-browser-card challenge-player-container-exercies-box--currentRunning\"\r\n                      : \"exercise-browser-card\"\r\n                  }`}\r\n                >\r\n                  <div>\r\n                    <h4\r\n                      className=\"challenge-player-container-exercies-round font-paragraph-white\"\r\n                      style={{ opacity: !e.exerciseGroupName ? \"0\" : \"0.6\" }}\r\n                    >\r\n                      {e.exerciseGroupName ? (\r\n                        e.exerciseGroupName\r\n                      ) : (\r\n                        <span style={{ opacity: 0 }}>-</span>\r\n                      )}\r\n                    </h4>\r\n                  </div>\r\n                  {workout.isRendered && !fullscreen && (\r\n                    <img\r\n                      src={SquarePT}\r\n                      alt=\"\"\r\n                      className=\"challenge-player-container-exercies-box-asktrainerbtn\"\r\n                      onClick={() => handleOpenExerciseForHelp(e)}\r\n                    />\r\n                  )}\r\n                  <div\r\n                    className=\"challenge-player-container-exercies-box\"\r\n                    key={e._id}\r\n                    onClick={() => handleChangeExercise(i)}\r\n                  >\r\n                    <div className=\"challenge-player-container-exercies-box-imagebox\">\r\n                      <VideoThumbnail\r\n                        videoUrl={\r\n                          e.videoURL\r\n                            ? `${process.env.REACT_APP_SERVER}/uploads/${e.videoURL}`\r\n                            : \"\"\r\n                        }\r\n                        width={250}\r\n                        height={200}\r\n                        cors={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"challenge-player-container-exercies-box-details font-paragraph-white\">\r\n                      <p style={{ lineHeight: \"10px\" }}>{e.title}</p>\r\n                      <p>\r\n                        <span style={{ marginRight: \"8px\" }}>\r\n                          {e.exerciseLength} secs\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </Carousel>\r\n      </div>\r\n      {!fromFullScreen && workout.isRendered && (\r\n        <>\r\n          <h3\r\n            className=\"challenge-player-container-exercies-heading font-paragraph-white\"\r\n            style={{ marginTop: \"20px\" }}\r\n          >\r\n            Exercises\r\n          </h3>\r\n\r\n          <h3 className=\"challenge-player-container-exercies-subheading font-paragraph-white\">\r\n            Navigate to each exercise or hit the personal trainer button for\r\n            audio explanation.\r\n          </h3>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerVideoBrowser;\r\n",["608","609"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeReviewModal.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\MusicPlayer.js",["610","611","612","613","614","615","616","617"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\index.js",["618"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport UserStore from \"./contexts/UserStore\";\r\nimport LanguageStore, { LanguageProvider } from \"./contexts/LanguageContext\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./App.css\";\r\nimport { setChonkyDefaults } from \"chonky\";\r\nimport { ChonkyIconFA } from \"chonky-icon-fontawesome\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport PaymentProcessStore from \"./contexts/PaymentProcessStore\";\r\nimport { fetchTranslations } from \"./helpers/translationHelpers\";\r\n\r\n// Somewhere in your `index.ts`:\r\nsetChonkyDefaults({ iconComponent: ChonkyIconFA, disableDragAndDrop: true });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserStore>\r\n      <PaymentProcessStore>\r\n        <LanguageProvider fetchTranslations={fetchTranslations}>\r\n          <App />\r\n        </LanguageProvider>\r\n      </PaymentProcessStore>\r\n    </UserStore>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\UserStore.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Signup.js",["619","620","621","622"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TrainerProfile.js",["623","624"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserUpdate.js",["625","626"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../assets/userUpdate.css\";\r\nimport LoggedinNavbar from \"../components/LoggedinNavbar\";\r\nimport { InputNumber, Upload, Button, Progress, notification } from \"antd\";\r\nimport HumanVector from \"../images/FreeVectorHumanSilhouette 1.png\";\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\nimport { getUserProfileInfo } from \"../services/users\";\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport { uploadImage } from \"../services/mediaManager\";\r\n// icons\r\nimport Muscle from \"../assets/icons/muscle.png\";\r\nimport Waist from \"../assets/icons/waist.png\";\r\nimport HeartRate from \"../assets/icons/heart-rate.png\";\r\nimport ArrowOneActive from \"../assets/icons/arrow-one-active.png\";\r\nimport ArrowForward from \"../assets/icons/forward-arrows.png\";\r\nimport ArrowThreeActive from \"../assets/icons/arrow-three-active.png\";\r\nimport { createCustomerDetails } from \"../services/customer\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { T } from \"../components/Translate\";\r\n\r\nconst iconsStyle = {\r\n  color: \"var(--color-orange)\",\r\n  fontSize: \"3rem\",\r\n  padding: \"5px\",\r\n  marginRight: \"10px\",\r\n  backgroundColor: \"var(--color-gray)\",\r\n};\r\nconst iconsStyleArrow = {\r\n  color: \"var(--color-orange)\",\r\n  height: \"38px\",\r\n  width: \"40px\",\r\n  padding: \"10px 5px\",\r\n  marginRight: \"10px\",\r\n  backgroundColor: \"var(--color-gray)\",\r\n};\r\n\r\nfunction UserUpdate() {\r\n  // eslint-disable-next-line\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const [goal, setGoal] = useState(\"\");\r\n  const [currentLevel, setCurrentLevel] = useState(\"\");\r\n  const [metric, setMetric] = useState(true);\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [weightArray, setWeightArray] = useState([]);\r\n  const [height, setHeight] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [bmi, setBmi] = useState(\"\");\r\n  const [bmr, setBmr] = useState(\"\");\r\n  const [beforePic, setBeforePic] = useState(\"\");\r\n  const [afterPic, setAfterPic] = useState(\"\");\r\n  const [shoulderSize, setShoulderSize] = useState(\"\");\r\n  const [chestSize, setChestSize] = useState(\"\");\r\n  const [hipSize, setHipSize] = useState(\"\");\r\n  const [waistSize, setWaistSize] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchLoading, setFetchLoading] = useState(false);\r\n\r\n  const openNotificationWithIcon = (type, message, description) => {\r\n    notification[type]({\r\n      message: message,\r\n      description: description,\r\n    });\r\n  };\r\n\r\n  const fechUserInfo = async () => {\r\n    setFetchLoading(true);\r\n    const month = new Date().getMonth();\r\n\r\n    const res = await getUserProfileInfo(userInfo.id);\r\n    const {\r\n      goals,\r\n      currentFitnessLevel,\r\n      measureSystem,\r\n      height,\r\n      age,\r\n      weight,\r\n      bmi,\r\n      bmir,\r\n      waistSize,\r\n      shoulderSize,\r\n      hipSize,\r\n      chestSize,\r\n      afterImageLink,\r\n      beforeImageLink,\r\n    } = res.customer.customerDetails;\r\n    setGoal(goals[0]);\r\n    setCurrentLevel(currentFitnessLevel[0]);\r\n    setMetric(measureSystem === \"metrics\" ? true : false);\r\n    setHeight(height);\r\n    setAge(age);\r\n    setWeightArray(weight);\r\n    setWeight(weight[month]);\r\n    setBmr(bmir);\r\n    setBmi(bmi);\r\n    setShoulderSize(shoulderSize);\r\n    setWaistSize(waistSize);\r\n    setHipSize(hipSize);\r\n    setChestSize(chestSize);\r\n    setAfterPic(afterImageLink);\r\n    setBeforePic(beforeImageLink);\r\n    setFetchLoading(false);\r\n    console.log(\"res\", res);\r\n  };\r\n  useEffect(() => {\r\n    fechUserInfo();\r\n  }, []);\r\n\r\n  const dummyRequest = async ({ file, onSuccess }) => {\r\n    // const res = await uploadImage(file);\r\n    // console.log(\"please worl\", res);\r\n    // setBeforePic(`${process.env.REACT_APP_SERVER}/api${res.file.filelink}`);\r\n    setBeforePic(file);\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n  const dummyAfterPicRequest = async ({ file, onSuccess }) => {\r\n    // console.log(file);\r\n    // const res = await uploadImage(file);\r\n    // console.log(\"please worl\", res);\r\n    // setAfterPic(`${process.env.REACT_APP_SERVER}/api${res.file.filelink}`);\r\n    setAfterPic(file);\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n\r\n  const onChange = (info) => {\r\n    console.log(info);\r\n  };\r\n\r\n  const saveUserUpdate = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const savedAfterePic =\r\n        typeof afterPic === \"object\" ? await uploadImage(afterPic) : afterPic;\r\n      const savedBeforePic =\r\n        typeof beforePic === \"object\"\r\n          ? await uploadImage(beforePic)\r\n          : beforePic;\r\n      const month = new Date().getMonth();\r\n      const w = weightArray;\r\n      w[month] = weight;\r\n\r\n      const values = {\r\n        goals: [goal],\r\n        currentFitnessLevel: [currentLevel],\r\n        measureSystem: metric ? \"metrics\" : \"imperial\",\r\n        height,\r\n        age,\r\n        weight: w,\r\n        bmi,\r\n        bmir: bmr,\r\n        waistSize,\r\n        shoulderSize,\r\n        hipSize,\r\n        chestSize,\r\n        afterImageLink:\r\n          typeof savedAfterePic === \"string\"\r\n            ? savedAfterePic\r\n            : savedAfterePic.file.filelink,\r\n        beforeImageLink:\r\n          typeof savedBeforePic === \"string\"\r\n            ? savedBeforePic\r\n            : savedBeforePic.file.filelink,\r\n      };\r\n\r\n      await createCustomerDetails(values, userInfo.id);\r\n      setLoading(false);\r\n      openNotificationWithIcon(\"success\", \"Information Updated!\", \"\");\r\n      console.log(\"values to be saved\", values);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      openNotificationWithIcon(\"error\", \"Unable to updated values\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"var(--color-gray-dark)\" }}>\r\n      <LoggedinNavbar />\r\n\r\n      <div className=\"user-update-container\">\r\n        <div className=\"user-update-container-heading font-card-heading\">\r\n          <T>user_update.update_values</T>\r\n        </div>\r\n        <div className=\"user-update-container-box\">\r\n          <div className=\"user-update-container-box-row1\">\r\n            <div className=\"user-update-container-box-row1-heading font-card-heading-light\">\r\n              <T>user_update.your_goals</T>\r\n            </div>\r\n            <div className=\"user-update-container-box-row1-inside\">\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setGoal(\"gain-muscle\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    goal === \"gain-muscle\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={Muscle} alt=\"\" style={iconsStyle} />\r\n                <T>user_update.gain_muscle</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setGoal(\"get-fit\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    goal === \"get-fit\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={HeartRate} alt=\"\" style={iconsStyle} />\r\n                <T>user_update.get_fit</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setGoal(\"lose-weight\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    goal === \"lose-weight\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={Waist} alt=\"\" style={iconsStyle} />\r\n                <T>user_update.lose_weight</T>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-update-container-box-row2\">\r\n            <div className=\"user-update-container-box-row2-heading font-card-heading-light\">\r\n              <T>user_update.current_fitness</T>\r\n            </div>\r\n            <div className=\"user-update-container-box-row2-inside\">\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setCurrentLevel(\"inactive\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    currentLevel === \"inactive\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={ArrowOneActive} alt=\"\" style={iconsStyleArrow} />\r\n                <T>user_update.inactive</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setCurrentLevel(\"light-active\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    currentLevel === \"light-active\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={ArrowOneActive} alt=\"\" style={iconsStyleArrow} />\r\n                <T>user_update.light_active</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setCurrentLevel(\"average-active\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    currentLevel === \"average-active\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={ArrowForward} alt=\"\" style={iconsStyleArrow} />\r\n                <T>user_update.average_active</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setCurrentLevel(\"active\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    currentLevel === \"active\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={ArrowThreeActive} alt=\"\" style={iconsStyleArrow} />\r\n                <T>user_update.active</T>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                onClick={() => setCurrentLevel(\"very-active\")}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  background:\r\n                    currentLevel === \"very-active\"\r\n                      ? \"var(--color-gray-light)\"\r\n                      : \"var(--color-gray-dark)\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={ArrowThreeActive} alt=\"\" style={iconsStyleArrow} />\r\n                <T>user_update.very_active</T>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-update-container-box-row3\">\r\n            <div className=\"user-update-container-box-row3-heading font-card-heading-light\">\r\n              <T>user_update.other_details</T>\r\n            </div>\r\n            <div className=\"user-update-container-box-row3-buttons\">\r\n              <button\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  backgroundColor: metric\r\n                    ? \"var(--color-orange)\"\r\n                    : \"var(--color-gray-light)\",\r\n                }}\r\n                onClick={() => setMetric(true)}\r\n              >\r\n                <T>user_update.metric</T>\r\n              </button>\r\n              <button\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  backgroundColor: !metric\r\n                    ? \"var(--color-orange)\"\r\n                    : \"var(--color-gray-light)\",\r\n                }}\r\n                onClick={() => setMetric(false)}\r\n              >\r\n                <T>user_update.imperial</T>\r\n              </button>\r\n            </div>\r\n            <div className=\"user-update-container-box-row3-inside\">\r\n              <div>\r\n                <span className=\"font-paragraph-white\">\r\n                  <T>user_update.weight</T>:{\" \"}\r\n                </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e)}\r\n                />\r\n                <span\r\n                  className=\"font-paragraph-white\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                >\r\n                  {metric ? \"kg\" : \"lb\"}{\" \"}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">\r\n                  <T>user_update.height</T>:\r\n                </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={height}\r\n                  onChange={(e) => setHeight(e)}\r\n                />\r\n                <span\r\n                  className=\"font-paragraph-white\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                >\r\n                  {metric ? \"cm\" : \"ft\"}{\" \"}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">\r\n                  <T>user_update.age</T>:\r\n                </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={age}\r\n                  onChange={(e) => setAge(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">BMI: </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={bmi}\r\n                  onChange={(e) => setBmi(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">BMR: </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={bmr}\r\n                  onChange={(e) => setBmr(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">Shoulder Size: </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={shoulderSize}\r\n                  onChange={(e) => setShoulderSize(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">Chest Size: </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={chestSize}\r\n                  onChange={(e) => setChestSize(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">Hip Size: </span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={hipSize}\r\n                  onChange={(e) => setHipSize(e)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-paragraph-white\">Waist Size:</span>\r\n                <InputNumber\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"2px solid var(--color-gray-light)\",\r\n                    width: \"100px\",\r\n                  }}\r\n                  value={waistSize}\r\n                  onChange={(e) => setWaistSize(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"user-update-uploadimage\">\r\n            <div className=\"user-update-container-box-row2-heading font-card-heading-light\">\r\n              <T>user_update.upload_your_pictures</T>\r\n            </div>\r\n            <div className=\"user-update-uploadimage-container\">\r\n              <div className=\"user-update-uploadimage-container-box\">\r\n                <h3 className=\"font-paragraph-white\">\r\n                  {\" \"}\r\n                  <T>user_update.before</T>\r\n                </h3>\r\n                <img\r\n                  src={\r\n                    typeof beforePic === \"object\"\r\n                      ? URL.createObjectURL(beforePic)\r\n                      : typeof beforePic === \"string\" && beforePic.length > 0\r\n                      ? `${process.env.REACT_APP_SERVER}/uploads/${beforePic}`\r\n                      : HumanVector\r\n                  }\r\n                  style={{\r\n                    height: \"80%\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"var(--color-gray-light)\",\r\n                    marginBottom: \"10px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  alt=\"human-vector\"\r\n                />\r\n                {beforePic ? (\r\n                  <span className=\"font-paragraph-white\">\r\n                    {/* {beforePic ? beforePic.name : \"\"} */}\r\n                    <div\r\n                      className=\"user-image-remove font-paragraph-white\"\r\n                      onClick={() => setBeforePic(\"\")}\r\n                    >\r\n                      <T>user_update.remove</T>\r\n                    </div>\r\n                  </span>\r\n                ) : (\r\n                  <ImgCrop rotate>\r\n                    <Upload\r\n                      aspect=\"3/2\"\r\n                      customRequest={dummyRequest}\r\n                      multiple={false}\r\n                      onChange={onChange}\r\n                      showUploadList={false}\r\n                      progress={<Progress type=\"line\" />}\r\n                      // onPreview={onPreview}\r\n                    >\r\n                      <Button\r\n                        className=\"font-paragraph-white hover-orange\"\r\n                        style={{\r\n                          backgroundColor: \"var(--color-gray-light)\",\r\n                          border: \"none\",\r\n                        }}\r\n                      >\r\n                        <T>user_update.upload_before_image</T>\r\n                      </Button>\r\n                    </Upload>\r\n                  </ImgCrop>\r\n                )}\r\n              </div>\r\n              <div className=\"user-update-uploadimage-container-box\">\r\n                <h3 className=\"font-paragraph-white\">\r\n                  <T>user_update.after</T>\r\n                </h3>\r\n                <img\r\n                  src={\r\n                    typeof afterPic === \"object\"\r\n                      ? URL.createObjectURL(afterPic)\r\n                      : typeof afterPic === \"string\" && afterPic.length > 0\r\n                      ? `${process.env.REACT_APP_SERVER}/uploads/${afterPic}`\r\n                      : HumanVector\r\n                  }\r\n                  style={{\r\n                    height: \"80%\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"var(--color-gray-light)\",\r\n                    marginBottom: \"10px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  alt=\"human-vector\"\r\n                />\r\n                {afterPic ? (\r\n                  <span className=\"font-paragraph-white\">\r\n                    {/* {afterPic ? afterPic : \"\"} */}\r\n                    <div\r\n                      className=\"user-image-remove font-paragraph-white\"\r\n                      onClick={() => setAfterPic(\"\")}\r\n                    >\r\n                      <T>user_update.remove</T>\r\n                    </div>\r\n                  </span>\r\n                ) : (\r\n                  <ImgCrop rotate>\r\n                    <Upload\r\n                      aspect=\"3/2\"\r\n                      customRequest={dummyAfterPicRequest}\r\n                      multiple={false}\r\n                      onChange={onChange}\r\n                      showUploadList={false}\r\n                      progress={<Progress type=\"line\" />}\r\n                      // onPreview={onPreview}\r\n                    >\r\n                      <Button\r\n                        className=\"font-paragraph-white hover-orange\"\r\n                        style={{\r\n                          backgroundColor: \"var(--color-gray-light)\",\r\n                          border: \"none\",\r\n                        }}\r\n                      >\r\n                        <T>user_update.upload_after_image</T>\r\n                      </Button>\r\n                    </Upload>\r\n                  </ImgCrop>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <LoadingOutlined style={{ fontSize: \"30px\" }} />\r\n          ) : (\r\n            <button\r\n              className=\"font-paragraph-white\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                padding: \"10px 40px\",\r\n                border: \"none\",\r\n                margin: \"20px\",\r\n                fontSize: \"1.8rem\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => saveUserUpdate(\"save\")}\r\n            >\r\n              <T>user_update.save</T>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserUpdate;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\CookiePolicy.js",["627"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\MollieRedirectPage.js",["628"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\main.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\WorkoutCompleteModal.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\AllFaqs.js",[],["629","630"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\AllRecipes.js",["631"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaManager.js",["632","633","634","635","636","637"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\blogs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\UpdateProduct.js",["638","639","640","641"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ReplaceFreeChallengePopup.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomExercisePanel.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\reportWebVitals.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\RecipeProfile.js",["642","643","644","645","646","647","648"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\NewWelcome.js",["649","650"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\HelpPopupPlayer.js",["651","652","653","654","655","656"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport useWindowDimensions from \"../../helpers/useWindowDimensions\";\r\nimport { VideoSeekSlider } from \"react-video-seek-slider\";\r\nimport {\r\n  CaretRightOutlined,\r\n  PauseOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Modal from \"react-modal\";\r\nimport SquarePT from \"../../assets/icons/Square-PT.png\";\r\n// import PlayerPlayIcon from \"../../assets/icons/player-play-icon.svg\";\r\nimport PopupPlayIcon from \"../../assets/icons/help-pop-out-play-icon.svg\";\r\nimport PopupPauseIcon from \"../../assets/icons/help-pop-out-pause-icon.svg\";\r\n// import PlayerPauseIcon from \"../../assets/icons/player-pause-icon.svg\";\r\nimport \"../../assets/helpPopupPlayer.css\";\r\n\r\nconst formatTime = (seconds) => {\r\n  if (isNaN(seconds)) {\r\n    return \"00:00\";\r\n  }\r\n\r\n  const date = new Date(seconds * 1000);\r\n  const hh = date.getUTCHours();\r\n  const mm = date.getUTCMinutes();\r\n  const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n  if (hh) {\r\n    return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n  }\r\n  return `${mm}:${ss}`;\r\n};\r\n\r\nfunction HelpPopupPlayer({ open, setOpen, onCancel, exercise }) {\r\n  const playerRef = useRef(null);\r\n  const [progress, setProgress] = useState({});\r\n  const [playing, setPlaying] = useState(false);\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const currentTime = playerRef.current\r\n    ? playerRef.current.getCurrentTime()\r\n    : \"00:00\";\r\n\r\n  const duration = playerRef.current\r\n    ? playerRef.current.getDuration()\r\n    : \"00:00\";\r\n\r\n  const getTime = formatTime(duration - currentTime);\r\n  const elapsedTime = formatTime(currentTime);\r\n  const totalDuration = formatTime(duration);\r\n\r\n  const onSeek = (e) => {\r\n    setProgress({ ...progress, played: parseFloat(e / 100) });\r\n    playerRef.current.seekTo(e / 100);\r\n  };\r\n\r\n  const handleProgress = (changeState) => {\r\n    console.log(\"change state\", changeState);\r\n    console.log(\r\n      \" playerState.progress.loadedSeconds === playerState.progress.playedSeconds\",\r\n      progress.loadedSeconds === progress.playedSeconds\r\n    );\r\n    if (progress.loadedSeconds === progress.playedSeconds) {\r\n      // setPlayerState({ ...playerState, loading: true });\r\n      // setPlayerState({ ...playerState, playing: false });\r\n    } else {\r\n      // setPlayerState({ ...playerState, loading: false });\r\n      // setPlayerState({ ...playerState, playing: true });\r\n    }\r\n    // setPlayerState({ ...playerState, progress: changeState });\r\n    setProgress(changeState);\r\n  };\r\n\r\n  const onPlayPause = () => {\r\n    setPlaying(!playing);\r\n    // setPlaying(!playing);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      onRequestClose={() => {\r\n        setPlaying(false);\r\n        onCancel();\r\n      }}\r\n      contentLabel=\"Example Modal\"\r\n      style={{ zIndex: 3 }}\r\n    >\r\n      {console.log(exercise)}\r\n      <div\r\n        style={{\r\n          marginBottom: \"10px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <img src={SquarePT} alt=\"\" width=\"30px\" />{\" \"}\r\n          <span\r\n            className=\"font-paragraph-white\"\r\n            style={{ marginLeft: \"10px\", fontWeight: \"600\", fontSize: \"15px\" }}\r\n          >\r\n            Your Trainer\r\n          </span>\r\n        </div>\r\n        <CloseOutlined\r\n          style={{ color: \"#fff\", fontSize: \"30px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            setPlaying(false);\r\n            onCancel();\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"helpPopOut-player-wrapper\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        {console.log(exercise)}\r\n        <ReactPlayer\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          url={`${process.env.REACT_APP_SERVER}/uploads/${exercise.videoURL}`}\r\n          loop={true}\r\n          controls={false}\r\n          muted={true}\r\n          playing={playing}\r\n          stopOnUnmount={false}\r\n        />\r\n        {exercise.voiceOverLink && (\r\n          <ReactPlayer\r\n            ref={playerRef}\r\n            url={`${process.env.REACT_APP_SERVER}/uploads/${exercise.voiceOverLink}`}\r\n            playing={playing}\r\n            controls={true}\r\n            style={{ display: \"none\" }}\r\n            onProgress={handleProgress}\r\n            onPause={() => setPlaying(false)}\r\n            onPlay={() => setPlaying(true)}\r\n          />\r\n        )}\r\n\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            padding: \"20px 0\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              margin: \"0 30px\",\r\n            }}\r\n          >\r\n            {playing ? (\r\n              <img\r\n                src={PopupPauseIcon}\r\n                alt=\"skip-left-icon\"\r\n                style={{ cursor: \"pointer\", height: \"25px\" }}\r\n                className=\"controls-wrapper-bottom-icons\"\r\n                onClick={onPlayPause}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={PopupPlayIcon}\r\n                alt=\"skip-left-icon\"\r\n                style={{ cursor: \"pointer\", height: \"25px\" }}\r\n                className=\"controls-wrapper-bottom-icons\"\r\n                onClick={onPlayPause}\r\n              />\r\n            )}\r\n            <span className=\"font-paragraph-white\" style={{ fontSize: \"16px\" }}>\r\n              {getTime}\r\n            </span>\r\n          </div>\r\n          <div className=\"helpPopOut-progress-bar-container\">\r\n            <VideoSeekSlider\r\n              max={100}\r\n              currentTime={progress.played * 100}\r\n              progress={progress.loaded * 100}\r\n              onChange={onSeek}\r\n              offset={0}\r\n              limitTimeTooltipBySides={true}\r\n              hideSeekTimes={false}\r\n              secondsPrefix=\"00:00:\"\r\n              minutesPrefix=\"00:\"\r\n              tipFormatter={(v) => `${elapsedTime}`}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HelpPopupPlayer;\r\n",["657","658"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\AllChallenges.js",["659"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\NewUser.js",["660","661","662","663","664","665","666"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Select, List, Modal } from \"antd\";\r\nimport {\r\n  LoadingOutlined,\r\n  CloseSquareOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { registerUser } from \"../../../services/authentication\";\r\nimport { createCustomerDetails } from \"../../../services/customer\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport {\r\n  createUserByAdmin,\r\n  updateUserProfileByAdmin,\r\n} from \"../../../services/users\";\r\nimport {\r\n  createTrainerGoal,\r\n  deleteTrainerGoals,\r\n  getAllTrainerGoals,\r\n} from \"../../../services/trainers\";\r\nimport { getAllChallengeGoals } from \"../../../services/createChallenge/goals\";\r\nimport EditTypeName from \"./EditTypeName\";\r\n\r\nconst { Option } = Select;\r\nfunction NewUser({ setCurrentSelection, home }) {\r\n  const [form] = Form.useForm();\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n  // user stuff\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [membership, setMembership] = useState(\"\");\r\n  const [hero, setHero] = useState(\"\");\r\n  const [videoTrailer, setVideoTrailer] = useState(\"\");\r\n  const [motto, setMotto] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [allCountries, setAllCountries] = useState([]);\r\n  const [goals, setGoals] = useState([]);\r\n  const [gender, setGender] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  //trainer goals stuff\r\n  const [allTrainerGoals, setAllTrainerGoals] = useState([]);\r\n  const [allChallengeGoals, setAllChallengeGoals] = useState([]);\r\n  const [selectedFitnessInterest, setSelectedFitnessInterest] = useState(\"\");\r\n  const [selectedTrainerGoal, setSelectedTrainerGoal] = useState(\"\");\r\n  const [showTrainerGoalModal, setShowTrainerGoalModal] = useState(false);\r\n  const [newTrainerGoalName, setNewTrainerGoalName] = useState(\"\");\r\n\r\n  // update stuff\r\n  const [editItemNameModalVisible, setEditItemNameModalVisible] =\r\n    useState(false);\r\n\r\n  const [selectedItemForUpdate, setSelectedItemForUpdate] = useState({});\r\n  const [selectedItemForUpdateTitle, setSelectedItemForUpdateTitle] =\r\n    useState(\"\");\r\n\r\n  // admin\",\r\n  //           \"trainer\",\r\n  //           \"nutrist\",\r\n  //           \"blogger\",\r\n  //           \"shopmanager\",\r\n  //           \"customer\r\n\r\n  useEffect(() => {\r\n    const allCountries = require(\"../../../assets/data/all-countries.json\");\r\n    setAllCountries(allCountries);\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const res = await getAllTrainerGoals();\r\n    const aCh = await getAllChallengeGoals();\r\n\r\n    // console.log(\"aCh\", aCh);\r\n    if (res.goals) {\r\n      setAllTrainerGoals(res.goals);\r\n    }\r\n    if (aCh.challengeGoals) {\r\n      setAllChallengeGoals(aCh.challengeGoals);\r\n    }\r\n\r\n    console.log(\"res\", res);\r\n  };\r\n  const onFinish = (values) => {\r\n    // console.log(\"Success:\", values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  function generatePass() {\r\n    var length = 10,\r\n      charset =\r\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\r\n      retVal = \"\";\r\n    for (var i = 0, n = charset.length; i < length; ++i) {\r\n      retVal += charset.charAt(Math.floor(Math.random() * n));\r\n    }\r\n    setPassword(retVal);\r\n    form.setFieldsValue({\r\n      password: retVal,\r\n    });\r\n    return retVal;\r\n  }\r\n\r\n  const createANewUser = async () => {\r\n    let flag = false;\r\n    if (username && firstName && lastName && email && password) {\r\n      flag = true;\r\n    }\r\n    if (flag) {\r\n      setLoading(true);\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        password,\r\n        email,\r\n        gender,\r\n        username,\r\n        role: role.toLowerCase(),\r\n      };\r\n      const res = await createUserByAdmin(data);\r\n      console.log(\"yas0\", res);\r\n      if (res) {\r\n        if (role === \"ADMIN\") {\r\n          const data = {\r\n            heroBanner: \"\",\r\n            videoTrailerLink: \"\",\r\n            motto: \"\",\r\n            bio: \"\",\r\n            country: \"\",\r\n            gender: \"other\",\r\n            avatarLink: \"\",\r\n            trainersFitnessInterest: [],\r\n            trainerGoals: [],\r\n          };\r\n          await updateUserProfileByAdmin(data, res._id);\r\n          await createCustomerDetails(\r\n            {\r\n              gender,\r\n              goals: [],\r\n              currentFitnessLevel: [],\r\n              age: 10,\r\n              weight: 150,\r\n              measureSystem: \"metrics\",\r\n              height: 18,\r\n              bmi: 900,\r\n              bmir: 50,\r\n              caloriesPerDay: 200,\r\n              amountOfProtein: 25,\r\n              amountOfFat: 30,\r\n              amountOfCarbohydrate: 45,\r\n              avatarLink: \"some link\",\r\n            },\r\n            res._id\r\n          );\r\n          console.log(\"ADMIN CREATED\");\r\n          setLoading(false);\r\n        } else if (role === \"TRAINER\") {\r\n          const data = {\r\n            heroBanner: typeof hero === \"object\" ? hero.link : \"\",\r\n            videoTrailerLink:\r\n              typeof videoTrailer === \"object\" ? videoTrailer.link : \"\",\r\n            motto,\r\n            bio,\r\n            country,\r\n            gender,\r\n            avatarLink: typeof avatar === \"object\" ? avatar.link : \"\",\r\n            trainersFitnessInterest: selectedFitnessInterest,\r\n            trainerGoals: selectedTrainerGoal,\r\n          };\r\n          await updateUserProfileByAdmin(data, res._id);\r\n          console.log(\"TRAINER CREATED\");\r\n          setLoading(false);\r\n        } else {\r\n          const data = {\r\n            heroBanner: typeof hero === \"object\" ? hero.link : \"\",\r\n            videoTrailerLink:\r\n              typeof videoTrailer === \"object\" ? videoTrailer.link : \"\",\r\n            motto,\r\n            bio,\r\n            country,\r\n            gender,\r\n            avatarLink: typeof avatar === \"object\" ? avatar.link : \"\",\r\n          };\r\n          await updateUserProfileByAdmin(data, res._id);\r\n          console.log(\"BLOGGER NUTRIENT SHOP MANAGER CREATED\");\r\n          setLoading(false);\r\n        }\r\n        setCurrentSelection(home);\r\n      } else {\r\n        window.alert(\"Unable to create account. Please try again.\");\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* media manager */}\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n      {/*  */}\r\n      <EditTypeName\r\n        editItemNameModalVisible={editItemNameModalVisible}\r\n        setEditItemModelVisible={setEditItemNameModalVisible}\r\n        fethData={fetchData}\r\n        selectedItemForUpdate={selectedItemForUpdate}\r\n        titleName={selectedItemForUpdateTitle}\r\n      />\r\n      {/* modal to create a new trainer goal */}\r\n      <Modal\r\n        onCancel={() => setShowTrainerGoalModal(false)}\r\n        footer={false}\r\n        visible={showTrainerGoalModal}\r\n      >\r\n        {/* body focus stuff */}\r\n        <p className=\"font-paragraph-white\"> Create A New Fitness Interest</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newTrainerGoalName}\r\n            onChange={(e) => setNewTrainerGoalName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n            onClick={async () => {\r\n              if (newTrainerGoalName.length > 0) {\r\n                await createTrainerGoal({ name: newTrainerGoalName });\r\n                // setShowBodyfocusModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Fitness Interests</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allTrainerGoals}\r\n            renderItem={(g) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{g.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await deleteTrainerGoals(g._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Fitness Interest\");\r\n                      setSelectedItemForUpdate(g);\r\n                      setEditItemNameModalVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      {/* end */}\r\n      <h2 className=\"font-heading-black\">Create A New User</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          layout=\"vertical\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input username!\" }]}\r\n          >\r\n            <Input\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstname\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastname\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"gender\" label=\"Gender\">\r\n            <Select\r\n              className=\"field-focus-orange-border\"\r\n              placeholder=\"Select A Gender\"\r\n              onChange={(e) => setGender(e)}\r\n              gender={gender}\r\n              allowClear\r\n            >\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password\r\n              style={{ color: \"black\" }}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"font-paragraph-white\"\r\n              onClick={() => generatePass()}\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                float: \"right\",\r\n                margin: \"10px\",\r\n              }}\r\n            >\r\n              Generate Strong Password\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"role\"\r\n            label=\"Role\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              className=\"field-focus-orange-border\"\r\n              placeholder=\"Select A Role\"\r\n              onChange={(e) => setRole(e)}\r\n              allowClear\r\n            >\r\n              <Option value=\"ADMIN\">Admin</Option>\r\n              <Option value=\"TRAINER\">Trainer</Option>\r\n              <Option value=\"BLOGGER\">Blogger</Option>\r\n              <Option value=\"NUTRIST\">Nutrist</Option>\r\n              <Option value=\"SHOPMANAGER\">Shop Manager</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          {role.includes(\"CUSTOMER\") ? (\r\n            <Form.Item\r\n              name=\"membership\"\r\n              label=\"Membership\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                mode=\"multiple\"\r\n                className=\"field-focus-orange-border\"\r\n                placeholder=\"Select A Membership\"\r\n                onChange={(e) => setMembership(e)}\r\n                allowClear\r\n              >\r\n                {[\r\n                  \"Challenge Three\",\r\n                  \"Challenge One\",\r\n                  \"Challenge Twelve\",\r\n                  \"Free\",\r\n                ].map((e) => (\r\n                  <Option value={e}>{e}</Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {!role.includes(\"ADMIN\") && (\r\n            <>\r\n              <Form.Item label=\"Avatar\" name=\"avatar\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setMediaManagerVisible(true);\r\n                    setMediaManagerType(\"images\");\r\n                    setMediaManagerActions([avatar, setAvatar]);\r\n                  }}\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n                {avatar && (\r\n                  <div style={{ margin: \"10px\" }}>\r\n                    <img\r\n                      src={`${process.env.REACT_APP_SERVER}/uploads/${avatar.link}`}\r\n                      // height=\"120px\"\r\n                      // width=\"150px\"\r\n                      height=\"auto\"\r\n                      width={\"80%\"}\r\n                      alt=\"\"\r\n                    />\r\n                    <div>\r\n                      {avatar.name}{\" \"}\r\n                      <CloseSquareOutlined\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setAvatar(\"\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Hero\" name=\"hero\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setMediaManagerVisible(true);\r\n                    setMediaManagerType(\"images\");\r\n                    setMediaManagerActions([hero, setHero]);\r\n                  }}\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n                {hero && (\r\n                  <div style={{ margin: \"10px\" }}>\r\n                    <img\r\n                      src={`${process.env.REACT_APP_SERVER}/uploads/${hero.link}`}\r\n                      alt=\"\"\r\n                      height=\"50%\"\r\n                      width={\"80%\"}\r\n                    />\r\n                    <div>\r\n                      {hero.name}{\" \"}\r\n                      <CloseSquareOutlined\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setHero(\"\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Video Trailer\" name=\"videoTrailer\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setMediaManagerVisible(true);\r\n                    setMediaManagerType(\"videos\");\r\n                    setMediaManagerActions([videoTrailer, setVideoTrailer]);\r\n                  }}\r\n                >\r\n                  Upload Video\r\n                </Button>\r\n                {videoTrailer && (\r\n                  <div style={{ margin: \"10px\" }}>\r\n                    <span>\r\n                      {videoTrailer.name}{\" \"}\r\n                      <CloseSquareOutlined\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setVideoTrailer(\"\")}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Motto\" name=\"motto\">\r\n                <Input\r\n                  value={motto}\r\n                  onChange={(e) => setMotto(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item label=\"Bio\" name=\"bio\">\r\n                <Input.TextArea\r\n                  rows={8}\r\n                  value={bio}\r\n                  onChange={(e) => setBio(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item label=\"Country\" name=\"country\">\r\n                <Select\r\n                  value={country}\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={(e) => setCountry(e)}\r\n                  showSearch\r\n                >\r\n                  {allCountries.map((co) => (\r\n                    <Option value={co.name}>{co.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          {role.includes(\"TRAINER\") && (\r\n            // <Form.Item label=\"Goals\" name=\"goals\">\r\n            //   <Select\r\n            //     value={goals}\r\n            //     style={{ width: \"100%\" }}\r\n            //     onChange={(e) => setGoals(e)}\r\n            //     mode=\"multiple\"\r\n            //   >\r\n            //     {[\r\n            //       \"Behaviour\",\r\n            //       \"Bootcamp\",\r\n            //       \"Boxing\",\r\n            //       \"Bulking\",\r\n            //       \"Callisthenics\",\r\n            //       \"Condition\",\r\n            //       \"Cross Fit\",\r\n            //       \"Cutting\",\r\n            //       \"Diet\",\r\n            //       \"Endurance\",\r\n            //       \"Fatburn\",\r\n            //       \"Gain Muscle\",\r\n            //       \"Get Fit\",\r\n            //       \"Gymnastics\",\r\n            //       \"Health\",\r\n            //       \"HIIT\",\r\n            //       \"Hypertrophy\",\r\n            //       \"Injuries\",\r\n            //       \"Knowledge\",\r\n            //       \"Lose weight\",\r\n            //       \"Meditation\",\r\n            //       \"Metabolism\",\r\n            //       \"Mindset\",\r\n            //       \"Mobility\",\r\n            //       \"Nutrition\",\r\n            //       \"Overweight\",\r\n            //       \"Physiotherapy\",\r\n            //       \"Powerlifting\",\r\n            //       \"Pregnant\",\r\n            //       \"Prevention\",\r\n            //       \"Recover\",\r\n            //       \"Revalidation\",\r\n            //       \"Run\",\r\n            //       \"Seniors\",\r\n            //       \"Stay Fit\",\r\n            //       \"Strength\",\r\n            //       \"Stretch\",\r\n            //       \"Technique\",\r\n            //       \"Yoga\",\r\n            //     ].map((co) => (\r\n            //       <Option value={co}>{co}</Option>\r\n            //     ))}\r\n            //   </Select>\r\n            // </Form.Item>\r\n\r\n            <>\r\n              <Form.Item label=\"Goals\" name=\"goals\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  allowClear\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Please select\"\r\n                  value={\r\n                    selectedTrainerGoal.length <= 0 ? [] : selectedTrainerGoal\r\n                  }\r\n                  onChange={(e) => setSelectedTrainerGoal(e)}\r\n                >\r\n                  {allChallengeGoals.map((g) => (\r\n                    <Option value={g._id}>{g.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Fitness Interests\" name=\"fitnessInterest\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  allowClear\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Please select\"\r\n                  value={\r\n                    selectedFitnessInterest.length <= 0\r\n                      ? []\r\n                      : selectedFitnessInterest\r\n                  }\r\n                  onChange={(e) => setSelectedFitnessInterest(e)}\r\n                >\r\n                  {allTrainerGoals.map((g) => (\r\n                    <Option value={g._id}>{g.name}</Option>\r\n                  ))}\r\n                </Select>\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"var(--color-orange)\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    float: \"right\",\r\n                    marginTop: \"5px\",\r\n                  }}\r\n                  onClick={() => setShowTrainerGoalModal(true)}\r\n                >\r\n                  Manage Fitness Interests\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n              }}\r\n              onClick={createANewUser}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUser;\r\n",["667","668"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\posts.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\communityPosts.js",[],["669","670"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMainTab.js",["671","672","673","674","675"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomWeekPanel.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\CommentSection.js",["676","677"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CloseOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { Input, Button } from \"antd\";\r\nimport { addNewComment } from \"../../services/posts\";\r\nimport { addNewCommunityPostComment } from \"../../services/communityPosts\";\r\nimport Modal from \"react-modal\";\r\nimport \"../../assets/challengeReviewModal.css\";\r\nimport moment from \"moment\";\r\nimport { userInfoContext } from \"../../contexts/UserStore\";\r\nimport TopIcon from \"../../assets/icons/comment-header-icon.svg\";\r\nimport useWindowDimensions from \"../../helpers/useWindowDimensions\";\r\nimport NoCommentBack from \"../../assets/icons/no-comments-background.svg\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\n\r\nfunction CommentSection({ post, updatePosts, visible, setVisible, community }) {\r\n  const userInfo = useContext(userInfoContext)[0];\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [allComments, setAllComments] = useState([]);\r\n  const { width } = useWindowDimensions();\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: width < 700 ? \"90%\" : \"60%\",\r\n      overflow: \"hidden\",\r\n      // height:\"600px\"\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(post);\r\n    setAllComments(post.comments ? post.comments : []);\r\n  }, [post]);\r\n\r\n  const addComment = async () => {\r\n    if (newComment.length > 0) {\r\n      if (community) {\r\n        var n = await addNewCommunityPostComment(post._id, {\r\n          text: newComment,\r\n        });\r\n      } else {\r\n        var n = await addNewComment(post._id, { text: newComment });\r\n      }\r\n\r\n      console.log(n);\r\n      setAllComments(n);\r\n      setNewComment(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={visible}\r\n      onRequestClose={() => {\r\n        setVisible(false);\r\n        updatePosts(post._id, allComments);\r\n      }}\r\n      style={customStyles}\r\n      contentLabel=\"Comments\"\r\n    >\r\n      <div className=\"challenge-review-modal-header\">\r\n        <span>\r\n          <img src={TopIcon} alt=\"\" />\r\n          <span className=\"font-paragraph-white\" style={{ marginLeft: \"10px\" }}>\r\n            COMMENTS\r\n          </span>\r\n        </span>\r\n        <CloseOutlined\r\n          style={{ color: \"#fff\", fontSize: \"26px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            setVisible(false);\r\n            updatePosts(post._id, allComments);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"challenge-review-modal\">\r\n        <Scrollbars style={{ height: \"400px\" }}>\r\n          {allComments.length > 0 ? (\r\n            allComments.map((comment) => (\r\n              // <div className=\"challenge-profile-comment font-paragraph-white\">\r\n              //   <span className=\"challenge-profile-comment-username\">\r\n              //     <UserOutlined /> {comment.username}\r\n              //   </span>\r\n              //   <span>{comment.text}</span>\r\n              // </div>\r\n              <div\r\n                className=\"comment-container\"\r\n                style={{ marginBottom: width < 700 ? \"20px\" : \"10px\" }}\r\n              >\r\n                <div\r\n                  className=\"comment-container-c1 font-paragraph-white\"\r\n                  style={{\r\n                    alignItems: \"flex-start\",\r\n                    flexDirection: width < 700 ? \"column\" : \"row\",\r\n                  }}\r\n                >\r\n                  <Avatar src={comment.user.avatarLink} shape=\"square\" />{\" \"}\r\n                  <span\r\n                    style={{\r\n                      marginLeft: \"5px\",\r\n                      fontWeight: \"bolder\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                  >\r\n                    {comment.user.username}\r\n                  </span>\r\n                  <div style={{ paddingLeft: width < 700 ? \"0\" : \"20px\" }}>\r\n                    <div\r\n                      className=\"comment-container-c2 font-paragraph-white\"\r\n                      style={{\r\n                        padding: 0,\r\n                        fontWeight: \"200\",\r\n                        fontSize: \"14px\",\r\n                      }}\r\n                    >\r\n                      {comment.text}\r\n                    </div>\r\n                    <div\r\n                      className=\"font-paragraph-white comment-container-c3\"\r\n                      style={{ color: \"#82868b\", padding: 0 }}\r\n                    >\r\n                      {moment(comment.createdAt).format(\"MMM, Do YY\")}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <img\r\n              src={NoCommentBack}\r\n              alt=\"\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            />\r\n          )}\r\n        </Scrollbars>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n            <Avatar\r\n              src={`${process.env.REACT_APP_SERVER}/uploads/${userInfo.avatar}`}\r\n              shape=\"square\"\r\n              style={{ marginRight: \"10px\" }}\r\n            />{\" \"}\r\n            <Input.TextArea\r\n              rows=\"3\"\r\n              placeholder=\"Enter New Comment\"\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              margin: \"10px 10px 10px 40px\",\r\n            }}\r\n          >\r\n            <Button\r\n              className=\"font-paragraph-white\"\r\n              style={{\r\n                padding: \"3px 20px\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"2px solid #ff7700\",\r\n                borderRadius: \"0\",\r\n              }}\r\n              onClick={() => {\r\n                setVisible(false);\r\n                updatePosts(post._id, allComments);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"common-orange-button font-paragraph-white\"\r\n              style={{ padding: \"3px 10px\", borderRadius: \"0\" }}\r\n              onClick={() => addComment()}\r\n            >\r\n              New Comment\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CommentSection;\r\n",["678","679"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\LanguageContext.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AdminDashboard.js",["680","681"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Footer.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\customer.js",[],["682","683"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RequestManager\\AllRequests.js",["684","685","686"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\UpdateFaq.js",["687","688","689"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMusicTab.js",["690","691"],"import React, { useState } from \"react\";\r\nimport { List, Divider, Input, Button, Upload, message } from \"antd\";\r\nimport { v4 } from \"uuid\";\r\nimport { DeleteOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\n\r\nfunction NewChallengeMusicTab({ musics, setMusics, update }) {\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n\r\n  var music = {\r\n    musicId: v4(),\r\n    name: \"\",\r\n    file: \"\",\r\n  };\r\n\r\n  const handleMusicNameChange = (value, id) => {\r\n    let w = [...musics];\r\n    w = w.map((i) => {\r\n      if (i.musicId === id) {\r\n        return {\r\n          ...i,\r\n          name: value,\r\n        };\r\n      }\r\n      return i;\r\n    });\r\n    setMusics(w);\r\n  };\r\n  const addMusicFile = () => {\r\n    setMusics((prev) => [...prev, music]);\r\n  };\r\n  const dummyNonRenderedWorkoutExerciseAudio = (id, file) => {\r\n    let w = [...musics];\r\n    w = w.map((i) => {\r\n      if (i.musicId === id) {\r\n        return {\r\n          ...i,\r\n          file: file,\r\n        };\r\n      }\r\n      return i;\r\n    });\r\n    setMusics(w);\r\n  };\r\n\r\n  const musicFileDelete = (id) => {\r\n    let w = [...musics];\r\n    w = w.map((i) => {\r\n      if (i.musicId === id) {\r\n        return {\r\n          ...i,\r\n          file: \"\",\r\n        };\r\n      }\r\n      return i;\r\n    });\r\n    setMusics(w);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n      <Divider orientation=\"left\">Create Music Playlist</Divider>\r\n      <List\r\n        header={\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div className=\"font-subheading-black\">Music Files</div>{\" \"}\r\n            <Button onClick={addMusicFile}>Add Music</Button>\r\n          </div>\r\n        }\r\n        footer={false}\r\n        bordered\r\n        dataSource={musics}\r\n        renderItem={(music) => (\r\n          <List.Item\r\n            key={music.musicId ? music.musicId : music._id}\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr 1fr\",\r\n              gridGap: \"20px\",\r\n            }}\r\n          >\r\n            <Input\r\n              placeholder=\"Input Music Name\"\r\n              value={music.name}\r\n              onChange={(e) =>\r\n                handleMusicNameChange(e.target.value, music.musicId)\r\n              }\r\n            />\r\n            <div>\r\n              <p\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  color: \"var(--color-orange)\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                Upload Music File\r\n              </p>\r\n              {/* <Upload\r\n                multiple={false}\r\n                showUploadList={false}\r\n                beforeUpload={checkForAudio}\r\n                customRequest={(j) =>\r\n                  dummyNonRenderedWorkoutExerciseAudio(j, music.musicId)\r\n                }\r\n              > */}\r\n              {console.log(\"musics\", musics)}\r\n              {typeof music === \"object\" && !music.file && (\r\n                <Button\r\n                  className=\"new-workout-creator-container-1-btn font-paragraph-white\"\r\n                  style={{ marginTop: 0 }}\r\n                  icon={<UploadOutlined />}\r\n                  onClick={() => {\r\n                    setMediaManagerVisible(true);\r\n                    setMediaManagerType(\"musics\");\r\n                    setMediaManagerActions([\r\n                      \"\",\r\n                      dummyNonRenderedWorkoutExerciseAudio,\r\n                      music.musicId,\r\n                    ]);\r\n                  }}\r\n                >\r\n                  Click to Upload\r\n                </Button>\r\n              )}\r\n              {/* </Upload> */}\r\n              <div className=\"font-paragraph-black\">\r\n                {music.file && music.file.name}{\" \"}\r\n                {music.file && (\r\n                  <span\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => musicFileDelete(music.musicId)}\r\n                  >\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewChallengeMusicTab;\r\n",["692","693"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\shop.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Nutrition\\SearchNutrition.js",["694"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\PaymentProcessStore.js",[],["695","696"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AllChallenges.js",["697","698","699","700","701"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengePlayer.js",["702","703","704","705"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\PackageSelector.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\goals.js",[],["706","707"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\mediaManager.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\AllProducts.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\EditTypeName.js",["708"],"import React, { useState } from \"react\";\r\nimport { Button, Input, Modal } from \"antd\";\r\nimport { updateBlogCategory } from \"../../../services/blogs\";\r\nimport {\r\n  updateDiet,\r\n  updateFoodType,\r\n  updateIngredient,\r\n  updateMealType,\r\n} from \"../../../services/recipes\";\r\n\r\nfunction EditTypeName({\r\n  editCategoryNameModalVisible,\r\n  setEditCategoryModelVisible,\r\n  selectedForUpdate,\r\n  fethData,\r\n  titleName,\r\n}) {\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  React.useEffect(() => {\r\n    if (selectedForUpdate) {\r\n      setNewCategoryName(selectedForUpdate.name);\r\n    }\r\n  }, [selectedForUpdate]);\r\n\r\n  const updateItem = async () => {\r\n    if (newCategoryName.length > 0) {\r\n      if (titleName === \"Update Meal Type\") {\r\n        await updateMealType(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      if (titleName === \"Update Food Type\") {\r\n        await updateFoodType(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      if (titleName === \"Update Diet Type\") {\r\n        await updateDiet(newCategoryName, selectedForUpdate._id);\r\n      }\r\n\r\n      if (titleName === \"Update Ingredient\") {\r\n        await updateIngredient(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      setEditCategoryModelVisible(false);\r\n      fethData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onCancel={() => setEditCategoryModelVisible(false)}\r\n      footer={false}\r\n      visible={editCategoryNameModalVisible}\r\n    >\r\n      <p className=\"font-paragraph-white\">{titleName}</p>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Input\r\n          value={newCategoryName}\r\n          onChange={(e) => setNewCategoryName(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={updateItem}\r\n          style={{\r\n            backgroundColor: \"var(--color-orange)\",\r\n            borderColor: \"var(--color-orange)\",\r\n            marginLeft: \"5px\",\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditTypeName;\r\n",["709","710"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Challenges.js",["711","712"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteNextModal.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Pricing.js",["713"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\MagazineArticle.js",["714"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ResetNewPassword.js",["715","716"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\UpdateChallenge.js",["717","718","719","720","721","722"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\AllUsers.js",["723"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table, Space, Input, Select } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { deleteUser, getAllUsers } from \"../../../services/users\";\r\nimport UpdateUser from \"./UpdateUser\";\r\nimport { getAllChallengeGoals } from \"../../../services/createChallenge/goals\";\r\n\r\nfunction AllUsers() {\r\n  const [filterAllUsers, setFilterAllUsers] = useState([]);\r\n  const [allChallengeGoals, setAllChallengeGoals] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  async function fetchUsers() {\r\n    const users = await getAllUsers();\r\n    const aCh = await getAllChallengeGoals();\r\n    if (aCh.challengeGoals) {\r\n      setAllChallengeGoals(aCh.challengeGoals);\r\n    }\r\n    setAllUsers(users.users);\r\n    setFilterAllUsers(users.users);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filter === \"all\") {\r\n      setFilterAllUsers(allUsers);\r\n    }\r\n    if (filter === \"admin\") {\r\n      const admins = allUsers.filter((f) => f.role === \"admin\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"customer\") {\r\n      const admins = allUsers.filter((f) => f.role === \"customer\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"nutrist\") {\r\n      const admins = allUsers.filter((f) => f.role === \"nutrist\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"shopmanager\") {\r\n      const admins = allUsers.filter((f) => f.role === \"shopmanager\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"blogger\") {\r\n      const admins = allUsers.filter((f) => f.role === \"blogger\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"trainer\") {\r\n      const admins = allUsers.filter((f) => f.role === \"trainer\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n  }, [allUsers, filter]);\r\n\r\n  const removeUser = async (d) => {\r\n    await deleteUser(d._id);\r\n    fetchUsers();\r\n  };\r\n\r\n  const onUpdateComplete = async (setLoading, vals, blogId) => {\r\n    // await updateBlog(vals, blogId);\r\n    // setLoading(false);\r\n    // setShow(false);\r\n    // fetchData();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    // {\r\n    //   title: \"Firstname\",\r\n    //   dataIndex: \"firstName\",\r\n    //   key: \"firstname\",\r\n    //   render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    // },\r\n    // {\r\n    //   title: \"Lastname\",\r\n    //   dataIndex: \"lastName\",\r\n    //   key: \"lastname\",\r\n    //   render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    // },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n\r\n    {\r\n      title: \"Role\",\r\n      key: \"role\",\r\n      dataIndex: \"role\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\" style={{ color: \"#ff7700\" }}>\r\n          {text}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Created At\",\r\n      key: \"updatedAt\",\r\n      dataIndex: \"updatedAt\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">\r\n          {moment(text).format(\"DD/MM/YYYY\")}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"challengePreviewLink\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setSelectedUser(record);\r\n              setShow(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button type=\"danger\" onClick={() => removeUser(record)}>\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <UpdateUser\r\n        userInfo={selectedUser}\r\n        show={show}\r\n        setShow={setShow}\r\n        onUpdateComplete={onUpdateComplete}\r\n        allChallengeGoals={allChallengeGoals}\r\n        fetchUsers={fetchUsers}\r\n        key={selectedUser ? selectedUser._id : \"\"}\r\n      />\r\n      <h2 className=\"font-heading-black\">All Users</h2>\r\n      <div>\r\n        <span className=\"font-heading-black\" style={{ marginLeft: \"10px\" }}>\r\n          Filter By Role:\r\n        </span>\r\n        <Select\r\n          defaultValue=\"\"\r\n          style={{ width: 120, marginLeft: \"10px\" }}\r\n          onChange={(e) => setFilter(e)}\r\n        >\r\n          {[\r\n            \"all\",\r\n            \"admin\",\r\n            \"customer\",\r\n            \"trainer\",\r\n            \"blogger\",\r\n            \"shopmanager\",\r\n            \"nutrist\",\r\n          ].map((t) => (\r\n            <Select.Option value={t}>{t}</Select.Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className=\"admin-allchallenges-list-container\">\r\n        <Input\r\n          placeholder=\"Search Users By Username\"\r\n          onChange={(e) =>\r\n            setFilterAllUsers(\r\n              allUsers.filter((user) =>\r\n                user.username\r\n                  .toUpperCase()\r\n                  .includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Input\r\n          placeholder=\"Search User By ID\"\r\n          style={{ marginTop: \"10px\" }}\r\n          onChange={(e) =>\r\n            setFilterAllUsers(\r\n              allUsers.filter((user) =>\r\n                user._id.toUpperCase().includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Table columns={columns} dataSource={filterAllUsers} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllUsers;\r\n",["724","725"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeAdditionalTab.js",["726","727","728","729","730"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\Player.js",["731","732","733","734"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HowItWork.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\authentication.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\UpdateUser.js",["735","736","737","738","739","740","741"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengeProfile.js",["742","743","744","745","746"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\RenderedVideoPlayer.js",["747","748","749","750"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport \"../../assets/video-player-design.css\";\r\nimport \"../../assets/player.css\";\r\nimport ReactPlayer from \"react-player\";\r\nimport BreakTimer from \"./BreakTimer\";\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport tune from \"../../assets/music/break-start.wav\";\r\nimport {\r\n  breakContext,\r\n  exerciseWorkoutTimeTrackContext,\r\n  playerStateContext,\r\n  timerVisibleContext,\r\n} from \"../../contexts/PlayerState\";\r\n\r\nvar count = 0;\r\n\r\nconst playAudio = () => {\r\n  new Audio(tune).play();\r\n};\r\nfunction RenderedVideoPlayer({\r\n  exercise,\r\n  musics,\r\n  moveToNextExercise,\r\n  moveToPrevExercise,\r\n  nextExerciseTitle,\r\n  completed,\r\n  // for full screen player video browser\r\n  workout,\r\n  setExerciseForHelpModal,\r\n  setOpenHelpModal,\r\n  setCurrentExercise,\r\n  currentExercise,\r\n  challengePageAddress,\r\n}) {\r\n  const [timerVisible, setTimerVisible] = useContext(timerVisibleContext);\r\n  const [playerState, setPlayerState] = useContext(playerStateContext);\r\n  // const [currentBreak, setCurrentBreak] = useContext(breakContext);\r\n  const [exerciseWorkoutTimeTrack, setExerciseWorkoutTimeTrack] = useContext(\r\n    exerciseWorkoutTimeTrackContext\r\n  );\r\n  const [exerciseSeconds, setExerciseSeconds] = useState(-1);\r\n  const playerRef = useRef(null);\r\n  const playerContainerRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const descriptionRef = useRef(null);\r\n  //   const time = new Date();\r\n  //   time.setSeconds(time.getSeconds() + 600);\r\n  //   const {\r\n  //     seconds,\r\n  //     minutes,\r\n  //     hours,\r\n  //     days,\r\n  //     isRunning,\r\n  //     start,\r\n  //     pause,\r\n  //     resume,\r\n  //     restart,\r\n  //   } = useTimer({\r\n  //     expiryTimestamp: time,\r\n  //     onExpire: () => console.warn(\"onExpire called\"),\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    const sumAllBreakTime =\r\n      workout && workout.exercises.reduce((a, b) => a + (b[\"break\"] || 0), 0);\r\n    const sumAllExerciseDuration =\r\n      workout &&\r\n      workout.exercises.reduce(\r\n        (a, b) => a + (parseInt(b[\"exerciseLength\"]) || 0),\r\n        0\r\n      );\r\n    console.log(\"sumAllBreakTime\", workout + sumAllExerciseDuration);\r\n    const d = sumAllExerciseDuration + sumAllBreakTime;\r\n    setExerciseWorkoutTimeTrack((prev) => ({ ...prev, total: d }));\r\n  }, [workout]);\r\n\r\n  useEffect(() => {\r\n    // start();\r\n\r\n    exercise.exerciseLength\r\n      ? setExerciseSeconds(parseInt(exercise.exerciseLength))\r\n      : setExerciseSeconds(Math.round(playerRef.current.getDuration()));\r\n  }, [exercise]);\r\n\r\n  useEffect(() => {\r\n    if (exerciseSeconds === 0) {\r\n      playAudio();\r\n      if (workout.exercises[currentExercise.index + 1]) {\r\n        // this was how it was originall\r\n        setPlayerState({ ...playerState, playing: false });\r\n        setTimerVisible(true);\r\n        // these are new stuff\r\n        // setPlayerState({ ...playerState, playing: false });\r\n        // moveToNextExercise();\r\n        // setTimerVisible(true);\r\n      } else {\r\n        moveToNextExercise();\r\n        // setPlayerState({ ...playerState, playing: true });\r\n      }\r\n      return;\r\n    }\r\n  }, [exerciseSeconds]);\r\n\r\n  const handleProgress = (changeState) => {\r\n    if (count > 1) {\r\n      controlsRef.current.style.visibility = \"hidden\";\r\n      descriptionRef.current.style.visibility = \"visible\";\r\n      count = 0;\r\n    }\r\n    if (controlsRef.current.style.visibility === \"visible\") {\r\n      count += 1;\r\n    }\r\n\r\n    // setPlayerState({ ...playerState, progress: changeState });\r\n    // seconds++;\r\n\r\n    if (exerciseSeconds > 0 && playerState.playing && !playerState.loading) {\r\n      setExerciseSeconds(exerciseSeconds - 1);\r\n      setExerciseWorkoutTimeTrack((prev) => ({\r\n        ...prev,\r\n        current: prev.current + 1,\r\n      }));\r\n    }\r\n\r\n    setPlayerState({ ...playerState, progress: changeState });\r\n  };\r\n\r\n  const handleMouseMove = () => {\r\n    controlsRef.current.style.visibility = \"visible\";\r\n    descriptionRef.current.style.visibility = \"hidden\";\r\n    count = 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"player-wrapper\"\r\n      style={{ position: \"relative\" }}\r\n      ref={playerContainerRef}\r\n      onMouseMove={handleMouseMove}\r\n    >\r\n      <ReactPlayer\r\n        ref={playerRef}\r\n        className=\"react-player\"\r\n        onBuffer={() => {\r\n          setPlayerState({ ...playerState, loading: true });\r\n        }}\r\n        onBufferEnd={() => {\r\n          setPlayerState({ ...playerState, loading: false });\r\n        }}\r\n        playing={playerState.playing}\r\n        muted={playerState.muted}\r\n        loop={currentExercise.index === 0 ? false : true}\r\n        volume={playerState.volume}\r\n        url={\r\n          exercise.videoURL\r\n            ? `${process.env.REACT_APP_SERVER}/uploads/${exercise.videoURL}`\r\n            : \"\"\r\n        }\r\n        progress={playerState.progress}\r\n        onProgress={handleProgress}\r\n        // onEnded={() => {\r\n        //   if (currentExercise.index === 0) {\r\n        //     playAudio();\r\n        //     if (workout.exercises[currentExercise.index + 1]) {\r\n        //       // this was how it was originall\r\n        //       setPlayerState({ ...playerState, playing: false });\r\n        //       setTimerVisible(true);\r\n        //       // these are new stuff\r\n        //       // setPlayerState({ ...playerState, playing: false });\r\n        //       // moveToNextExercise();\r\n        //       // setTimerVisible(true);\r\n        //     } else {\r\n        //       moveToNextExercise();\r\n        //       // setPlayerState({ ...playerState, playing: true });\r\n        //     }\r\n        //   }\r\n        // }}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        controls={false}\r\n      />\r\n      <PlayerControls\r\n        ref={controlsRef}\r\n        descriptionRef={descriptionRef}\r\n        playerRef={playerRef}\r\n        exerciseTitle={exercise.title ? exercise.title : \"\"}\r\n        exerciseLength={exercise.exerciseLength ? exercise.exerciseLength : \"\"}\r\n        breakTime={exercise.break ? exercise.break : \"\"}\r\n        playerContainerRef={playerContainerRef}\r\n        musicList={musics}\r\n        challengePageAddress={challengePageAddress}\r\n        exerciseSeconds={exerciseSeconds}\r\n        // for full screen player video browser\r\n        workout={workout}\r\n        setExerciseForHelpModal={setExerciseForHelpModal}\r\n        setOpenHelpModal={setOpenHelpModal}\r\n        setCurrentExercise={setCurrentExercise}\r\n        currentExercise={currentExercise}\r\n        moveToNextExercise={moveToNextExercise}\r\n        moveToPrevExercise={moveToPrevExercise}\r\n      />\r\n\r\n      {timerVisible && (\r\n        <BreakTimer\r\n          moveToNextExercise={moveToNextExercise}\r\n          nextExerciseTitle={nextExerciseTitle}\r\n          exercise={workout.exercises[currentExercise.index]}\r\n          timerVisible={timerVisible}\r\n          setTimerVisible={setTimerVisible}\r\n        />\r\n      )}\r\n      {/* music player */}\r\n\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderedVideoPlayer;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\NonRenderedVideoPlayer.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ForgotPassword.js",["751"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\ChoosePlan.js",["752","753","754","755"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Cards\\ChallengeCard.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\coupons.js",[],["756","757"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\faqs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\AllCoupons.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Community.js",["758","759","760","761","762","763","764","765"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\UpdatePost.js",["766","767"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Select, Modal } from \"antd\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport { createPost } from \"../../../services/posts\";\r\n\r\nfunction UpdatePost({ postInfo, show, setShow, onUpdateComplete }) {\r\n  const [form] = Form.useForm();\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n  const [type, setType] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: postInfo.title,\r\n      description: postInfo.text,\r\n      category: postInfo.type,\r\n    });\r\n    setType(postInfo.type);\r\n    setImage({ name: postInfo.image, link: postInfo.image });\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    if (type && image) {\r\n      const data = {\r\n        id: postInfo._id,\r\n        title: values.name,\r\n        text: values.description,\r\n        image: typeof image === \"object\" ? image.link : \"\",\r\n        type: type,\r\n      };\r\n      onUpdateComplete(data);\r\n    } else {\r\n      window.alert(\"All values are requeired to create a post\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width=\"60%\"\r\n      visible={show}\r\n      footer={false}\r\n      onCancel={() => setShow(false)}\r\n      onOk={onUpdateComplete}\r\n    >\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n      <h2 className=\"font-heading-white\">Update Post</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Post Title\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input post title!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Post Description\"\r\n            name=\"description\"\r\n            rules={[\r\n              { required: true, message: \"Please input post description!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Post Image\" name=\"image\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"images\");\r\n                setMediaManagerActions([image, setImage]);\r\n              }}\r\n            >\r\n              Upload Image\r\n            </Button>\r\n            <div\r\n              className=\"font-paragraph-white\"\r\n              style={{ color: \"#ff7700\", margin: \"5px 0\" }}\r\n            >\r\n              {image && (\r\n                <img\r\n                  src={`${process.env.REACT_APP_SERVER}/uploads/${image.link}`}\r\n                  alt=\"\"\r\n                  height=\"100px\"\r\n                />\r\n              )}\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item label=\"Post Category\" name=\"category\" required={true}>\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              value={type}\r\n              placeholder=\"Please select\"\r\n              onChange={(e) => setType(e)}\r\n            >\r\n              {[\"Challenge\", \"Magazine\", \"Recipe\", \"News Updates\"].map(\r\n                (e, i) => (\r\n                  <Select.Option key={i + 1} value={e}>\r\n                    {e}\r\n                  </Select.Option>\r\n                )\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdatePost;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserDashboard.js",["768","769","770"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\NewBlog.js",["771","772","773","774"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\UpdateExercise.js",["775"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\UpdateCoupon.js",["776","777"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input, Modal, Form, InputNumber, Switch, Select } from \"antd\";\r\nimport { updateCoupon } from \"../../../services/coupons\";\r\n\r\nfunction UpdateCoupon({\r\n  visible,\r\n  setVisible,\r\n  selectedCoupon,\r\n  fetchData,\r\n  allChallenges,\r\n}) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState();\r\n  const [code, setCode] = useState(\"\");\r\n  const [active, setActive] = useState(null);\r\n  const [applicableOn, setApplicableOn] = useState([]);\r\n  const [challengesApplicableOn, setChallengesApplicableOn] = useState([]);\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: selectedCoupon.name,\r\n      couponCode: selectedCoupon.code,\r\n      usageCount: selectedCoupon.limitUsage,\r\n      discount: selectedCoupon.discountPercent,\r\n      active: selectedCoupon.isActive,\r\n      applicableOn: selectedCoupon.applicableOn,\r\n      challengesApplicableOn: selectedCoupon.challengesApplicableOn,\r\n    });\r\n    setCode(selectedCoupon.code);\r\n    setActive(selectedCoupon.isActive);\r\n    setApplicableOn(selectedCoupon.applicableOn);\r\n    setChallengesApplicableOn(\r\n      selectedCoupon.challengesApplicableOn ? challengesApplicableOn : []\r\n    );\r\n  }, [selectedCoupon]);\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    if (code.length > 0) {\r\n      const s = {\r\n        name: values.name,\r\n        code: code,\r\n        discountPercent: parseInt(values.discount),\r\n        limitUsage: values.usageCount,\r\n        isActive: values.active,\r\n        applicableOn: values.applicableOn,\r\n        challengesApplicableOn:\r\n          challengesApplicableOn.length > 0 ? challengesApplicableOn : null,\r\n      };\r\n      const res = await updateCoupon(s, selectedCoupon._id);\r\n      fetchData();\r\n      console.log(res);\r\n    } else {\r\n      alert(\"Please enter coupon code\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width=\"60%\"\r\n      visible={visible}\r\n      footer={false}\r\n      onCancel={() => setVisible(false)}\r\n    >\r\n      <h2 className=\"font-heading-white\">Update Coupon</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          form={form}\r\n        >\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input coupon name!\" }]}\r\n            type=\"number\"\r\n          >\r\n            <Input style={{ width: \"100%\" }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Coupon Code\" name=\"couponCode\">\r\n            <Input value={code} onChange={(e) => setCode(e.target.value)} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Discount\"\r\n            name=\"discount\"\r\n            rules={[{ required: true, message: \"Please input discount!\" }]}\r\n            type=\"number\"\r\n          >\r\n            <Input\r\n              placeholder=\"Must be in percentage eg 10\"\r\n              type=\"number\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Usage Count\"\r\n            name=\"usageCount\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input number of times the code can be used!\",\r\n              },\r\n            ]}\r\n            type=\"number\"\r\n          >\r\n            <InputNumber style={{ width: \"100%\" }} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Active\" name=\"active\">\r\n            <Switch\r\n              checkedChildren=\"is active\"\r\n              unCheckedChildren=\"not active\"\r\n              checked={active}\r\n              onChange={(e) => setActive(e)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Applicable On Specific Plan\" name=\"applicableOn\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              value={applicableOn}\r\n              placeholder=\"Please select\"\r\n              onChange={(e) => setApplicableOn(e)}\r\n            >\r\n              {[\r\n                \"ALL\",\r\n                \"CHALLENGE ONE\",\r\n                \"CHALLENGE THREE\",\r\n                \"CHALLENGE TWELVE\",\r\n              ].map((e, i) => (\r\n                <Select.Option key={i + 1} value={e}>\r\n                  {e}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Applicable On Specific Challenge\"\r\n            name=\"challengesApplicableOn\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              value={challengesApplicableOn}\r\n              placeholder=\"Please select\"\r\n              onChange={(e) => setChallengesApplicableOn(e)}\r\n            >\r\n              {allChallenges.map((e, i) => (\r\n                <Select.Option key={i + 1} value={e._id}>\r\n                  {e.challengeName}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdateCoupon;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Common\\ReviewsModal.js",["778","779"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\CreatePayment.js",["780","781","782","783"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\NewCoupon.js",["784"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\recipes.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutTab.js",["785","786","787","788","789"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallenge.js",["790","791","792","793","794"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteModal.js",["795","796"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\FullScreenPlayerVideosBrowser.js",["797"],"import React, { useContext } from \"react\";\r\nimport \"../../assets/FullScreenPlayerVideoBrowser.css\";\r\nimport {\r\n  playerFullscreenContext,\r\n  playerStateContext,\r\n} from \"../../contexts/PlayerState\";\r\nimport PlayerVideoBrowser from \"./PlayerVideoBrowser\";\r\n\r\nfunction FullScreenPlayerVideosBrowser({\r\n  showVideos,\r\n  workout,\r\n  setExerciseForHelpModal,\r\n  setOpenHelpModal,\r\n  setCurrentExercise,\r\n  currentExercise,\r\n}) {\r\n  const [playerState, setPlayerState] = useContext(playerStateContext);\r\n  const [fullscreen, setFullscreen] = useContext(playerFullscreenContext);\r\n  return showVideos ? (\r\n    <div className=\"fspvb-container\">\r\n      {/* <h1 style={{ color: \"white\" }}>fAGGOT</h1> */}\r\n      <PlayerVideoBrowser\r\n        fullscreen={fullscreen}\r\n        workout={workout}\r\n        playerState={playerState}\r\n        setPlayerState={setPlayerState}\r\n        setExerciseForHelpModal={setExerciseForHelpModal}\r\n        setOpenHelpModal={setOpenHelpModal}\r\n        setCurrentExercise={setCurrentExercise}\r\n        currentExercise={currentExercise}\r\n        fromFullScreen={true}\r\n      />\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default FullScreenPlayerVideosBrowser;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\NewRecipe.js",["798","799","800","801","802","803","804","805","806"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Select,\r\n  Modal,\r\n  InputNumber,\r\n  List,\r\n} from \"antd\";\r\nimport { PlusOutlined, CloseSquareOutlined } from \"@ant-design/icons\";\r\nimport { v4 } from \"uuid\";\r\nimport {\r\n  createIngredient,\r\n  createDiet,\r\n  createFoodType,\r\n  createMealType,\r\n  getAllDietTypes,\r\n  getAllMealTypes,\r\n  getAllFoodTypes,\r\n  getAllIngredients,\r\n  removeMealType,\r\n  removeFoodType,\r\n  removeDiet,\r\n  removeIngredient,\r\n  createRecipe,\r\n  getAllRecipes,\r\n  getAllUserRecipes,\r\n  updateRecipe,\r\n} from \"../../../services/recipes\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport { createPost } from \"../../../services/posts\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport EditTypeName from \"./EditTypeName\";\r\nimport slug from \"elegant-slug\";\r\nimport TextEditor from \"../../TextEditor\";\r\nimport LanguageSelector from \"../../LanguageSelector/LanguageSelector\";\r\nimport { LanguageContext } from \"../../../contexts/LanguageContext\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction NewRecipe({ setCurrentSelection }) {\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const { language } = useContext(LanguageContext);\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n  // -----------\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [featuredImage, setFeaturedImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [thumbnailBase64, setThumbnailBase64] = useState(\"\");\r\n  const [preprationTime, setPreprationTime] = useState(\"\");\r\n  const [persons, setPersons] = useState(\"\");\r\n  const [kcalPerPersons, setKcalPerPersons] = useState(\"\");\r\n  const [saturationIndex, setSaturationIndex] = useState(\"\");\r\n  const [protein, setProtein] = useState(\"\");\r\n  const [carbohydrates, setCarbohydrates] = useState(\"\");\r\n  const [fat, setFat] = useState(\"\");\r\n  const [fiber, setFiber] = useState(\"\");\r\n  const [isPublic, setIsPublic] = useState(false);\r\n  const [allowComments, setAllowComments] = useState(false);\r\n  const [allowReviews, setAllowReviews] = useState(false);\r\n  //meal type\r\n  const [mealTypes, setMealTypes] = useState([]);\r\n  const [allMealTypes, setAllMealTypes] = useState([]);\r\n  const [mealTypeModalVisible, setMealTypeModalVisible] = useState(false);\r\n  const [newMealTypeName, setNewMealTypeName] = useState(\"\");\r\n  //=food type\r\n  const [foodType, setFoodTypes] = useState([]);\r\n  const [allFoodTypes, setAllFoodTypes] = useState([]);\r\n  const [foodTypeModalVisible, setFoodTypeModalVisible] = useState(false);\r\n  const [newFoodTypeName, setNewFoodTypeName] = useState(\"\");\r\n  //=diet\r\n  const [diet, setDiet] = useState([]);\r\n  const [allDiets, setAllDiets] = useState([]);\r\n  const [dietModalVisible, setDietModalVisible] = useState(false);\r\n  const [newDietName, setNewDietName] = useState(\"\");\r\n  //   INGREDIETS\r\n  const [allIngredients, setAllIngredients] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredientModalVisible, setNewIngredientModlVisible] =\r\n    useState(false);\r\n  const [newIngredientName, setNewIngredientName] = useState(\"\");\r\n  //   cooking process\\\r\n  const [cookingProcess, setCookingProcess] = useState([]);\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [tips, setTips] = useState(\"\");\r\n  // all recipes\r\n  const [allRecipes, setAllRecipes] = useState([]);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(\"\");\r\n  // --------------\r\n  // const [createPostModalVisible, setCreatePostModalVisible] = useState(false);\r\n  const [userCreatePost, setUserCreatePost] = useState(false);\r\n  // update stuff\r\n  const [editItemNameModalVisible, setEditItemModelVisible] = useState(false);\r\n\r\n  const [selectedItemForUpdate, setSelectedItemForUpdate] = useState({});\r\n  const [selectedItemForUpdateTitle, setSelectedItemForUpdateTitle] =\r\n    useState(\"\");\r\n\r\n  async function fetchData() {\r\n    const diets = await getAllDietTypes(language);\r\n    const meals = await getAllMealTypes(language);\r\n    const foodTypes = await getAllFoodTypes(language);\r\n    const ingredients = await getAllIngredients(language);\r\n\r\n    setAllDiets(diets.diets);\r\n    setAllMealTypes(meals.mealTypes);\r\n    setAllFoodTypes(foodTypes.foodTypes);\r\n    setAllIngredients(ingredients.ingredients);\r\n  }\r\n\r\n  async function fetchAllRecipes() {\r\n    const res = await getAllUserRecipes(\r\n      language === \"english\" ? \"dutch\" : \"english\"\r\n    );\r\n    if (res && res.recipes) {\r\n      setAllRecipes(res.recipes);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchAllRecipes();\r\n  }, [language]);\r\n\r\n  const ing = {\r\n    id: v4(),\r\n    name: \"\",\r\n    weight: \"\",\r\n    volume: \"\",\r\n    pieces: \"\",\r\n    method: \"\",\r\n    other: \"\",\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    if (description.length <= 0) {\r\n      alert(\"Please add description\");\r\n      return;\r\n    }\r\n    const d = {\r\n      name,\r\n      description,\r\n      language: language,\r\n      image: featuredImage.link,\r\n      prepTime: preprationTime,\r\n      kCalPerPerson: kcalPerPersons,\r\n      saturationIndex: saturationIndex,\r\n      protein: protein,\r\n      carbohydrate: carbohydrates,\r\n      persons: persons,\r\n      fat: fat,\r\n      fiber: fiber,\r\n      mealTypes: mealTypes,\r\n      foodTypes: foodType,\r\n      diet: diet,\r\n      ingredients: ingredients,\r\n      cookingProcess: cookingProcess,\r\n      notes: notes,\r\n      tips: tips,\r\n      isPublic: isPublic,\r\n      allowComments: allowComments,\r\n      allowReviews: allowReviews,\r\n    };\r\n    if (selectedRecipe) d.alternativeLanguage = selectedRecipe;\r\n    // console.log(\"Success:\", values);\r\n    // console.log(values);\r\n    const res = await createRecipe(d);\r\n    if (res) {\r\n      userCreatePost && createAPost(res.newRecipe._id);\r\n      selectedRecipe && updateSelectedRecipe(res.newRecipe._id);\r\n      setCurrentSelection(4.1);\r\n    }\r\n\r\n    console.log(\"res\", res);\r\n  };\r\n\r\n  async function updateSelectedRecipe(id) {\r\n    const v = {\r\n      alternativeLanguage: id,\r\n    };\r\n    await updateRecipe(v, selectedRecipe);\r\n  }\r\n\r\n  const createAPost = async (id) => {\r\n    const values = {\r\n      title: name,\r\n      text: description,\r\n      image: featuredImage.link,\r\n      type: \"Recipe\",\r\n      url: `/recipe/${slug(name)}/${id}`,\r\n      language: language,\r\n    };\r\n    await createPost(values);\r\n    // setCreatePostModalVisible(false);\r\n    // console.log(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const changeIngredientValue = (key, ingredientId, value) => {\r\n    let i = [...ingredients];\r\n    i = i.map((ingre) => {\r\n      if (ingre.id === ingredientId) {\r\n        ingre[key] = value;\r\n      }\r\n      return ingre;\r\n    });\r\n    setIngredients(i);\r\n  };\r\n\r\n  const removeIngredientListItem = (item) => {\r\n    let i = [...ingredients];\r\n    i = i.filter((ingre) => ingre.id !== item.id);\r\n    setIngredients(i);\r\n  };\r\n  const renderIngredientsList = (item) => (\r\n    <List.Item style={{ display: \"block\", textAlign: \"right\" }}>\r\n      <Button type=\"danger\" onClick={() => removeIngredientListItem(item)}>\r\n        Remove\r\n      </Button>\r\n\r\n      <div className=\"new-recipe-ingredient-listitem\">\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Select Ingredient</span>\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            onSearch={(v) => console.log(\"value\", v)}\r\n            onChange={(e) => changeIngredientValue(\"name\", item.id, e)}\r\n            filterOption={(input, option) => {\r\n              // console.log(\"value\", input,option);\r\n              return (\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              );\r\n            }}\r\n          >\r\n            {allIngredients.map((i) => (\r\n              <Option value={i._id}>{i.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Weight (gm)</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Weight\"\r\n            value={item.weight}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"weight\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Volume (ml)</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Volume\"\r\n            value={item.volume}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"volume\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Pieces</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Pieces\"\r\n            value={item.pieces}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"pieces\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Method</span>\r\n          <Input\r\n            placeholder=\"Enter Method\"\r\n            value={item.method}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"method\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Other</span>\r\n          <Input\r\n            placeholder=\"Enter Other\"\r\n            value={item.other}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"other\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </List.Item>\r\n  );\r\n\r\n  const removeCookingProcessItem = (item, index) => {\r\n    let cp = [...cookingProcess];\r\n    cp.splice(index, 1);\r\n    setCookingProcess(cp);\r\n  };\r\n\r\n  const onchangeCookingProcess = (value, index) => {\r\n    let cp = [...cookingProcess];\r\n    cp[index] = value;\r\n    setCookingProcess(cp);\r\n  };\r\n  const renderCookingProcessList = (item, index) => (\r\n    <List.Item>\r\n      <span className=\"font-subheading-black\" style={{ marginRight: \"10px\" }}>\r\n        {index + 1}\r\n      </span>\r\n      <Input.TextArea\r\n        value={item}\r\n        onChange={(e) => onchangeCookingProcess(e.target.value, index)}\r\n        style={{ marginRight: \"10px\" }}\r\n        rows={2}\r\n      />\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => removeCookingProcessItem(item, index)}\r\n      >\r\n        Remove\r\n      </Button>\r\n    </List.Item>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n\r\n      {/* modal to create a new meal type  */}\r\n      <Modal\r\n        onCancel={() => setMealTypeModalVisible(false)}\r\n        footer={false}\r\n        visible={mealTypeModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Meal Type</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newMealTypeName}\r\n            onChange={(e) => setNewMealTypeName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newMealTypeName.length > 0) {\r\n                await createMealType(newMealTypeName, language);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Meal Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allMealTypes}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeMealType(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Meal Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* modal to create a new food type  */}\r\n      <Modal\r\n        onCancel={() => setFoodTypeModalVisible(false)}\r\n        footer={false}\r\n        visible={foodTypeModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Food Type</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newFoodTypeName}\r\n            onChange={(e) => setNewFoodTypeName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newFoodTypeName.length > 0) {\r\n                await createFoodType(newFoodTypeName, language);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Food Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allFoodTypes}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeFoodType(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Food Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      {/* modal to create a new diet  */}\r\n      <Modal\r\n        onCancel={() => setDietModalVisible(false)}\r\n        footer={false}\r\n        visible={dietModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Diet</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newDietName}\r\n            onChange={(e) => setNewDietName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newDietName.length > 0) {\r\n                await createDiet(newDietName, language);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Diet Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allDiets}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeDiet(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Diet Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      {/* modal to create a new ingredient  */}\r\n      <Modal\r\n        onCancel={() => setNewIngredientModlVisible(false)}\r\n        footer={false}\r\n        visible={newIngredientModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Ingredient</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newIngredientName}\r\n            onChange={(e) => setNewIngredientName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newIngredientName.length > 0) {\r\n                await createIngredient(newIngredientName, language);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Ingredients</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allIngredients}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeIngredient(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Ingredient\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <EditTypeName\r\n        editCategoryNameModalVisible={editItemNameModalVisible}\r\n        setEditCategoryModelVisible={setEditItemModelVisible}\r\n        fethData={fetchData}\r\n        selectedForUpdate={selectedItemForUpdate}\r\n        titleName={selectedItemForUpdateTitle}\r\n      />\r\n\r\n      <h2 className=\"font-heading-black\">New Recipe</h2>\r\n\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <div style={{ marginTop: \"-40px\", marginBottom: \"20px\" }}>\r\n          <span style={{ marginRight: \"5px\" }}>Select Language:</span>\r\n          <LanguageSelector notFromNav={true} />\r\n          <div>\r\n            <span\r\n              style={{ marginRight: \"5px\" }}\r\n            >{`Select alternative language version`}</span>\r\n            <Select\r\n              style={{ width: \"500px\" }}\r\n              onChange={(e) => setSelectedRecipe(e)}\r\n            >\r\n              <Option value={\"\"}>-</Option>\r\n              {allRecipes.map((r, i) => (\r\n                <Option key={i} value={r._id}>\r\n                  {r.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Recipe Name\"\r\n            name=\"recipeName\"\r\n            rules={[{ required: true, message: \"Please input recipe name!\" }]}\r\n          >\r\n            <Input value={name} onChange={(e) => setName(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Recipe Description\" name=\"recipeDescription\">\r\n            <TextEditor value={description} setValue={setDescription} />\r\n            {/* <Input.TextArea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            /> */}\r\n          </Form.Item>\r\n          <Form.Item label=\"Featured Image\" name=\"featuredImage\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"images\");\r\n                setMediaManagerActions([featuredImage, setFeaturedImage]);\r\n              }}\r\n            >\r\n              Upload File\r\n            </Button>\r\n            {typeof featuredImage === \"object\" && (\r\n              <div style={{ display: \"flex\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    marginRight: \"15px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"\"\r\n                    src={`${process.env.REACT_APP_SERVER}/uploads/${featuredImage.link}`}\r\n                    height=\"auto\"\r\n                    width={\"80%\"}\r\n                  />\r\n                  <span>\r\n                    {featuredImage.name}{\" \"}\r\n                    <CloseSquareOutlined\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => setFeaturedImage()}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form.Item>\r\n          <Form layout=\"vertical\">\r\n            <div className=\"new-recipe-information-inputs-container\">\r\n              <Form.Item\r\n                label=\"Prepration Time\"\r\n                name=\"preprationTime\"\r\n                // rules={[\r\n                //   { required: true, message: \"Please input prepration time!\" },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={preprationTime}\r\n                  onChange={(e) => setPreprationTime(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Persons\"\r\n                name=\"persons\"\r\n                // rules={[\r\n                //   {\r\n                //     required: true,\r\n                //     message: \"Please input number of persons!\",\r\n                //   },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={persons}\r\n                  onChange={(e) => setPersons(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Kcal per person\"\r\n                name=\"kcalPerPerson\"\r\n                // rules={[\r\n                //   {\r\n                //     required: true,\r\n                //     message: \"Please input number of calories per person!\",\r\n                //   },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={kcalPerPersons}\r\n                  onChange={(e) => setKcalPerPersons(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Saturation Index\"\r\n                name=\"saturationIndex\"\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={saturationIndex}\r\n                  onChange={(e) => setSaturationIndex(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Protein\"\r\n                name=\"protein\"\r\n                // rules={[{ required: true, message: \"Please input protein!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={protein}\r\n                  onChange={(e) => setProtein(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Carbohydrates\"\r\n                name=\"carbohydrates\"\r\n                rules={\r\n                  [\r\n                    // { required: true, message: \"Please input carbohydrates!\" },\r\n                  ]\r\n                }\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={carbohydrates}\r\n                  onChange={(e) => setCarbohydrates(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Fat\"\r\n                name=\"fat\"\r\n                // rules={[{ required: true, message: \"Please input fats!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={fat}\r\n                  onChange={(e) => setFat(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Fiber\"\r\n                name=\"fiber\"\r\n                // rules={[{ required: true, message: \"Please input fiber!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={fiber}\r\n                  onChange={(e) => setFiber(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n          <Form.Item label=\"Meal Types\" name=\"mealTypes\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={mealTypes}\r\n              onChange={(e) => setMealTypes(e)}\r\n            >\r\n              {allMealTypes.map((meal) => (\r\n                <Option value={meal._id}>{meal.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setMealTypeModalVisible(true)}\r\n            >\r\n              Manage Meal Type\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item label=\"Food Types\" name=\"foodTypes\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={foodType}\r\n              onChange={(e) => setFoodTypes(e)}\r\n            >\r\n              {allFoodTypes.map((food) => (\r\n                <Option value={food._id}>{food.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setFoodTypeModalVisible(true)}\r\n            >\r\n              Manage Food Type\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item label=\"Diet\" name=\"diet\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={diet}\r\n              onChange={(e) => setDiet(e)}\r\n            >\r\n              {allDiets.map((d) => (\r\n                <Option value={d._id}>{d.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setDietModalVisible(true)}\r\n            >\r\n              Manage Diet\r\n            </Button>\r\n          </Form.Item>\r\n          {/* ingredients */}\r\n          {\r\n            <div className=\"new-recipe-ingredients-list-container\">\r\n              <List\r\n                size=\"small\"\r\n                header={\r\n                  <div className=\"new-recipe-ingredients-list-container-header\">\r\n                    <span className=\"font-heading-black\">Add Ingredients</span>\r\n                    <div>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() => setIngredients([...ingredients, ing])}\r\n                      >\r\n                        Add Ingredient\r\n                      </Button>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() => setNewIngredientModlVisible(true)}\r\n                      >\r\n                        Manage Ingredients\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                bordered\r\n                dataSource={ingredients}\r\n                renderItem={renderIngredientsList}\r\n              />\r\n            </div>\r\n          }\r\n          {/* Cooking process */}\r\n          {\r\n            <div\r\n              className=\"new-recipe-ingredients-list-container\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <List\r\n                size=\"small\"\r\n                header={\r\n                  <div className=\"new-recipe-ingredients-list-container-header\">\r\n                    <span className=\"font-heading-black\">Cooking Process</span>\r\n                    <div>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() =>\r\n                          setCookingProcess([...cookingProcess, \"\"])\r\n                        }\r\n                      >\r\n                        Add Step\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                bordered\r\n                dataSource={cookingProcess}\r\n                renderItem={renderCookingProcessList}\r\n              />\r\n            </div>\r\n          }\r\n\r\n          <Form.Item label=\"Notes\" name=\"notes\" style={{ marginTop: \"30px\" }}>\r\n            {/* <Input.TextArea\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n            /> */}\r\n            <TextEditor value={notes} setValue={setNotes} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Tips\" name=\"tips\">\r\n            {/* <Input.TextArea\r\n              value={tips}\r\n              onChange={(e) => setTips(e.target.value)}\r\n            /> */}\r\n            <TextEditor value={tips} setValue={setTips} />\r\n          </Form.Item>\r\n          {userInfo.role === \"admin\" && (\r\n            <>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={userCreatePost}\r\n                  onChange={(e) => setUserCreatePost(e.target.checked)}\r\n                >\r\n                  Create a post\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={isPublic}\r\n                  onChange={(e) => setIsPublic(e.target.checked)}\r\n                >\r\n                  Make Public\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowReviews}\r\n                  onChange={(e) => setAllowReviews(e.target.checked)}\r\n                >\r\n                  Allow Reviews\r\n                </Checkbox>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowComments}\r\n                  onChange={(e) => setAllowComments(e.target.checked)}\r\n                >\r\n                  Allow Comments\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewRecipe;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\EditTypeName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Feed.js",["807","808","809","810"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { UserOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Modal, Pagination } from \"antd\";\r\nimport CommentSection from \"./CommentSection\";\r\nimport ChatWhite from \"../../assets/icons/chat-white.svg\";\r\nimport Clap from \"../../assets/icons/clap-orange.svg\";\r\nimport Clock from \"../../assets/icons/feed-clock.svg\";\r\nimport ClapGray from \"../../assets/icons/clap-gray.svg\";\r\nimport {\r\n  getPostsWithPagination,\r\n  addLikeToPost,\r\n  addUnlikePost,\r\n} from \"../../services/posts\";\r\n\r\nfunction Feed({ userInfo }) {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [totalPosts, setTotalPosts] = useState(0);\r\n  // eslint-disable-next-line\r\n  const [data, setData] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const res = await getPostsWithPagination(pageNumber);\r\n    setLoading(false);\r\n    setData(res.posts);\r\n    setTotalPosts(6 * res.lastPage);\r\n    console.log(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [pageNumber]);\r\n\r\n  const addLike = async (id) => {\r\n    const res = await addLikeToPost(id);\r\n    if (res) {\r\n      const d = data.map((i) => {\r\n        if (i._id === id) {\r\n          i.likes = res;\r\n        }\r\n        return i;\r\n      });\r\n      setData(d);\r\n    }\r\n    // fetchData();\r\n    console.log(\"like\", res);\r\n  };\r\n  const unlikePost = async (id) => {\r\n    const res = await addUnlikePost(id);\r\n    if (res) {\r\n      const d = data.map((i) => {\r\n        if (i._id === id) {\r\n          i.likes = res;\r\n        }\r\n        return i;\r\n      });\r\n      setData(d);\r\n    }\r\n  };\r\n  function itemRender(current, type, originalElement) {\r\n    if (type === \"prev\") {\r\n      return (\r\n        <a className=\"orange-button-pagination font-paragraph-white\">\r\n          Previous\r\n        </a>\r\n      );\r\n    }\r\n    if (type === \"next\") {\r\n      return (\r\n        <a className=\"green-button-pagination font-paragraph-white\">Next</a>\r\n      );\r\n    }\r\n    return originalElement;\r\n  }\r\n\r\n  const updatePosts = (id, comments) => {\r\n    const p = data.map((post) => {\r\n      if (post._id === id) {\r\n        post.comments = comments;\r\n        return post;\r\n      }\r\n      return post;\r\n    });\r\n    setData(p);\r\n  };\r\n  return (\r\n    <>\r\n      <CommentSection\r\n        post={selectedPost}\r\n        updatePosts={updatePosts}\r\n        visible={open}\r\n        setVisible={setOpen}\r\n      />\r\n      <div\r\n        className=\"dashboard-feed-container\"\r\n        style={{ justifyItems: \"center\" }}\r\n      >\r\n        {loading ? (\r\n          <LoadingOutlined style={{ fontSize: \"30px\", color: \"#ff7700\" }} />\r\n        ) : data ? (\r\n          data.map((d) => (\r\n            <div className=\"dashboard-feed-container-card\">\r\n              {console.log(\"d\", d)}\r\n              <Link to={`${d.url ? d.url : \"#\"}`}>\r\n                <div\r\n                  className=\"dashboard-feed-container-card-row1\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Avatar\r\n                    shape=\"square\"\r\n                    size=\"large\"\r\n                    src={d.avatar ? d.avatar : \"\"}\r\n                    icon={<UserOutlined />}\r\n                  />\r\n\r\n                  <div className=\"dashboard-feed-container-card-row1-col2 font-paragraph-white\">\r\n                    <span>{d.username ? d.username : \"\"}</span>\r\n                    <span\r\n                      style={{\r\n                        opacity: \"0.8\",\r\n                        color: \"#8e9298\",\r\n                        fontSize: \"13px\",\r\n                      }}\r\n                    >\r\n                      <img src={Clock} alt=\"\" /> {moment(d.date).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n              {/* <Link to={`/${d.type}/${d.id}`}> */}\r\n              <Link to={`${d.url ? d.url : \"#\"}`}>\r\n                <div\r\n                  className=\"dashboard-feed-container-card-row2\"\r\n                  style={{\r\n                    background: `url(${process.env.REACT_APP_SERVER}/uploads/${d.image})`,\r\n                    backgroundSize: \"cover\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <div className=\"dashboard-feed-container-card-row2-tag font-paragraph-white\">\r\n                    {d.type}\r\n                  </div>\r\n                </div>\r\n                {/* </Link> */}\r\n                <div className=\"dashboard-feed-container-card-row3\">\r\n                  <div className=\"dashboard-feed-container-card-row3-heading font-paragraph-white\">\r\n                    {d.title}\r\n                  </div>\r\n                  <div className=\"dashboard-feed-container-card-row3-text font-paragraph-white\">\r\n                    {d.text}\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n              <div className=\"dashboard-feed-container-card-row4\">\r\n                <span\r\n                  className=\"dashboard-feed-container-card-row4-click\"\r\n                  onClick={() => {\r\n                    if (d.likes.some((like) => like[\"user\"] === userInfo.id)) {\r\n                      unlikePost(d._id);\r\n                    } else {\r\n                      addLike(d._id);\r\n                    }\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={\r\n                      d.likes.some((like) => like[\"user\"] === userInfo.id)\r\n                        ? Clap\r\n                        : ClapGray\r\n                    }\r\n                    alt=\"\"\r\n                  />{\" \"}\r\n                  {d.likes.length}\r\n                </span>\r\n                <span\r\n                  className=\"dashboard-feed-container-card-row4-click\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    setSelectedPost(d);\r\n                  }}\r\n                >\r\n                  <img src={ChatWhite} alt=\"\" /> {d.comments.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h2 className=\"font-heading-white\">No posts here!</h2>\r\n        )}\r\n      </div>\r\n      <div className=\"pagination-container\">\r\n        <div className=\"pagination-container-inside\">\r\n          {data && (\r\n            <Pagination\r\n              current={pageNumber}\r\n              onChange={(page) => setPageNumber(page)}\r\n              itemRender={itemRender}\r\n              total={totalPosts}\r\n              pageSize={6}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TermsAndCondition.js",["811","812"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\EditCategoryName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaFileUploader.js",[],["813","814"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserSetting.js",["815","816","817"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LoggedinNavbar.js",["818"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Nutrient.js",["819","820","821","822","823"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\tags.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\UpdateBlog.js",["824"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Trainers.js",["825","826","827","828"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Challenges.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\users.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\equipments.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\AllPosts.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\EmailVerificationRedirect.js",["829"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MembershipManager\\NewMembership.js",["830","831","832"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\RemoteMediaManager.js",["833","834","835","836","837"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { VFSBrowser } from \"./MediaManager\";\r\n\r\nfunction RemoteMediaManager({ visible, setVisible, type, actions }) {\r\n  const [a, setA] = useState(actions);\r\n  const [t, setT] = useState(type);\r\n\r\n  return (\r\n    <Modal\r\n      key={Math.random()}\r\n      title=\"Media Manager\"\r\n      visible={visible}\r\n      onOk={() => setVisible(false)}\r\n      onCancel={() => setVisible(false)}\r\n      footer={false}\r\n      width=\"80%\"\r\n    >\r\n      <VFSBrowser\r\n        actions={actions}\r\n        mediaType={type}\r\n        setRemoteMediaManagerVisible={setVisible}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RemoteMediaManager;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\New\\Wizard.js",["838","839","840"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\setAuthToken.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\EditTypeName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\VerifyUser.js",["841"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\AllBlogs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\NewFaq.js",["842","843","844"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MembershipManager\\AllMemberships.js",["845"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\AllExercises.js",["846"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\EditTypeName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\useWindowDimensions.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\NewExercise.js",["847"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Input, Button, Select } from \"antd\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport { createExercise } from \"../../../services/createChallenge/main\";\r\nimport { getAllTrainers } from \"../../../services/trainers\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\nimport LanguageSelector from \"../../LanguageSelector/LanguageSelector\";\r\nimport { LanguageContext } from \"../../../contexts/LanguageContext\";\r\nconst { Option } = Select;\r\n\r\nfunction NewExercise({ setCurrentSelection, home }) {\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n  const [trainer, setTrainer] = useState(\"\");\r\n  const [videoLink, setVideoLink] = useState(\"\");\r\n  const [voiceOverLink, setVoiceOverLink] = useState(\"\");\r\n  const [allTrainers, setAllTrainers] = useState([]);\r\n  const [filteredTrainers, setFilteredTrainers] = useState([]);\r\n  const userInfo = useContext(userInfoContext)[0];\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  useEffect(() => {\r\n    if (userInfo.role === \"trainer\") {\r\n      setTrainer(userInfo.id);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const res = await getAllTrainers();\r\n    if (res) {\r\n      setAllTrainers(res.trainers);\r\n      setFilteredTrainers(res.trainers);\r\n    }\r\n  };\r\n  const onFinish = async (values) => {\r\n    console.log(values, trainer);\r\n    // return;\r\n    if (videoLink && trainer) {\r\n      console.log(values);\r\n      const data = {\r\n        videoURL: videoLink.link,\r\n        voiceOverLink: voiceOverLink.link,\r\n        trainer,\r\n        language,\r\n        ...values,\r\n      };\r\n      const res = await createExercise(data);\r\n      setCurrentSelection(home);\r\n      console.log(\"values\", res);\r\n    } else {\r\n      alert(\"Please add a video link and trainer of a exercise\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n      <h2 className=\"font-heading-black\">New Exercise</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <div>\r\n          <span>Select Language: </span>\r\n          <LanguageSelector notFromNav={true} />\r\n        </div>\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Exercise Title\"\r\n            name=\"title\"\r\n            rules={[\r\n              { required: true, message: \"Please input exercise title!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Exercise Video\" required=\"true\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"videos\");\r\n                setMediaManagerActions([videoLink, setVideoLink]);\r\n              }}\r\n            >\r\n              Upload Video\r\n            </Button>\r\n            <div\r\n              className=\"font-paragraph-white\"\r\n              style={{ color: \"#ff7700\", margin: \"5px 0\" }}\r\n            >\r\n              {videoLink && videoLink.name}\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item label=\"Exercise Description (Optional)\" name=\"description\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Trainer\" required=\"true\">\r\n            {/* {console.log(\"trainers\", trainers)} */}\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={trainer}\r\n              disabled={userInfo.role === \"trainer\" ? true : false}\r\n              onChange={(e) => setTrainer(e)}\r\n              filterOption={false}\r\n              onSearch={(e) => {\r\n                const t = allTrainers.filter((f) =>\r\n                  f.firstName\r\n                    .concat(f.lastName)\r\n                    ?.toLowerCase()\r\n                    .includes(e.toLowerCase())\r\n                );\r\n                setFilteredTrainers(t);\r\n              }}\r\n            >\r\n              {filteredTrainers.map((trainer) => (\r\n                <Option value={trainer._id}>\r\n                  {trainer.firstName} {trainer.lastName}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Voiceover Link (Optional)\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"voiceOvers\");\r\n                setMediaManagerActions([voiceOverLink, setVoiceOverLink]);\r\n              }}\r\n            >\r\n              Upload Voiceover\r\n            </Button>\r\n            <div\r\n              className=\"font-paragraph-white\"\r\n              style={{ color: \"#ff7700\", margin: \"5px 0\" }}\r\n            >\r\n              {voiceOverLink && voiceOverLink.name}\r\n            </div>\r\n          </Form.Item>\r\n\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Create Exercise\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewExercise;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\products.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\adminRequests.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\translationHelpers.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Navbar.js",["848"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LanguageSelector\\LanguageSelector.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Home.js",["849","850"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\ScrollToTop.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\trainers.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Nutrition.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Home\\Hero.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\helpers\\PrivateRoute.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\TextEditor.js",[],{"ruleId":"851","severity":1,"message":"852","line":60,"column":6,"nodeType":"853","endLine":60,"endColumn":8,"suggestions":"854"},{"ruleId":"855","severity":1,"message":"856","line":25,"column":10,"nodeType":"857","messageId":"858","endLine":25,"endColumn":18},{"ruleId":"855","severity":1,"message":"859","line":25,"column":20,"nodeType":"857","messageId":"858","endLine":25,"endColumn":31},{"ruleId":"855","severity":1,"message":"860","line":26,"column":10,"nodeType":"857","messageId":"858","endLine":26,"endColumn":18},{"ruleId":"855","severity":1,"message":"861","line":26,"column":20,"nodeType":"857","messageId":"858","endLine":26,"endColumn":31},{"ruleId":"851","severity":1,"message":"862","line":33,"column":6,"nodeType":"853","endLine":33,"endColumn":8,"suggestions":"863"},{"ruleId":"864","severity":1,"message":"865","line":84,"column":5,"nodeType":"866","messageId":"867","endLine":115,"endColumn":6},{"ruleId":"868","replacedBy":"869"},{"ruleId":"870","replacedBy":"871"},{"ruleId":"855","severity":1,"message":"872","line":6,"column":10,"nodeType":"857","messageId":"858","endLine":6,"endColumn":22},{"ruleId":"855","severity":1,"message":"873","line":6,"column":24,"nodeType":"857","messageId":"858","endLine":6,"endColumn":39},{"ruleId":"855","severity":1,"message":"874","line":9,"column":10,"nodeType":"857","messageId":"858","endLine":9,"endColumn":18},{"ruleId":"855","severity":1,"message":"875","line":1,"column":29,"nodeType":"857","messageId":"858","endLine":1,"endColumn":38},{"ruleId":"855","severity":1,"message":"876","line":3,"column":10,"nodeType":"857","messageId":"858","endLine":3,"endColumn":28},{"ruleId":"855","severity":1,"message":"877","line":4,"column":17,"nodeType":"857","messageId":"858","endLine":4,"endColumn":23},{"ruleId":"855","severity":1,"message":"878","line":4,"column":25,"nodeType":"857","messageId":"858","endLine":4,"endColumn":30},{"ruleId":"855","severity":1,"message":"879","line":5,"column":9,"nodeType":"857","messageId":"858","endLine":5,"endColumn":15},{"ruleId":"855","severity":1,"message":"880","line":12,"column":10,"nodeType":"857","messageId":"858","endLine":12,"endColumn":22},{"ruleId":"855","severity":1,"message":"881","line":46,"column":10,"nodeType":"857","messageId":"858","endLine":46,"endColumn":17},{"ruleId":"855","severity":1,"message":"882","line":46,"column":19,"nodeType":"857","messageId":"858","endLine":46,"endColumn":29},{"ruleId":"855","severity":1,"message":"883","line":47,"column":10,"nodeType":"857","messageId":"858","endLine":47,"endColumn":25},{"ruleId":"855","severity":1,"message":"884","line":47,"column":27,"nodeType":"857","messageId":"858","endLine":47,"endColumn":45},{"ruleId":"851","severity":1,"message":"885","line":177,"column":6,"nodeType":"853","endLine":177,"endColumn":8,"suggestions":"886"},{"ruleId":"855","severity":1,"message":"887","line":1,"column":17,"nodeType":"857","messageId":"858","endLine":1,"endColumn":29},{"ruleId":"855","severity":1,"message":"888","line":3,"column":25,"nodeType":"857","messageId":"858","endLine":3,"endColumn":45},{"ruleId":"855","severity":1,"message":"889","line":52,"column":10,"nodeType":"857","messageId":"858","endLine":52,"endColumn":34},{"ruleId":"868","replacedBy":"890"},{"ruleId":"870","replacedBy":"891"},{"ruleId":"855","severity":1,"message":"892","line":2,"column":10,"nodeType":"857","messageId":"858","endLine":2,"endColumn":15},{"ruleId":"855","severity":1,"message":"893","line":11,"column":8,"nodeType":"857","messageId":"858","endLine":11,"endColumn":19},{"ruleId":"855","severity":1,"message":"894","line":17,"column":23,"nodeType":"857","messageId":"858","endLine":17,"endColumn":37},{"ruleId":"855","severity":1,"message":"895","line":18,"column":24,"nodeType":"857","messageId":"858","endLine":18,"endColumn":39},{"ruleId":"855","severity":1,"message":"896","line":19,"column":11,"nodeType":"857","messageId":"858","endLine":19,"endColumn":17},{"ruleId":"855","severity":1,"message":"897","line":19,"column":19,"nodeType":"857","messageId":"858","endLine":19,"endColumn":24},{"ruleId":"855","severity":1,"message":"898","line":26,"column":10,"nodeType":"857","messageId":"858","endLine":26,"endColumn":17},{"ruleId":"855","severity":1,"message":"899","line":26,"column":19,"nodeType":"857","messageId":"858","endLine":26,"endColumn":29},{"ruleId":"855","severity":1,"message":"900","line":7,"column":8,"nodeType":"857","messageId":"858","endLine":7,"endColumn":21},{"ruleId":"851","severity":1,"message":"862","line":32,"column":6,"nodeType":"853","endLine":32,"endColumn":8,"suggestions":"901"},{"ruleId":"855","severity":1,"message":"902","line":58,"column":13,"nodeType":"857","messageId":"858","endLine":58,"endColumn":14},{"ruleId":"855","severity":1,"message":"902","line":88,"column":13,"nodeType":"857","messageId":"858","endLine":88,"endColumn":14},{"ruleId":"855","severity":1,"message":"902","line":120,"column":13,"nodeType":"857","messageId":"858","endLine":120,"endColumn":14},{"ruleId":"851","severity":1,"message":"903","line":57,"column":6,"nodeType":"853","endLine":57,"endColumn":8,"suggestions":"904"},{"ruleId":"905","severity":1,"message":"906","line":168,"column":17,"nodeType":"907","endLine":171,"endColumn":19},{"ruleId":"855","severity":1,"message":"908","line":57,"column":10,"nodeType":"857","messageId":"858","endLine":57,"endColumn":22},{"ruleId":"851","severity":1,"message":"909","line":107,"column":6,"nodeType":"853","endLine":107,"endColumn":8,"suggestions":"910"},{"ruleId":"855","severity":1,"message":"875","line":1,"column":29,"nodeType":"857","messageId":"858","endLine":1,"endColumn":38},{"ruleId":"851","severity":1,"message":"911","line":12,"column":6,"nodeType":"853","endLine":12,"endColumn":8,"suggestions":"912"},{"ruleId":"868","replacedBy":"913"},{"ruleId":"870","replacedBy":"914"},{"ruleId":"855","severity":1,"message":"915","line":4,"column":3,"nodeType":"857","messageId":"858","endLine":4,"endColumn":16},{"ruleId":"851","severity":1,"message":"916","line":748,"column":5,"nodeType":"853","endLine":748,"endColumn":63,"suggestions":"917"},{"ruleId":"918","severity":1,"message":"919","line":757,"column":5,"nodeType":"920","messageId":"921","endLine":764,"endColumn":6},{"ruleId":"918","severity":1,"message":"919","line":768,"column":5,"nodeType":"920","messageId":"921","endLine":775,"endColumn":6},{"ruleId":"918","severity":1,"message":"919","line":782,"column":5,"nodeType":"920","messageId":"921","endLine":786,"endColumn":6},{"ruleId":"918","severity":1,"message":"919","line":790,"column":5,"nodeType":"920","messageId":"921","endLine":795,"endColumn":6},{"ruleId":"855","severity":1,"message":"922","line":810,"column":5,"nodeType":"857","messageId":"858","endLine":810,"endColumn":17},{"ruleId":"855","severity":1,"message":"923","line":2,"column":39,"nodeType":"857","messageId":"858","endLine":2,"endColumn":47},{"ruleId":"855","severity":1,"message":"924","line":2,"column":49,"nodeType":"857","messageId":"858","endLine":2,"endColumn":53},{"ruleId":"855","severity":1,"message":"925","line":21,"column":10,"nodeType":"857","messageId":"858","endLine":21,"endColumn":18},{"ruleId":"851","severity":1,"message":"926","line":54,"column":6,"nodeType":"853","endLine":54,"endColumn":29,"suggestions":"927"},{"ruleId":"855","severity":1,"message":"928","line":7,"column":8,"nodeType":"857","messageId":"858","endLine":7,"endColumn":14},{"ruleId":"855","severity":1,"message":"872","line":9,"column":3,"nodeType":"857","messageId":"858","endLine":9,"endColumn":15},{"ruleId":"855","severity":1,"message":"929","line":12,"column":3,"nodeType":"857","messageId":"858","endLine":12,"endColumn":15},{"ruleId":"855","severity":1,"message":"892","line":18,"column":25,"nodeType":"857","messageId":"858","endLine":18,"endColumn":30},{"ruleId":"855","severity":1,"message":"930","line":27,"column":8,"nodeType":"857","messageId":"858","endLine":27,"endColumn":28},{"ruleId":"855","severity":1,"message":"931","line":39,"column":20,"nodeType":"857","messageId":"858","endLine":39,"endColumn":31},{"ruleId":"851","severity":1,"message":"903","line":48,"column":6,"nodeType":"853","endLine":48,"endColumn":8,"suggestions":"932"},{"ruleId":"855","severity":1,"message":"933","line":5,"column":22,"nodeType":"857","messageId":"858","endLine":5,"endColumn":26},{"ruleId":"851","severity":1,"message":"934","line":25,"column":6,"nodeType":"853","endLine":25,"endColumn":8,"suggestions":"935"},{"ruleId":"855","severity":1,"message":"875","line":1,"column":27,"nodeType":"857","messageId":"858","endLine":1,"endColumn":36},{"ruleId":"855","severity":1,"message":"936","line":6,"column":3,"nodeType":"857","messageId":"858","endLine":6,"endColumn":21},{"ruleId":"855","severity":1,"message":"937","line":7,"column":3,"nodeType":"857","messageId":"858","endLine":7,"endColumn":16},{"ruleId":"855","severity":1,"message":"896","line":37,"column":11,"nodeType":"857","messageId":"858","endLine":37,"endColumn":17},{"ruleId":"855","severity":1,"message":"897","line":37,"column":19,"nodeType":"857","messageId":"858","endLine":37,"endColumn":24},{"ruleId":"855","severity":1,"message":"938","line":49,"column":9,"nodeType":"857","messageId":"858","endLine":49,"endColumn":22},{"ruleId":"868","replacedBy":"939"},{"ruleId":"870","replacedBy":"940"},{"ruleId":"855","severity":1,"message":"941","line":9,"column":8,"nodeType":"857","messageId":"858","endLine":9,"endColumn":23},{"ruleId":"855","severity":1,"message":"942","line":4,"column":3,"nodeType":"857","messageId":"858","endLine":4,"endColumn":18},{"ruleId":"855","severity":1,"message":"943","line":6,"column":3,"nodeType":"857","messageId":"858","endLine":6,"endColumn":17},{"ruleId":"855","severity":1,"message":"944","line":8,"column":10,"nodeType":"857","messageId":"858","endLine":8,"endColumn":22},{"ruleId":"855","severity":1,"message":"945","line":38,"column":10,"nodeType":"857","messageId":"858","endLine":38,"endColumn":20},{"ruleId":"855","severity":1,"message":"946","line":45,"column":10,"nodeType":"857","messageId":"858","endLine":45,"endColumn":15},{"ruleId":"855","severity":1,"message":"947","line":45,"column":17,"nodeType":"857","messageId":"858","endLine":45,"endColumn":25},{"ruleId":"855","severity":1,"message":"881","line":47,"column":10,"nodeType":"857","messageId":"858","endLine":47,"endColumn":17},{"ruleId":"868","replacedBy":"948"},{"ruleId":"870","replacedBy":"949"},{"ruleId":"868","replacedBy":"950"},{"ruleId":"870","replacedBy":"951"},{"ruleId":"855","severity":1,"message":"942","line":12,"column":10,"nodeType":"857","messageId":"858","endLine":12,"endColumn":25},{"ruleId":"855","severity":1,"message":"881","line":112,"column":10,"nodeType":"857","messageId":"858","endLine":112,"endColumn":17},{"ruleId":"855","severity":1,"message":"882","line":112,"column":19,"nodeType":"857","messageId":"858","endLine":112,"endColumn":29},{"ruleId":"851","severity":1,"message":"952","line":123,"column":6,"nodeType":"853","endLine":123,"endColumn":16,"suggestions":"953"},{"ruleId":"855","severity":1,"message":"954","line":168,"column":9,"nodeType":"857","messageId":"858","endLine":168,"endColumn":21},{"ruleId":"855","severity":1,"message":"955","line":2,"column":25,"nodeType":"857","messageId":"858","endLine":2,"endColumn":37},{"ruleId":"956","severity":1,"message":"957","line":44,"column":13,"nodeType":"857","messageId":"958","endLine":44,"endColumn":14},{"ruleId":"868","replacedBy":"959"},{"ruleId":"870","replacedBy":"960"},{"ruleId":"855","severity":1,"message":"961","line":10,"column":3,"nodeType":"857","messageId":"858","endLine":10,"endColumn":16},{"ruleId":"855","severity":1,"message":"962","line":18,"column":3,"nodeType":"857","messageId":"858","endLine":18,"endColumn":28},{"ruleId":"868","replacedBy":"963"},{"ruleId":"870","replacedBy":"964"},{"ruleId":"855","severity":1,"message":"878","line":2,"column":25,"nodeType":"857","messageId":"858","endLine":2,"endColumn":30},{"ruleId":"855","severity":1,"message":"965","line":2,"column":32,"nodeType":"857","messageId":"858","endLine":2,"endColumn":37},{"ruleId":"855","severity":1,"message":"966","line":2,"column":47,"nodeType":"857","messageId":"858","endLine":2,"endColumn":53},{"ruleId":"855","severity":1,"message":"967","line":3,"column":10,"nodeType":"857","messageId":"858","endLine":3,"endColumn":29},{"ruleId":"855","severity":1,"message":"968","line":4,"column":10,"nodeType":"857","messageId":"858","endLine":4,"endColumn":20},{"ruleId":"851","severity":1,"message":"969","line":50,"column":6,"nodeType":"853","endLine":50,"endColumn":8,"suggestions":"970"},{"ruleId":"855","severity":1,"message":"971","line":2,"column":40,"nodeType":"857","messageId":"858","endLine":2,"endColumn":46},{"ruleId":"855","severity":1,"message":"972","line":2,"column":48,"nodeType":"857","messageId":"858","endLine":2,"endColumn":55},{"ruleId":"868","replacedBy":"973"},{"ruleId":"870","replacedBy":"974"},{"ruleId":"855","severity":1,"message":"975","line":7,"column":8,"nodeType":"857","messageId":"858","endLine":7,"endColumn":9},{"ruleId":"868","replacedBy":"976"},{"ruleId":"870","replacedBy":"977"},{"ruleId":"855","severity":1,"message":"978","line":16,"column":8,"nodeType":"857","messageId":"858","endLine":16,"endColumn":12},{"ruleId":"979","severity":1,"message":"980","line":26,"column":3,"nodeType":"981","messageId":"982","endLine":26,"endColumn":10},{"ruleId":"979","severity":1,"message":"983","line":28,"column":3,"nodeType":"981","messageId":"982","endLine":28,"endColumn":9},{"ruleId":"851","severity":1,"message":"903","line":47,"column":6,"nodeType":"853","endLine":47,"endColumn":8,"suggestions":"984"},{"ruleId":"851","severity":1,"message":"985","line":101,"column":6,"nodeType":"853","endLine":101,"endColumn":78,"suggestions":"986"},{"ruleId":"855","severity":1,"message":"889","line":56,"column":10,"nodeType":"857","messageId":"858","endLine":56,"endColumn":34},{"ruleId":"855","severity":1,"message":"896","line":59,"column":11,"nodeType":"857","messageId":"858","endLine":59,"endColumn":17},{"ruleId":"851","severity":1,"message":"987","line":69,"column":6,"nodeType":"853","endLine":69,"endColumn":8,"suggestions":"988"},{"ruleId":"989","severity":1,"message":"990","line":401,"column":17,"nodeType":"991","endLine":401,"endColumn":32},{"ruleId":"868","replacedBy":"992"},{"ruleId":"870","replacedBy":"993"},{"ruleId":"855","severity":1,"message":"994","line":3,"column":10,"nodeType":"857","messageId":"858","endLine":3,"endColumn":28},{"ruleId":"868","replacedBy":"995"},{"ruleId":"870","replacedBy":"996"},{"ruleId":"855","severity":1,"message":"896","line":53,"column":11,"nodeType":"857","messageId":"858","endLine":53,"endColumn":17},{"ruleId":"851","severity":1,"message":"997","line":100,"column":6,"nodeType":"853","endLine":100,"endColumn":19,"suggestions":"998"},{"ruleId":"855","severity":1,"message":"999","line":1,"column":17,"nodeType":"857","messageId":"858","endLine":1,"endColumn":25},{"ruleId":"851","severity":1,"message":"1000","line":35,"column":6,"nodeType":"853","endLine":35,"endColumn":8,"suggestions":"1001"},{"ruleId":"855","severity":1,"message":"1002","line":13,"column":10,"nodeType":"857","messageId":"858","endLine":13,"endColumn":14},{"ruleId":"855","severity":1,"message":"1003","line":22,"column":11,"nodeType":"857","messageId":"858","endLine":22,"endColumn":14},{"ruleId":"855","severity":1,"message":"1004","line":19,"column":3,"nodeType":"857","messageId":"858","endLine":19,"endColumn":18},{"ruleId":"855","severity":1,"message":"1005","line":86,"column":10,"nodeType":"857","messageId":"858","endLine":86,"endColumn":18},{"ruleId":"855","severity":1,"message":"1006","line":139,"column":10,"nodeType":"857","messageId":"858","endLine":139,"endColumn":18},{"ruleId":"855","severity":1,"message":"1007","line":139,"column":20,"nodeType":"857","messageId":"858","endLine":139,"endColumn":31},{"ruleId":"851","severity":1,"message":"1008","line":148,"column":6,"nodeType":"853","endLine":148,"endColumn":8,"suggestions":"1009"},{"ruleId":"1010","severity":1,"message":"1011","line":327,"column":21,"nodeType":"1012","messageId":"1013","endLine":327,"endColumn":23},{"ruleId":"851","severity":1,"message":"1014","line":26,"column":13,"nodeType":"1012","endLine":28,"endColumn":4},{"ruleId":"868","replacedBy":"1015"},{"ruleId":"870","replacedBy":"1016"},{"ruleId":"855","severity":1,"message":"971","line":2,"column":43,"nodeType":"857","messageId":"858","endLine":2,"endColumn":49},{"ruleId":"855","severity":1,"message":"972","line":2,"column":57,"nodeType":"857","messageId":"858","endLine":2,"endColumn":64},{"ruleId":"855","severity":1,"message":"880","line":4,"column":26,"nodeType":"857","messageId":"858","endLine":4,"endColumn":38},{"ruleId":"855","severity":1,"message":"881","line":38,"column":10,"nodeType":"857","messageId":"858","endLine":38,"endColumn":17},{"ruleId":"855","severity":1,"message":"882","line":38,"column":19,"nodeType":"857","messageId":"858","endLine":38,"endColumn":29},{"ruleId":"855","severity":1,"message":"1017","line":1,"column":17,"nodeType":"857","messageId":"858","endLine":1,"endColumn":27},{"ruleId":"855","severity":1,"message":"1018","line":1,"column":29,"nodeType":"857","messageId":"858","endLine":1,"endColumn":35},{"ruleId":"855","severity":1,"message":"875","line":1,"column":37,"nodeType":"857","messageId":"858","endLine":1,"endColumn":46},{"ruleId":"855","severity":1,"message":"1019","line":5,"column":5,"nodeType":"857","messageId":"858","endLine":5,"endColumn":10},{"ruleId":"855","severity":1,"message":"942","line":4,"column":3,"nodeType":"857","messageId":"858","endLine":4,"endColumn":18},{"ruleId":"855","severity":1,"message":"943","line":6,"column":3,"nodeType":"857","messageId":"858","endLine":6,"endColumn":17},{"ruleId":"855","severity":1,"message":"944","line":8,"column":10,"nodeType":"857","messageId":"858","endLine":8,"endColumn":22},{"ruleId":"855","severity":1,"message":"861","line":35,"column":20,"nodeType":"857","messageId":"858","endLine":35,"endColumn":31},{"ruleId":"855","severity":1,"message":"945","line":38,"column":10,"nodeType":"857","messageId":"858","endLine":38,"endColumn":20},{"ruleId":"855","severity":1,"message":"881","line":47,"column":10,"nodeType":"857","messageId":"858","endLine":47,"endColumn":17},{"ruleId":"851","severity":1,"message":"1020","line":91,"column":6,"nodeType":"853","endLine":91,"endColumn":8,"suggestions":"1021"},{"ruleId":"855","severity":1,"message":"1022","line":25,"column":10,"nodeType":"857","messageId":"858","endLine":25,"endColumn":19},{"ruleId":"855","severity":1,"message":"1023","line":36,"column":10,"nodeType":"857","messageId":"858","endLine":36,"endColumn":13},{"ruleId":"855","severity":1,"message":"1007","line":52,"column":20,"nodeType":"857","messageId":"858","endLine":52,"endColumn":31},{"ruleId":"855","severity":1,"message":"1024","line":54,"column":10,"nodeType":"857","messageId":"858","endLine":54,"endColumn":27},{"ruleId":"851","severity":1,"message":"903","line":114,"column":6,"nodeType":"853","endLine":114,"endColumn":16,"suggestions":"1025"},{"ruleId":"855","severity":1,"message":"1026","line":9,"column":3,"nodeType":"857","messageId":"858","endLine":9,"endColumn":15},{"ruleId":"855","severity":1,"message":"889","line":38,"column":10,"nodeType":"857","messageId":"858","endLine":38,"endColumn":34},{"ruleId":"851","severity":1,"message":"1027","line":75,"column":6,"nodeType":"853","endLine":75,"endColumn":15,"suggestions":"1028"},{"ruleId":"851","severity":1,"message":"1029","line":102,"column":6,"nodeType":"853","endLine":102,"endColumn":23,"suggestions":"1030"},{"ruleId":"855","severity":1,"message":"1002","line":12,"column":10,"nodeType":"857","messageId":"858","endLine":12,"endColumn":14},{"ruleId":"855","severity":1,"message":"933","line":3,"column":22,"nodeType":"857","messageId":"858","endLine":3,"endColumn":26},{"ruleId":"855","severity":1,"message":"1006","line":9,"column":10,"nodeType":"857","messageId":"858","endLine":9,"endColumn":18},{"ruleId":"855","severity":1,"message":"1007","line":9,"column":20,"nodeType":"857","messageId":"858","endLine":9,"endColumn":31},{"ruleId":"851","severity":1,"message":"862","line":15,"column":6,"nodeType":"853","endLine":15,"endColumn":8,"suggestions":"1031"},{"ruleId":"868","replacedBy":"1032"},{"ruleId":"870","replacedBy":"1033"},{"ruleId":"855","severity":1,"message":"1034","line":4,"column":3,"nodeType":"857","messageId":"858","endLine":4,"endColumn":18},{"ruleId":"855","severity":1,"message":"1035","line":5,"column":3,"nodeType":"857","messageId":"858","endLine":5,"endColumn":15},{"ruleId":"855","severity":1,"message":"1036","line":7,"column":3,"nodeType":"857","messageId":"858","endLine":7,"endColumn":22},{"ruleId":"855","severity":1,"message":"1037","line":8,"column":3,"nodeType":"857","messageId":"858","endLine":8,"endColumn":13},{"ruleId":"855","severity":1,"message":"892","line":12,"column":18,"nodeType":"857","messageId":"858","endLine":12,"endColumn":23},{"ruleId":"851","severity":1,"message":"903","line":45,"column":6,"nodeType":"853","endLine":45,"endColumn":18,"suggestions":"1038"},{"ruleId":"1039","severity":1,"message":"1040","line":76,"column":9,"nodeType":"907","endLine":76,"endColumn":70},{"ruleId":"1039","severity":1,"message":"1040","line":83,"column":9,"nodeType":"907","endLine":83,"endColumn":69},{"ruleId":"855","severity":1,"message":"968","line":4,"column":10,"nodeType":"857","messageId":"858","endLine":4,"endColumn":20},{"ruleId":"851","severity":1,"message":"1041","line":23,"column":6,"nodeType":"853","endLine":23,"endColumn":8,"suggestions":"1042"},{"ruleId":"855","severity":1,"message":"1007","line":33,"column":20,"nodeType":"857","messageId":"858","endLine":33,"endColumn":31},{"ruleId":"855","severity":1,"message":"896","line":38,"column":11,"nodeType":"857","messageId":"858","endLine":38,"endColumn":17},{"ruleId":"851","severity":1,"message":"1043","line":64,"column":6,"nodeType":"853","endLine":64,"endColumn":15,"suggestions":"1044"},{"ruleId":"855","severity":1,"message":"1045","line":9,"column":3,"nodeType":"857","messageId":"858","endLine":9,"endColumn":14},{"ruleId":"855","severity":1,"message":"1046","line":20,"column":8,"nodeType":"857","messageId":"858","endLine":20,"endColumn":23},{"ruleId":"855","severity":1,"message":"1007","line":28,"column":20,"nodeType":"857","messageId":"858","endLine":28,"endColumn":31},{"ruleId":"851","severity":1,"message":"1047","line":62,"column":6,"nodeType":"853","endLine":62,"endColumn":16,"suggestions":"1048"},{"ruleId":"851","severity":1,"message":"1049","line":42,"column":6,"nodeType":"853","endLine":42,"endColumn":8,"suggestions":"1050"},{"ruleId":"855","severity":1,"message":"881","line":13,"column":10,"nodeType":"857","messageId":"858","endLine":13,"endColumn":17},{"ruleId":"851","severity":1,"message":"1051","line":35,"column":6,"nodeType":"853","endLine":35,"endColumn":22,"suggestions":"1052"},{"ruleId":"855","severity":1,"message":"1007","line":18,"column":20,"nodeType":"857","messageId":"858","endLine":18,"endColumn":31},{"ruleId":"851","severity":1,"message":"1053","line":44,"column":6,"nodeType":"853","endLine":44,"endColumn":12,"suggestions":"1054"},{"ruleId":"855","severity":1,"message":"1055","line":414,"column":10,"nodeType":"857","messageId":"858","endLine":414,"endColumn":18},{"ruleId":"855","severity":1,"message":"1056","line":414,"column":20,"nodeType":"857","messageId":"858","endLine":414,"endColumn":31},{"ruleId":"855","severity":1,"message":"1007","line":416,"column":20,"nodeType":"857","messageId":"858","endLine":416,"endColumn":31},{"ruleId":"851","severity":1,"message":"1057","line":551,"column":6,"nodeType":"853","endLine":551,"endColumn":8,"suggestions":"1058"},{"ruleId":"855","severity":1,"message":"881","line":13,"column":10,"nodeType":"857","messageId":"858","endLine":13,"endColumn":17},{"ruleId":"855","severity":1,"message":"967","line":19,"column":3,"nodeType":"857","messageId":"858","endLine":19,"endColumn":22},{"ruleId":"855","severity":1,"message":"1059","line":31,"column":3,"nodeType":"857","messageId":"858","endLine":31,"endColumn":17},{"ruleId":"855","severity":1,"message":"1060","line":38,"column":38,"nodeType":"857","messageId":"858","endLine":38,"endColumn":47},{"ruleId":"851","severity":1,"message":"1061","line":134,"column":6,"nodeType":"853","endLine":134,"endColumn":16,"suggestions":"1062"},{"ruleId":"855","severity":1,"message":"1063","line":173,"column":9,"nodeType":"857","messageId":"858","endLine":173,"endColumn":18},{"ruleId":"855","severity":1,"message":"892","line":2,"column":16,"nodeType":"857","messageId":"858","endLine":2,"endColumn":21},{"ruleId":"855","severity":1,"message":"877","line":2,"column":23,"nodeType":"857","messageId":"858","endLine":2,"endColumn":29},{"ruleId":"855","severity":1,"message":"1005","line":87,"column":10,"nodeType":"857","messageId":"858","endLine":87,"endColumn":18},{"ruleId":"855","severity":1,"message":"1007","line":138,"column":20,"nodeType":"857","messageId":"858","endLine":138,"endColumn":31},{"ruleId":"851","severity":1,"message":"952","line":167,"column":6,"nodeType":"853","endLine":167,"endColumn":16,"suggestions":"1064"},{"ruleId":"855","severity":1,"message":"877","line":6,"column":10,"nodeType":"857","messageId":"858","endLine":6,"endColumn":16},{"ruleId":"851","severity":1,"message":"1065","line":36,"column":6,"nodeType":"853","endLine":36,"endColumn":8,"suggestions":"1066"},{"ruleId":"855","severity":1,"message":"1067","line":18,"column":22,"nodeType":"857","messageId":"858","endLine":18,"endColumn":35},{"ruleId":"855","severity":1,"message":"972","line":6,"column":3,"nodeType":"857","messageId":"858","endLine":6,"endColumn":10},{"ruleId":"855","severity":1,"message":"880","line":12,"column":10,"nodeType":"857","messageId":"858","endLine":12,"endColumn":22},{"ruleId":"855","severity":1,"message":"915","line":28,"column":3,"nodeType":"857","messageId":"858","endLine":28,"endColumn":16},{"ruleId":"855","severity":1,"message":"1007","line":45,"column":20,"nodeType":"857","messageId":"858","endLine":45,"endColumn":31},{"ruleId":"855","severity":1,"message":"881","line":55,"column":10,"nodeType":"857","messageId":"858","endLine":55,"endColumn":17},{"ruleId":"855","severity":1,"message":"882","line":55,"column":19,"nodeType":"857","messageId":"858","endLine":55,"endColumn":29},{"ruleId":"855","severity":1,"message":"883","line":56,"column":10,"nodeType":"857","messageId":"858","endLine":56,"endColumn":25},{"ruleId":"855","severity":1,"message":"884","line":56,"column":27,"nodeType":"857","messageId":"858","endLine":56,"endColumn":45},{"ruleId":"851","severity":1,"message":"1068","line":129,"column":6,"nodeType":"853","endLine":129,"endColumn":16,"suggestions":"1069"},{"ruleId":"855","severity":1,"message":"892","line":5,"column":18,"nodeType":"857","messageId":"858","endLine":5,"endColumn":23},{"ruleId":"851","severity":1,"message":"903","line":37,"column":6,"nodeType":"853","endLine":37,"endColumn":18,"suggestions":"1070"},{"ruleId":"1039","severity":1,"message":"1040","line":68,"column":9,"nodeType":"907","endLine":68,"endColumn":70},{"ruleId":"1039","severity":1,"message":"1040","line":75,"column":9,"nodeType":"907","endLine":75,"endColumn":69},{"ruleId":"855","severity":1,"message":"1017","line":1,"column":17,"nodeType":"857","messageId":"858","endLine":1,"endColumn":27},{"ruleId":"855","severity":1,"message":"875","line":1,"column":29,"nodeType":"857","messageId":"858","endLine":1,"endColumn":38},{"ruleId":"868","replacedBy":"1071"},{"ruleId":"870","replacedBy":"1072"},{"ruleId":"855","severity":1,"message":"1073","line":7,"column":3,"nodeType":"857","messageId":"858","endLine":7,"endColumn":15},{"ruleId":"855","severity":1,"message":"1074","line":26,"column":7,"nodeType":"857","messageId":"858","endLine":26,"endColumn":24},{"ruleId":"851","severity":1,"message":"903","line":93,"column":6,"nodeType":"853","endLine":93,"endColumn":16,"suggestions":"1075"},{"ruleId":"905","severity":1,"message":"906","line":99,"column":17,"nodeType":"907","endLine":99,"endColumn":36},{"ruleId":"855","severity":1,"message":"1076","line":54,"column":7,"nodeType":"857","messageId":"858","endLine":54,"endColumn":21},{"ruleId":"855","severity":1,"message":"1007","line":90,"column":20,"nodeType":"857","messageId":"858","endLine":90,"endColumn":31},{"ruleId":"855","severity":1,"message":"896","line":91,"column":11,"nodeType":"857","messageId":"858","endLine":91,"endColumn":17},{"ruleId":"851","severity":1,"message":"1077","line":182,"column":6,"nodeType":"853","endLine":182,"endColumn":8,"suggestions":"1078"},{"ruleId":"1010","severity":1,"message":"1079","line":227,"column":16,"nodeType":"1012","messageId":"1080","endLine":227,"endColumn":18},{"ruleId":"851","severity":1,"message":"926","line":68,"column":6,"nodeType":"853","endLine":68,"endColumn":16,"suggestions":"1081"},{"ruleId":"979","severity":1,"message":"980","line":22,"column":3,"nodeType":"981","messageId":"982","endLine":22,"endColumn":10},{"ruleId":"855","severity":1,"message":"1082","line":27,"column":10,"nodeType":"857","messageId":"858","endLine":27,"endColumn":14},{"ruleId":"855","severity":1,"message":"1083","line":27,"column":16,"nodeType":"857","messageId":"858","endLine":27,"endColumn":23},{"ruleId":"851","severity":1,"message":"1084","line":43,"column":6,"nodeType":"853","endLine":43,"endColumn":20,"suggestions":"1085"},{"ruleId":"851","severity":1,"message":"1086","line":13,"column":6,"nodeType":"853","endLine":13,"endColumn":8,"suggestions":"1087"},{"ruleId":"855","severity":1,"message":"971","line":2,"column":31,"nodeType":"857","messageId":"858","endLine":2,"endColumn":37},{"ruleId":"855","severity":1,"message":"924","line":2,"column":60,"nodeType":"857","messageId":"858","endLine":2,"endColumn":64},{"ruleId":"855","severity":1,"message":"879","line":3,"column":9,"nodeType":"857","messageId":"858","endLine":3,"endColumn":15},{"ruleId":"855","severity":1,"message":"875","line":1,"column":17,"nodeType":"857","messageId":"858","endLine":1,"endColumn":26},{"ruleId":"855","severity":1,"message":"1088","line":6,"column":10,"nodeType":"857","messageId":"858","endLine":6,"endColumn":11},{"ruleId":"855","severity":1,"message":"1089","line":6,"column":13,"nodeType":"857","messageId":"858","endLine":6,"endColumn":17},{"ruleId":"855","severity":1,"message":"1090","line":7,"column":10,"nodeType":"857","messageId":"858","endLine":7,"endColumn":11},{"ruleId":"855","severity":1,"message":"1091","line":7,"column":13,"nodeType":"857","messageId":"858","endLine":7,"endColumn":17},{"ruleId":"855","severity":1,"message":"877","line":2,"column":17,"nodeType":"857","messageId":"858","endLine":2,"endColumn":23},{"ruleId":"855","severity":1,"message":"966","line":2,"column":38,"nodeType":"857","messageId":"858","endLine":2,"endColumn":44},{"ruleId":"855","severity":1,"message":"1092","line":6,"column":3,"nodeType":"857","messageId":"858","endLine":6,"endColumn":16},{"ruleId":"851","severity":1,"message":"1093","line":20,"column":3,"nodeType":"857","endLine":20,"endColumn":12,"suggestions":"1094"},{"ruleId":"855","severity":1,"message":"967","line":3,"column":10,"nodeType":"857","messageId":"858","endLine":3,"endColumn":29},{"ruleId":"855","severity":1,"message":"968","line":4,"column":10,"nodeType":"857","messageId":"858","endLine":4,"endColumn":20},{"ruleId":"851","severity":1,"message":"903","line":42,"column":6,"nodeType":"853","endLine":42,"endColumn":16,"suggestions":"1095"},{"ruleId":"855","severity":1,"message":"1096","line":2,"column":18,"nodeType":"857","messageId":"858","endLine":2,"endColumn":21},{"ruleId":"855","severity":1,"message":"1007","line":24,"column":20,"nodeType":"857","messageId":"858","endLine":24,"endColumn":31},{"ruleId":"851","severity":1,"message":"1097","line":29,"column":6,"nodeType":"853","endLine":29,"endColumn":8,"suggestions":"1098"},{"ruleId":"905","severity":1,"message":"906","line":245,"column":21,"nodeType":"907","endLine":245,"endColumn":40},{"ruleId":"855","severity":1,"message":"1007","line":26,"column":20,"nodeType":"857","messageId":"858","endLine":26,"endColumn":31},{"ruleId":"851","severity":1,"message":"1099","line":38,"column":6,"nodeType":"853","endLine":38,"endColumn":8,"suggestions":"1100"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["1101"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["1102"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-native-reassign",["1103"],"no-negated-in-lhs",["1104"],"'StarOutlined' is defined but never used.","'ForwardOutlined' is defined but never used.","'includes' is defined but never used.","'useEffect' is defined but never used.","'getUserProfileInfo' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Option' is assigned a value but never used.","'PlusOutlined' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'thumbnailBase64' is assigned a value but never used.","'setThumbnailBase64' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'props.selectedProduct'. Either include them or remove the dependency array.",["1105"],"'ReactElement' is defined but never used.","'ChonkyFileActionData' is defined but never used.","'exerciseWorkoutTimeTrack' is assigned a value but never used.",["1103"],["1104"],"'Modal' is defined but never used.","'PlayerState' is defined but never used.","'setPlayerState' is assigned a value but never used.","'setCurrentBreak' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'playing' is assigned a value but never used.","'setPlaying' is assigned a value but never used.","'LanguageStore' is defined but never used.",["1106"],"'r' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fechUserInfo'. Either include it or remove the dependency array.",["1108"],"React Hook useEffect has a missing dependency: 'createSub'. Either include it or remove the dependency array.",["1109"],["1103"],["1104"],"'getAllRecipes' is defined but never used.","React Hook useCallback has missing dependencies: 'checkForType', 'mediaActions', 'mediaType', 'setCurrentFolderName', 'setOpenUploadModal', and 'setRemoteMediaManagerVisible'. Either include them or remove the dependency array. If 'checkForType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1110"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'resetFileMap' is assigned a value but never used.","'Checkbox' is defined but never used.","'List' is defined but never used.","'category' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["1111"],"'Footer' is defined but never used.","'LikeOutlined' is defined but never used.","'ChallengeReviewModal' is defined but never used.","'serUserInfo' is assigned a value but never used.",["1112"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.onPricingPage'. Either include them or remove the dependency array.",["1113"],"'CaretRightOutlined' is defined but never used.","'PauseOutlined' is defined but never used.","'totalDuration' is assigned a value but never used.",["1103"],["1104"],"'UpdateChallenge' is defined but never used.","'LoadingOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'registerUser' is defined but never used.","'membership' is assigned a value but never used.","'goals' is assigned a value but never used.","'setGoals' is assigned a value but never used.",["1103"],["1104"],["1103"],["1104"],"React Hook useEffect has a missing dependency: 'fethData'. Either include it or remove the dependency array.",["1114"],"'selectBefore' is assigned a value but never used.","'UserOutlined' is defined but never used.","no-redeclare","'n' is already defined.","redeclared",["1103"],["1104"],"'AuditOutlined' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.",["1103"],["1104"],"'Input' is defined but never used.","'Switch' is defined but never used.","'CloseSquareOutlined' is defined but never used.","'createPost' is defined but never used.","React Hook useEffect has missing dependencies: 'form', 'selectedFaq.answer', 'selectedFaq.category', 'selectedFaq.isPublic', and 'selectedFaq.question'. Either include them or remove the dependency array. If 'setIsPublic' needs the current value of 'selectedFaq.isPublic', you can also switch to useReducer instead of useState and read 'selectedFaq.isPublic' in the reducer.",["1115"],"'Upload' is defined but never used.","'message' is defined but never used.",["1103"],["1104"],"'_' is defined but never used.",["1103"],["1104"],"'slug' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","Duplicate key 'margin'.",["1116"],"React Hook useEffect has a missing dependency: 'challanges'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterChallenges' needs the current value of 'challanges'.",["1117"],"React Hook useEffect has missing dependencies: 'fetchData', 'props.history', 'setUserInfo', and 'userInfo'. Either include them or remove the dependency array.",["1118"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["1103"],["1104"],"'updateBlogCategory' is defined but never used.",["1103"],["1104"],"React Hook useEffect has missing dependencies: 'gender', 'months', and 'recommandedChal'. Either include them or remove the dependency array. If 'setMybody' needs the current value of 'gender', you can also switch to useReducer instead of useState and read 'gender' in the reducer.",["1119"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchInfo'. Either include it or remove the dependency array.",["1120"],"'form' is assigned a value but never used.","'res' is assigned a value but never used.","'createChallenge' is defined but never used.","'products' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addStuffToMainTabForm'. Either include it or remove the dependency array.",["1121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["1103"],["1104"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'userInfo'. Either include them or remove the dependency array.",["1122"],"'checkUser' is defined but never used.","'set' is defined but never used.","'selectedChallenge' is assigned a value but never used.",["1123"],"'breakContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setExerciseWorkoutTimeTrack'. Either include it or remove the dependency array.",["1124"],"React Hook useEffect has missing dependencies: 'currentExercise.index', 'moveToNextExercise', 'playerState', 'setPlayerState', 'setTimerVisible', and 'workout.exercises'. Either include them or remove the dependency array. If 'moveToNextExercise' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1125"],["1126"],["1103"],["1104"],"'CommentOutlined' is defined but never used.","'FireOutlined' is defined but never used.","'ClockCircleOutlined' is defined but never used.","'FlagFilled' is defined but never used.",["1127"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'form', 'postInfo.image', 'postInfo.text', 'postInfo.title', and 'postInfo.type'. Either include them or remove the dependency array. If 'setType' needs the current value of 'postInfo.type', you can also switch to useReducer instead of useState and read 'postInfo.type' in the reducer.",["1128"],"React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["1129"],"'getAllBlogs' is defined but never used.","'ReactHTMLParser' is defined but never used.","React Hook useEffect has missing dependencies: 'fethData' and 'getAllBlogsFromBackend'. Either include them or remove the dependency array.",["1130"],"React Hook useEffect has missing dependencies: 'exerciseValues' and 'form'. Either include them or remove the dependency array.",["1131"],"React Hook useEffect has missing dependencies: 'challengesApplicableOn' and 'form'. Either include them or remove the dependency array. You can also do a functional update 'setChallengesApplicableOn(c => ...)' if you only need 'challengesApplicableOn' in the 'setChallengesApplicableOn' call.",["1132"],"React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["1133"],"'newPrice' is assigned a value but never used.","'setNewPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedChallenge.price'. Either include it or remove the dependency array.",["1134"],"'createProducts' is defined but never used.","'Draggable' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchExercises'. Either include it or remove the dependency array.",["1135"],"'rmProduct' is assigned a value but never used.",["1136"],"React Hook useEffect has a missing dependency: 'getNextChallenges'. Either include it or remove the dependency array.",["1137"],"'setFullscreen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllRecipes' and 'fetchData'. Either include them or remove the dependency array.",["1138"],["1139"],["1103"],["1104"],"'LockOutlined' is defined but never used.","'passwordIconStyle' is assigned a value but never used.",["1140"],"'iconsListStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eatingBehave', 'fetchData', 'recommandedWeekDiet', 'selectedrRecipes', 'setMealsForTheWeek', and 'userProfile'. Either include them or remove the dependency array. You can also do a functional update 'setEatingBehave(e => ...)' if you only need 'eatingBehave' in the 'setEatingBehave' call.",["1141"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["1142"],"'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allTrainers'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterTrainers' needs the current value of 'allTrainers'.",["1143"],"React Hook useEffect has a missing dependency: 'verifyEmailSendToken'. Either include it or remove the dependency array.",["1144"],"'a' is assigned a value but never used.","'setA' is assigned a value but never used.","'t' is assigned a value but never used.","'setT' is assigned a value but never used.","'RightOutlined' is defined but never used.","React Hook useEffect contains a call to 'setShowModal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["1145"],["1146"],"'Tag' is defined but never used.","React Hook useEffect has missing dependencies: 'userInfo.id' and 'userInfo.role'. Either include them or remove the dependency array.",["1147"],"React Hook useEffect has missing dependencies: 'props.history', 'userInfo.authenticated', and 'userInfo.role'. Either include them or remove the dependency array.",["1148"],{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},"no-global-assign","no-unsafe-negation",{"desc":"1153","fix":"1154"},{"desc":"1151","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1153","fix":"1164"},{"desc":"1156","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1156","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1189","fix":"1190"},{"desc":"1151","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1196","fix":"1197"},{"desc":"1198","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1208","fix":"1209"},{"desc":"1168","fix":"1210"},{"desc":"1211","fix":"1212"},{"desc":"1213","fix":"1214"},{"desc":"1192","fix":"1215"},{"desc":"1185","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},"Update the dependencies array to be: [checkUserInfo]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [props.history]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [form, props.selectedProduct]",{"range":"1237","text":"1238"},{"range":"1239","text":"1236"},"Update the dependencies array to be: [fetchData]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [fechUserInfo]",{"range":"1242","text":"1243"},"Update the dependencies array to be: [createSub]",{"range":"1244","text":"1245"},"Update the dependencies array to be: [checkForType, deleteFiles, mediaActions, mediaType, setCurrentFolderId, setCurrentFolderName, setOpenUploadModal, setRemoteMediaManagerVisible]",{"range":"1246","text":"1247"},{"range":"1248","text":"1238"},{"range":"1249","text":"1241"},"Update the dependencies array to be: [props.history, props.onPricingPage]",{"range":"1250","text":"1251"},"Update the dependencies array to be: [fethData, language]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [form, selectedFaq.answer, selectedFaq.category, selectedFaq.isPublic, selectedFaq.question]",{"range":"1254","text":"1255"},{"range":"1256","text":"1241"},"Update the dependencies array to be: [challanges, filterByBodyFocus, filterByEquipments, filterByGoal, filterByIntensity]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [fetchData, props.history, setUserInfo, userInfo]",{"range":"1259","text":"1260"},"Update the dependencies array to be: [gender, months, recommandedChal, userProfile]",{"range":"1261","text":"1262"},"Update the dependencies array to be: [fetchInfo]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [addStuffToMainTabForm]",{"range":"1265","text":"1266"},"Update the dependencies array to be: [form, userInfo]",{"range":"1267","text":"1268"},"Update the dependencies array to be: [fetchData, userInfo]",{"range":"1269","text":"1270"},"Update the dependencies array to be: [setExerciseWorkoutTimeTrack, workout]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [currentExercise.index, exerciseSeconds, moveToNextExercise, playerState, setPlayerState, setTimerVisible, workout.exercises]",{"range":"1273","text":"1274"},{"range":"1275","text":"1236"},"Update the dependencies array to be: [fetchData, pageNumber]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [form, postInfo.image, postInfo.text, postInfo.title, postInfo.type]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [current, getUserDetails]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [fethData, getAllBlogsFromBackend, language]",{"range":"1282","text":"1283"},"Update the dependencies array to be: [exerciseValues, form]",{"range":"1284","text":"1285"},"Update the dependencies array to be: [challengesApplicableOn, form, selectedCoupon]",{"range":"1286","text":"1287"},"Update the dependencies array to be: [item, userInfo.id]",{"range":"1288","text":"1289"},"Update the dependencies array to be: [selectedChallenge.price]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [fetchExercises, trainers]",{"range":"1292","text":"1293"},{"range":"1294","text":"1253"},"Update the dependencies array to be: [getNextChallenges]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [fetchAllRecipes, fetchData, language]",{"range":"1297","text":"1298"},{"range":"1299","text":"1277"},{"range":"1300","text":"1270"},"Update the dependencies array to be: [eatingBehave, fetchData, recommandedWeekDiet, selectedrRecipes, setMealsForTheWeek, userProfile]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [blogInfo, form]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [allTrainers, filterGender]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [verifyEmailSendToken]",{"range":"1307","text":"1308"},"Add dependencies array: []",{"range":"1309","text":"1310"},"Update the dependencies array to be: [fetchData, language]",{"range":"1311","text":"1312"},"Update the dependencies array to be: [userInfo.id, userInfo.role]",{"range":"1313","text":"1314"},"Update the dependencies array to be: [props.history, userInfo.authenticated, userInfo.role]",{"range":"1315","text":"1316"},[2391,2393],"[checkUserInfo]",[1263,1265],"[props.history]",[7113,7115],"[form, props.selectedProduct]",[1232,1234],[2203,2205],"[fetchData]",[3568,3570],"[fechUserInfo]",[391,393],"[createSub]",[22835,22893],"[checkForType, deleteFiles, mediaActions, mediaType, setCurrentFolderId, setCurrentFolderName, setOpenUploadModal, setRemoteMediaManagerVisible]",[2139,2162],[1643,1645],[986,988],"[props.history, props.onPricingPage]",[3096,3106],"[fethData, language]",[1626,1628],"[form, selectedFaq.answer, selectedFaq.category, selectedFaq.isPublic, selectedFaq.question]",[1755,1757],[3649,3721],"[challanges, filterByBodyFocus, filterByEquipments, filterByGoal, filterByIntensity]",[2638,2640],"[fetchData, props.history, setUserInfo, userInfo]",[3103,3116],"[gender, months, recommandedChal, userProfile]",[1110,1112],"[fetchInfo]",[6560,6562],"[addStuffToMainTabForm]",[3396,3398],"[form, userInfo]",[4813,4823],"[fetchData, userInfo]",[2337,2346],"[setExerciseWorkoutTimeTrack, workout]",[3159,3176],"[currentExercise.index, exerciseSeconds, moveToNextExercise, playerState, setPlayerState, setTimerVisible, workout.exercises]",[475,477],[1368,1380],"[fetchData, pageNumber]",[922,924],"[form, postInfo.image, postInfo.text, postInfo.title, postInfo.type]",[2460,2469],"[current, getUserDetails]",[2581,2591],"[fethData, getAllBlogsFromBackend, language]",[1499,1501],"[exerciseValues, form]",[1240,1256],"[challengesApplicableOn, form, selectedCoupon]",[1733,1739],"[item, userInfo.id]",[20454,20456],"[selectedChallenge.price]",[3606,3616],"[fetchExercises, trainers]",[7295,7305],[1756,1758],"[getNextChallenges]",[4941,4951],"[fetchAllRecipes, fetchData, language]",[1268,1280],[2942,2952],[5776,5778],"[eatingBehave, fetchData, recommandedWeekDiet, selectedrRecipes, setMealsForTheWeek, userProfile]",[2728,2738],"[blogInfo, form]",[1325,1339],"[allTrainers, filterGender]",[583,585],"[verifyEmailSendToken]",[837,837],", []",[1490,1500],"[fetchData, language]",[1365,1367],"[userInfo.id, userInfo.role]",[1230,1232],"[props.history, userInfo.authenticated, userInfo.role]"]