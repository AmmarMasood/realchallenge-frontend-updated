[{"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\App.js":"1","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Magazine.js":"2","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Login.js":"3","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserProfile.js":"4","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HelpCenter.js":"5","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\PrivacyPolicy.js":"6","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\payment.js":"7","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\NewPost.js":"8","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\NewProduct.js":"9","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\UpdateRecipe.js":"10","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\bodyFocus.js":"11","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\mediaManagerUtils.js":"12","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\PlayerVideoBrowser.js":"13","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeReviewModal.js":"14","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\MusicPlayer.js":"15","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\index.js":"16","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\UserStore.js":"17","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Signup.js":"18","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TrainerProfile.js":"19","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserUpdate.js":"20","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\CookiePolicy.js":"21","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\MollieRedirectPage.js":"22","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\main.js":"23","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\WorkoutCompleteModal.js":"24","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\AllFaqs.js":"25","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\AllRecipes.js":"26","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaManager.js":"27","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\blogs.js":"28","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\UpdateProduct.js":"29","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ReplaceFreeChallengePopup.js":"30","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomExercisePanel.js":"31","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\reportWebVitals.js":"32","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\RecipeProfile.js":"33","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\NewWelcome.js":"34","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\HelpPopupPlayer.js":"35","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\AllChallenges.js":"36","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\NewUser.js":"37","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\posts.js":"38","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\communityPosts.js":"39","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMainTab.js":"40","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomWeekPanel.js":"41","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\CommentSection.js":"42","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\LanguageContext.js":"43","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AdminDashboard.js":"44","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Footer.js":"45","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\customer.js":"46","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RequestManager\\AllRequests.js":"47","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\UpdateFaq.js":"48","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMusicTab.js":"49","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\shop.js":"50","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Nutrition\\SearchNutrition.js":"51","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\PaymentProcessStore.js":"52","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AllChallenges.js":"53","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengePlayer.js":"54","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\PackageSelector.js":"55","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\goals.js":"56","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\mediaManager.js":"57","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\AllProducts.js":"58","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\EditTypeName.js":"59","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Challenges.js":"60","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteNextModal.js":"61","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\i18next.js":"62","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Pricing.js":"63","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\MagazineArticle.js":"64","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ResetNewPassword.js":"65","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\UpdateChallenge.js":"66","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\AllUsers.js":"67","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeAdditionalTab.js":"68","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\Player.js":"69","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HowItWork.js":"70","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\authentication.js":"71","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\UpdateUser.js":"72","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengeProfile.js":"73","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\RenderedVideoPlayer.js":"74","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\NonRenderedVideoPlayer.js":"75","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ForgotPassword.js":"76","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\ChoosePlan.js":"77","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Cards\\ChallengeCard.js":"78","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\coupons.js":"79","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\faqs.js":"80","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\AllCoupons.js":"81","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Community.js":"82","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\UpdatePost.js":"83","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserDashboard.js":"84","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\NewBlog.js":"85","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\UpdateExercise.js":"86","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\UpdateCoupon.js":"87","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Common\\ReviewsModal.js":"88","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\CreatePayment.js":"89","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\NewCoupon.js":"90","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\recipes.js":"91","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutTab.js":"92","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallenge.js":"93","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteModal.js":"94","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\FullScreenPlayerVideosBrowser.js":"95","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\NewRecipe.js":"96","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\EditTypeName.js":"97","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Feed.js":"98","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TermsAndCondition.js":"99","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\EditCategoryName.js":"100","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaFileUploader.js":"101","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserSetting.js":"102","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LoggedinNavbar.js":"103","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Nutrient.js":"104","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\tags.js":"105","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\UpdateBlog.js":"106","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Trainers.js":"107","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Challenges.js":"108"},{"size":7372,"mtime":1649703412690,"results":"109","hashOfConfig":"110"},{"size":6585,"mtime":1646070446740,"results":"111","hashOfConfig":"112"},{"size":8485,"mtime":1640694883191,"results":"113","hashOfConfig":"110"},{"size":3956,"mtime":1617391783020,"results":"114","hashOfConfig":"110"},{"size":3491,"mtime":1625316829240,"results":"115","hashOfConfig":"110"},{"size":1943,"mtime":1643492385319,"results":"116","hashOfConfig":"110"},{"size":10850,"mtime":1633858841310,"results":"117","hashOfConfig":"110"},{"size":3739,"mtime":1640718252701,"results":"118","hashOfConfig":"110"},{"size":10406,"mtime":1649704272978,"results":"119","hashOfConfig":"110"},{"size":38498,"mtime":1649492303299,"results":"120","hashOfConfig":"110"},{"size":1636,"mtime":1631437961079,"results":"121","hashOfConfig":"110"},{"size":3421,"mtime":1618777961923,"results":"122","hashOfConfig":"110"},{"size":8595,"mtime":1649104221834,"results":"123","hashOfConfig":"110"},{"size":2978,"mtime":1630875504626,"results":"124","hashOfConfig":"110"},{"size":5018,"mtime":1649103884961,"results":"125","hashOfConfig":"110"},{"size":1207,"mtime":1624653117883,"results":"126","hashOfConfig":"110"},{"size":770,"mtime":1636919810994,"results":"127","hashOfConfig":"110"},{"size":13728,"mtime":1646075308239,"results":"128","hashOfConfig":"110"},{"size":12460,"mtime":1649705786481,"results":"129","hashOfConfig":"110"},{"size":23665,"mtime":1649703824406,"results":"130","hashOfConfig":"110"},{"size":1929,"mtime":1643492368393,"results":"131","hashOfConfig":"112"},{"size":2102,"mtime":1626391458009,"results":"132","hashOfConfig":"110"},{"size":8215,"mtime":1649703594727,"results":"133","hashOfConfig":"110"},{"size":2007,"mtime":1636893063292,"results":"134","hashOfConfig":"112"},{"size":3403,"mtime":1641305964945,"results":"135","hashOfConfig":"112"},{"size":3677,"mtime":1641313030271,"results":"136","hashOfConfig":"112"},{"size":25670,"mtime":1649101740213,"results":"137","hashOfConfig":"110"},{"size":3911,"mtime":1649703585304,"results":"138","hashOfConfig":"110"},{"size":9075,"mtime":1619781559200,"results":"139","hashOfConfig":"112"},{"size":1407,"mtime":1633502003437,"results":"140","hashOfConfig":"110"},{"size":3867,"mtime":1625079704428,"results":"141","hashOfConfig":"110"},{"size":375,"mtime":1612865032814,"results":"142","hashOfConfig":"110"},{"size":15544,"mtime":1649705481256,"results":"143","hashOfConfig":"110"},{"size":12130,"mtime":1646073929044,"results":"144","hashOfConfig":"110"},{"size":6278,"mtime":1649104273475,"results":"145","hashOfConfig":"110"},{"size":6672,"mtime":1641305112450,"results":"146","hashOfConfig":"110"},{"size":23006,"mtime":1649713952144,"results":"147","hashOfConfig":"110"},{"size":2892,"mtime":1622656581848,"results":"148","hashOfConfig":"110"},{"size":3020,"mtime":1640607466365,"results":"149","hashOfConfig":"110"},{"size":28922,"mtime":1649498666904,"results":"150","hashOfConfig":"110"},{"size":6253,"mtime":1628276798022,"results":"151","hashOfConfig":"110"},{"size":6675,"mtime":1640607476506,"results":"152","hashOfConfig":"110"},{"size":393,"mtime":1618235220648,"results":"153","hashOfConfig":"110"},{"size":23145,"mtime":1641312455749,"results":"154","hashOfConfig":"110"},{"size":4673,"mtime":1615315654218,"results":"155","hashOfConfig":"110"},{"size":1239,"mtime":1629153304912,"results":"156","hashOfConfig":"110"},{"size":6443,"mtime":1641241853127,"results":"157","hashOfConfig":"110"},{"size":7671,"mtime":1631447235491,"results":"158","hashOfConfig":"110"},{"size":4614,"mtime":1622104261627,"results":"159","hashOfConfig":"110"},{"size":2983,"mtime":1619781017191,"results":"160","hashOfConfig":"110"},{"size":16970,"mtime":1649704707677,"results":"161","hashOfConfig":"110"},{"size":474,"mtime":1624652706332,"results":"162","hashOfConfig":"110"},{"size":11625,"mtime":1649704703458,"results":"163","hashOfConfig":"110"},{"size":17490,"mtime":1649103858230,"results":"164","hashOfConfig":"110"},{"size":5858,"mtime":1626038935485,"results":"165","hashOfConfig":"110"},{"size":1251,"mtime":1619026606632,"results":"166","hashOfConfig":"110"},{"size":9071,"mtime":1636848563331,"results":"167","hashOfConfig":"110"},{"size":3795,"mtime":1619781527788,"results":"168","hashOfConfig":"110"},{"size":2084,"mtime":1631433267801,"results":"169","hashOfConfig":"110"},{"size":17696,"mtime":1649703931655,"results":"170","hashOfConfig":"110"},{"size":2361,"mtime":1649103673980,"results":"171","hashOfConfig":"110"},{"size":531,"mtime":1614860346242,"results":"172","hashOfConfig":"110"},{"size":13304,"mtime":1626595613397,"results":"173","hashOfConfig":"110"},{"size":11068,"mtime":1640881018859,"results":"174","hashOfConfig":"110"},{"size":3815,"mtime":1646074762517,"results":"175","hashOfConfig":"110"},{"size":22560,"mtime":1635797631248,"results":"176","hashOfConfig":"110"},{"size":6014,"mtime":1641313113665,"results":"177","hashOfConfig":"110"},{"size":8298,"mtime":1649704337753,"results":"178","hashOfConfig":"110"},{"size":1714,"mtime":1629616326530,"results":"179","hashOfConfig":"110"},{"size":11162,"mtime":1618323410511,"results":"180","hashOfConfig":"110"},{"size":5714,"mtime":1636908483217,"results":"181","hashOfConfig":"110"},{"size":17304,"mtime":1649102988162,"results":"182","hashOfConfig":"110"},{"size":39100,"mtime":1649103825596,"results":"183","hashOfConfig":"110"},{"size":7026,"mtime":1649104168624,"results":"184","hashOfConfig":"110"},{"size":4130,"mtime":1649104239072,"results":"185","hashOfConfig":"110"},{"size":2439,"mtime":1620039438813,"results":"186","hashOfConfig":"110"},{"size":1377,"mtime":1625266725690,"results":"187","hashOfConfig":"110"},{"size":2066,"mtime":1638693952125,"results":"188","hashOfConfig":"110"},{"size":2568,"mtime":1631633522519,"results":"189","hashOfConfig":"110"},{"size":3296,"mtime":1631446614844,"results":"190","hashOfConfig":"110"},{"size":4814,"mtime":1643493140469,"results":"191","hashOfConfig":"110"},{"size":7041,"mtime":1640606842451,"results":"192","hashOfConfig":"110"},{"size":4465,"mtime":1649704306844,"results":"193","hashOfConfig":"110"},{"size":6660,"mtime":1640606673522,"results":"194","hashOfConfig":"110"},{"size":13064,"mtime":1649704353107,"results":"195","hashOfConfig":"110"},{"size":5429,"mtime":1632591074057,"results":"196","hashOfConfig":"110"},{"size":5887,"mtime":1641210443873,"results":"197","hashOfConfig":"110"},{"size":8304,"mtime":1631621507122,"results":"198","hashOfConfig":"110"},{"size":31010,"mtime":1641388987046,"results":"199","hashOfConfig":"110"},{"size":5962,"mtime":1643493328009,"results":"200","hashOfConfig":"110"},{"size":16749,"mtime":1649703566986,"results":"201","hashOfConfig":"110"},{"size":41974,"mtime":1632567121448,"results":"202","hashOfConfig":"110"},{"size":17856,"mtime":1643487624882,"results":"203","hashOfConfig":"110"},{"size":5872,"mtime":1640691017600,"results":"204","hashOfConfig":"110"},{"size":1183,"mtime":1628373451719,"results":"205","hashOfConfig":"110"},{"size":34318,"mtime":1649492285069,"results":"206","hashOfConfig":"110"},{"size":1585,"mtime":1631447093438,"results":"207","hashOfConfig":"110"},{"size":6910,"mtime":1636882400870,"results":"208","hashOfConfig":"110"},{"size":1927,"mtime":1643492399355,"results":"209","hashOfConfig":"110"},{"size":1547,"mtime":1631394709982,"results":"210","hashOfConfig":"110"},{"size":14193,"mtime":1640097260936,"results":"211","hashOfConfig":"110"},{"size":11506,"mtime":1633868956142,"results":"212","hashOfConfig":"110"},{"size":3579,"mtime":1636920067343,"results":"213","hashOfConfig":"110"},{"size":40353,"mtime":1643492500764,"results":"214","hashOfConfig":"110"},{"size":1213,"mtime":1619026552964,"results":"215","hashOfConfig":"110"},{"size":13499,"mtime":1649704363735,"results":"216","hashOfConfig":"110"},{"size":7196,"mtime":1649704683847,"results":"217","hashOfConfig":"110"},{"size":12675,"mtime":1649704700062,"results":"218","hashOfConfig":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wxw0wd",{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15x7cdi",{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"230"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"230"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"226"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"302"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"230"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"253"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"230"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"264"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"253"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"264"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"352"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"226"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"285"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"264"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"230"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\App.js",["468"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Magazine.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Login.js",["469","470","471","472","473","474"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Input, Form } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport \"../assets/login.css\";\r\nimport \"../assets/home.css\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport Logo from \"../images/logo.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  loginUser,\r\n  loginUserWithGoogle,\r\n  loginUserWithFacebook,\r\n} from \"../services/authentication\";\r\nimport { userInfoContext, userPointsContext } from \"../contexts/UserStore\";\r\nimport setAuthToken from \"../helpers/setAuthToken\";\r\nimport { getUserPoints } from \"../services/users\";\r\n\r\nfunction Login(props) {\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const [userPoints, setUserPoints] = useContext(userPointsContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errror, setError] = useState(\"\");\r\n  const [t] = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwtToken\")) {\r\n      props.history.push(\"/user/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const responseFacebook = async (response) => {\r\n    // setLoading(true);\r\n    const res = await loginUserWithFacebook({\r\n      id: response.id,\r\n      email: response.email,\r\n    });\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\"Unable to login.\");\r\n      // setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      // setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (\r\n        res.res.role === \"admin\" ||\r\n        res.res.role === \"trainer\" ||\r\n        res.res.role === \"nutrist\" ||\r\n        res.res.role === \"blogger\" ||\r\n        res.res.role === \"shopmanager\"\r\n      ) {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      // \"admin\",\r\n      //   \"trainer\",\r\n      //   \"nutrist\",\r\n      //   \"blogger\",\r\n      //   \"shopmanager\",\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    return;\r\n    // setLoading(true);\r\n    console.log(\"response google\");\r\n    const res = await loginUserWithGoogle({\r\n      googleId: response.googleId,\r\n      email: response.profileObj.email,\r\n    });\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\"Unable to login.\");\r\n      // setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      // setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (res.res.role === \"admin\") {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = () => {};\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    const res = await loginUser(values.username, values.password);\r\n    if (!res.success) {\r\n      console.log(res);\r\n      setError(\r\n        \"Unable to login. Please make sure you've entered correct username and password.\"\r\n      );\r\n      setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setUserInfo({\r\n        ...userInfo,\r\n        id: res.res.user_id,\r\n        email: res.res.email,\r\n        // isActive: ,\r\n        role: res.res.role,\r\n        username: res.res.username,\r\n        authenticated: true,\r\n      });\r\n      console.log(\"res from login\", res);\r\n      localStorage.setItem(\"jwtToken\", res.res.token);\r\n      localStorage.setItem(\"isActive\", res.res.isActive);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      getUserPoints(userPoints, setUserPoints);\r\n      // localStorage.setItem(\"role\", res.res.role);\r\n      if (\r\n        res.res.role === \"admin\" ||\r\n        res.res.role === \"trainer\" ||\r\n        res.res.role === \"nutrist\" ||\r\n        res.res.role === \"blogger\" ||\r\n        res.res.role === \"shopmanager\"\r\n      ) {\r\n        props.history.push(\"/admin/dashboard\");\r\n        return;\r\n      }\r\n      if (res.res.role === \"customer\") {\r\n        props.history.push(\"/user/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"login-container\">\r\n        <div className=\"login-container-column1\">\r\n          <img className=\"login-logo\" src={Logo} alt=\"logo\" />\r\n          <h1 className=\"font-heading-white\">{t(\"login.login\")}</h1>\r\n          <Form\r\n            layout=\"vertical\"\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"login-textfield-box\">\r\n              <Form.Item\r\n                label={\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"login.username\")}\r\n                  </span>\r\n                }\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"login-textfield-box\">\r\n              <Form.Item\r\n                label={\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"login.password\")}\r\n                  </span>\r\n                }\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </div>\r\n            <Link to=\"/forgot-password\" className=\"login-forgot-password\">\r\n              {t(\"login.forgot_pass\")}\r\n            </Link>\r\n            <div style={{ textAlign: \"center\", margin: \"10px 0\" }}>\r\n              {loading ? (\r\n                <LoadingOutlined\r\n                  style={{ color: \"#ff7700\", fontSize: \"30px\" }}\r\n                />\r\n              ) : (\r\n                <button\r\n                  className=\"common-orange-button signup-btn\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"login.login\")}\r\n                  </span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <p\r\n              className=\"font-paragraph-white\"\r\n              style={{ color: \"#ff4d4f\", margin: \"5px\" }}\r\n            >\r\n              {errror}\r\n            </p>\r\n          </Form>\r\n\r\n          <FacebookLogin\r\n            appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n            fields=\"name,email,picture\"\r\n            callback={responseFacebook}\r\n            render={(renderProps) => (\r\n              <button\r\n                class=\"loginBtn loginBtn--facebook\"\r\n                onClick={renderProps.onClick}\r\n              >\r\n                Login With Facebook\r\n              </button>\r\n            )}\r\n          />\r\n          <GoogleLogin\r\n            clientId={process.env.REACT_APP_GOOGLE_APP_ID}\r\n            render={(renderProps) => (\r\n              <button\r\n                class=\"loginBtn loginBtn--google\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            )}\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n          />\r\n        </div>\r\n        <div className=\"login-container-column2\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n",["475","476"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserProfile.js",["477","478"],"import React, { useState } from \"react\";\r\nimport \"../assets/trainerprofile.css\";\r\nimport \"../assets/home.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { StarOutlined, ForwardOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ChallengeCard from \"../components/Cards/ChallengeCard\";\r\n\r\nfunction UserProfile() {\r\n  const [t] = useTranslation();\r\n  // eslint-disable-next-line\r\n  const [trainer, setTrainer] = useState({\r\n    id: 12313123123,\r\n    name: \"Anton Fekete\",\r\n    about:\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n    avatar:\r\n      \"https://realchallenge.fit/wp-content/uploads/2020/05/Nadine-de-Ruiter.jpg\",\r\n    challenges: [\r\n      {\r\n        name: \"Danish challenge\",\r\n        picture:\r\n          \"https://realchallenge.fit/wp-content/uploads/2020/05/Didi-photo-1.jpg\",\r\n        rating: 5,\r\n      },\r\n      {\r\n        name: \"Danish challenge\",\r\n        picture:\r\n          \"https://realchallenge.fit/wp-content/uploads/2020/05/Didi-photo-1.jpg\",\r\n        rating: 5,\r\n      },\r\n      {\r\n        name: \"Englsih challenge\",\r\n        picture:\r\n          \"https://realchallenge.fit/wp-content/uploads/2020/05/Didi-photo-1.jpg\",\r\n        rating: 3,\r\n      },\r\n    ],\r\n  });\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"trainer-profile-container\">\r\n        <div\r\n          className=\"trainer-profile-container-column1\"\r\n          style={{ alignItems: \"center\" }}\r\n        >\r\n          <div className=\"profile-box\" style={{ margin: 0 }}>\r\n            <div\r\n              className=\"profile-box-row1\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div className=\"profile-box-row1-avatar\">\r\n                <img src={trainer.avatar} alt=\"trainer-profile\" />\r\n              </div>\r\n              <div className=\"profile-box-row1-information\">\r\n                <h2 className=\"font-heading-white\">{trainer.name}</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"trainer-profile-container-column2\">\r\n          <div className=\"trainer-profile-aboutme\">\r\n            <div\r\n              className=\"trainer-profile-aboutme-heading font-paragraph-white\"\r\n              style={{ color: \"#333b44\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"user_profile.about_me\")}\r\n            </div>\r\n            <div className=\"trainer-profile-aboutme-container font-paragraph-white\">\r\n              {trainer.about}\r\n            </div>\r\n          </div>\r\n          <div className=\"trainer-profile-challenges\">\r\n            <div\r\n              className=\"trainer-profile-challenges-heading font-paragraph-white\"\r\n              style={{ color: \"#333b44\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"user_profile.challenges\")}\r\n            </div>\r\n            <div className=\"trainer-profile-challenges-container\">\r\n              {trainer.challenges.map((challenge) => (\r\n                <Link to={`/trainers/${challenge.id}`}>\r\n                  <ChallengeCard\r\n                    picture={challenge.picture}\r\n                    name={challenge.name}\r\n                    rating={challenge.rating}\r\n                  />\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n",["479","480"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HelpCenter.js",["481"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Input, Tag, Card } from \"antd\";\r\n\r\nimport \"../assets/helpcenter.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAllFaqCategories, getAllFaqs } from \"../services/faqs\";\r\nimport { includes } from \"lodash\";\r\nconst { CheckableTag } = Tag;\r\n\r\nfunction HelpCenter() {\r\n  const [t] = useTranslation();\r\n  const [selectedCategory, setSelectedCategory] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [filteredQuestion, setFilteredQuestions] = useState([]);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const nC =\r\n      selectedCategory.length > 0\r\n        ? questions.filter((q) =>\r\n            q.category.some((item) => selectedCategory.includes(item))\r\n          )\r\n        : questions;\r\n    setFilteredQuestions(nC);\r\n    console.log(\"ddddddddddddddddddddddddddddddddd\", nC);\r\n  }, [selectedCategory, questions]);\r\n\r\n  const fetchData = async () => {\r\n    const f = await getAllFaqs();\r\n    const c = await getAllFaqCategories();\r\n\r\n    if (c) {\r\n      setAllCategories(c.categories);\r\n    }\r\n    if (f) {\r\n      console.log(f.faqs);\r\n      setQuestions(f.faqs);\r\n      setFilteredQuestions(f.faqs);\r\n    }\r\n    // console.log(f, c);\r\n  };\r\n  const onChange = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  const handleCategory = (tag, checked) => {\r\n    console.log(tag, checked);\r\n    const nextSelectedTags = checked\r\n      ? [...selectedCategory, tag._id]\r\n      : selectedCategory.filter((t) => t !== tag._id);\r\n    setSelectedCategory(nextSelectedTags);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"helpcenter-container\">\r\n        <div className=\"helpcenter-top\">\r\n          <div className=\"helpcenter-top-con\">\r\n            <h1 className=\"font-heading-white\">{t(\"helpcenter.howcan\")}</h1>\r\n            <Input\r\n              placeholder=\"Type keyword\"\r\n              className=\"font-paragraph-white\"\r\n              style={{\r\n                padding: \"15px\",\r\n              }}\r\n              width=\"100%\"\r\n              allowClear\r\n              onChange={onChange}\r\n            />\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <h3 className=\"font-paragraph-white\">{t(\"helpcenter.sc\")}</h3>\r\n              <div style={{ paddingTop: \"10px\" }}>\r\n                {allCategories.map((tag) => (\r\n                  <CheckableTag\r\n                    style={{ color: \"white\", fontSize: \"14px\" }}\r\n                    key={tag._id}\r\n                    checked={selectedCategory.includes(tag._id)}\r\n                    onChange={(checked) => handleCategory(tag, checked)}\r\n                  >\r\n                    {tag.name}\r\n                  </CheckableTag>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"helpcenter-questions-container\">\r\n          {filteredQuestion.map((q) => (\r\n            <Card className=\"helpcenter-questions-container-card\" key={q._id}>\r\n              <h1 className=\"font-subheading-black\">{q.question}</h1>\r\n              <p className=\"font-paragraph-black\" style={{ fontSize: \"15px\" }}>\r\n                {q.answer}\r\n              </p>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HelpCenter;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\PrivacyPolicy.js",["482","483","484","485"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\payment.js",["486","487","488"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\NewPost.js",["489"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\NewProduct.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\UpdateRecipe.js",["490","491","492","493","494","495"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\bodyFocus.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\mediaManagerUtils.js",["496","497"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\PlayerVideoBrowser.js",["498"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeReviewModal.js",["499"],"import React from 'react'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {CloseOutlined} from '@ant-design/icons'\r\nimport {Avatar, Rate} from 'antd';\r\nimport Modal from 'react-modal';\r\nimport \"../../assets/challengeReviewModal.css\";\r\nimport moment from \"moment\"\r\nimport TopIcon from \"../../assets/icons/review-challenge-header-icon.svg\";\r\nimport BackIcon from \"../../assets/icons/review-challenge-icon.svg\";\r\nimport useWindowDimensions from '../../helpers/useWindowDimensions';\r\n\r\n\r\n\r\nfunction ChallengeReviewModal({visible, setVisible, challenge}) {\r\n    const [t] = useTranslation();\r\nconst {width} = useWindowDimensions()\r\n    const customStyles = {\r\n        content: {\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width:width < 700 ? \"90%\": \"60%\",\r\n          overflow:\"hidden\"\r\n        },\r\n      };\r\n\r\n      \r\n    return (    \r\n      <Modal\r\n        isOpen={visible}\r\n        onRequestClose={() => setVisible(false)}\r\n        style={customStyles}\r\n        contentLabel=\"Reviews\"\r\n      >\r\n    <>\r\n    <div className=\"challenge-review-modal-header\">\r\n        <span>\r\n  <img src={TopIcon} alt=\"\" />\r\n  <span className=\"font-paragraph-white\" style={{marginLeft:\"10px\"}}>REVIEWS</span>\r\n  </span>\r\n  <CloseOutlined style={{color:\"#fff\",fontSize:\"26px\",cursor:\"pointer\"}} onClick={() => setVisible(false)}/>\r\n    </div>\r\n    <div className=\"challenge-review-modal\">\r\n        {!challenge.reviews ? (\r\n          <img src={BackIcon} alt=\"\" />\r\n        ) : (\r\n          challenge.reviews.map((review) => (\r\n            <div className=\"comment-container\">\r\n            <div className=\"comment-container-c1 font-paragraph-white\" style={{alignItems:\"flex-start\",flexDirection:width < 700 ? \"column\": \"row\",}}>\r\n              <Avatar src={review.user.avatarLink} shape=\"square\" />{\" \"}\r\n              <span style={{ marginLeft: \"5px\" }}>{review.user.username}</span>\r\n              <div style={{paddingLeft:width<700 ? \"0\" :\"20px\"}}>\r\n               <Rate value={review.rating}/>\r\n              <div className=\"comment-container-c2 font-paragraph-white\" style={{padding:0}}>\r\n                {review.comment}\r\n              </div>   \r\n            <div\r\n              className=\"font-paragraph-white comment-container-c3\"\r\n              style={{ color: \"#82868b\",padding:0 }}\r\n              \r\n            >\r\n              {moment(review.createdAt).format(\"MMM, Do YY\")}\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n          </div>\r\n          ))\r\n        )}\r\n          {/* <button\r\n            className=\"common-orange-button font-paragraph-white\"\r\n            style={{ padding: \"0.8rem 2rem\" }}\r\n            onClick={() => setVisible(false)}\r\n          >\r\n            <span className=\"font-paragraph-white\">\r\n              {t(\"challenge_profile.close\")}\r\n            </span>\r\n          </button> */}\r\n          </div>\r\n          </>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ChallengeReviewModal\r\n",["500","501"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\MusicPlayer.js",["502","503","504","505","506","507","508","509"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Modal, Slider } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { CloseOutlined, CustomerServiceOutlined } from \"@ant-design/icons\";\r\nimport useWindowDimensions from \"../../helpers/useWindowDimensions\";\r\n\r\nimport MusicIcon from \"../../assets/icons/music-player-volume-icon.png\";\r\nimport MuteMusicIcon from \"../../assets/icons/music-player-volume-mute-icon.png\";\r\nimport MusicListIcon from \"../../assets/icons/music-list-icon.png\";\r\nimport PlayerState, {\r\n  breakContext,\r\n  playerStateContext,\r\n} from \"../../contexts/PlayerState\";\r\n\r\nfunction MusicPlayer({ visible, setMusicPlayerVisible, musicList }) {\r\n  const [playerState, setPlayerState] = useContext(playerStateContext);\r\n  const [currentBreak, setCurrentBreak] = useContext(breakContext);\r\n  const { height, width } = useWindowDimensions();\r\n  const [currentPlaying, setCurrentPLaying] = useState({\r\n    _id: 12345,\r\n    name: \"\",\r\n    url: \"\",\r\n  });\r\n  const [volume, setVolume] = useState(100);\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (playerState.playing) {\r\n      localStorage.setItem(\"music-playing\", true);\r\n      return;\r\n    }\r\n\r\n    if (currentBreak && !playerState.playing) {\r\n      localStorage.setItem(\"music-playing\", true);\r\n      return;\r\n    }\r\n\r\n    localStorage.removeItem(\"music-playing\");\r\n  }, [playerState.playing, currentBreak]);\r\n  const handleOnMusicSelect = (m) => {\r\n    if (m === \"stop\") {\r\n      console.log(\"hereere\");\r\n      // setPlaying(false);\r\n      setCurrentPLaying({\r\n        _id: 12345,\r\n        name: \"\",\r\n        url: \"\",\r\n      });\r\n      localStorage.removeItem(\"music-playing\");\r\n      return;\r\n    }\r\n\r\n    setCurrentPLaying(m);\r\n    localStorage.setItem(\"music-playing\", true);\r\n    // setPlaying(true);\r\n  };\r\n  const onVolumeChange = (e) => {\r\n    // volume needs to be between 0 and 1\r\n    setVolume(e / 100);\r\n  };\r\n  // const onPlayPause = () => {\r\n  //   setPlaying((prev) => !prev);\r\n  // };\r\n  return (\r\n    <div\r\n      className=\"music-player-modal-container\"\r\n      style={{ display: visible ? \"flex\" : \"none\" }}\r\n    >\r\n      {console.log(\"======================================>\", currentPlaying)}\r\n      <CloseOutlined\r\n        onClick={() => setMusicPlayerVisible(false)}\r\n        style={{\r\n          color: \"rgb(255, 255, 255)\",\r\n          top: \"20px\",\r\n          position: \"absolute\",\r\n          fontSize: \"30px\",\r\n          right: \"50px\",\r\n        }}\r\n      />\r\n      <ReactPlayer\r\n        width=\"100%\"\r\n        height=\"100px\"\r\n        url={`${process.env.REACT_APP_SERVER}/uploads/${currentPlaying.url}`}\r\n        style={{ outline: \"none\", border: \"none\", display: \"none\" }}\r\n        playing={localStorage.getItem(\"music-playing\")}\r\n        controls={false}\r\n        volume={volume}\r\n        loop={true}\r\n      />\r\n      <div className=\"music-player-slider-container\">\r\n        <img src={MuteMusicIcon} alt=\"\" />\r\n        <Slider\r\n          value={volume * 100}\r\n          min={0}\r\n          max={100}\r\n          style={{ width: \"70%\", display: \"inline-block\" }}\r\n          onChange={onVolumeChange}\r\n          onAfterChange={onVolumeChange}\r\n          tipFormatter={(v) => `${v}%`}\r\n        />\r\n        <img src={MusicIcon} alt=\"\" />\r\n      </div>\r\n      <div className=\"music-player-modal-container--list\">\r\n        <img src={MusicListIcon} alt=\"music-list-icon\" />{\" \"}\r\n        <h3 className=\"font-paragraph-white\">Choose your mood</h3>\r\n        <Scrollbars style={{ minHeight: \"100px\" }}>\r\n          <div className=\"music-player-modal-container--list-files\">\r\n            <div key={1234} onClick={() => handleOnMusicSelect(\"stop\")}>\r\n              <span\r\n                style={{\r\n                  color:\r\n                    currentPlaying._id !== 12345\r\n                      ? \"#fff\"\r\n                      : \"var(--color-orange)\",\r\n                  transform:\r\n                    currentPlaying._id !== 12345 ? \"scale(1)\" : \"scale(1.02)\",\r\n                }}\r\n                className=\"font-paragraph-white\"\r\n              >\r\n                <CustomerServiceOutlined /> No Music\r\n              </span>\r\n            </div>\r\n            {musicList.map((m) => (\r\n              <div key={m._id} onClick={() => handleOnMusicSelect(m)}>\r\n                <span\r\n                  className=\"font-paragraph-white\"\r\n                  style={{\r\n                    color:\r\n                      currentPlaying._id === m._id\r\n                        ? \"var(--color-orange)\"\r\n                        : \"#fff\",\r\n                    transform:\r\n                      currentPlaying._id === m._id ? \"scale(1.02)\" : \"scale(1)\",\r\n                  }}\r\n                >\r\n                  <CustomerServiceOutlined /> {m.name}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    </div>\r\n    // </Modal>\r\n  );\r\n}\r\n\r\nexport default MusicPlayer;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\index.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\UserStore.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Signup.js",["510","511","512","513"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Wizard from \"../components/New/Wizard\";\r\nimport \"../assets/signup.css\";\r\nimport \"../assets/login.css\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Input, Form } from \"antd\";\r\nimport { LoadingOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  registerUser,\r\n  signupUserWithGoogle,\r\n  signupUserWithFacebook,\r\n} from \"../services/authentication\";\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport { createCustomerDetails } from \"../services/customer\";\r\nimport setAuthToken from \"../helpers/setAuthToken\";\r\n\r\nfunction Signup(props) {\r\n  const [t] = useTranslation();\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const [wizCompleted, setWizCompleted] = useState(false);\r\n  const [wizardValues, setWizardValues] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwtToken\")) {\r\n      props.history.push(\"/user/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  function setWizardCompleted(d) {\r\n    setWizardValues(d);\r\n    setWizCompleted(true);\r\n  }\r\n  // TODO only possible when app goes live\r\n  const responseFacebook = async (response) => {\r\n    // delete value.confirm;\r\n    response[\"gender\"] = wizardValues.gender;\r\n    setLoading(true);\r\n    // console.log(wizardValues);\r\n    // console.log(value);\r\n    // // return;\r\n    const res = await signupUserWithFacebook(response);\r\n    if (res.success) {\r\n      setUserInfo({\r\n        ...userInfo,\r\n        username: res.data.username,\r\n        role: res.data.role,\r\n        id: res.data._id,\r\n        authenticated: true,\r\n      });\r\n      setLoading(false);\r\n      localStorage.setItem(\"jwtToken\", res.data.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      const r = await createCustomerDetails(wizardValues, res.data._id);\r\n      props.history.push(\"/new/welcome\");\r\n    } else {\r\n      console.log(\"error 1\", res);\r\n      res.data.response && typeof res.data.response.data === \"string\"\r\n        ? setError(res.data.response.data)\r\n        : setError(\"Unable to create account. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    // delete value.confirm;\r\n    response[\"gender\"] = wizardValues.gender;\r\n    // setLoading(true);\r\n    // console.log(wizardValues);\r\n    // console.log(value);\r\n    // // return;\r\n    const res = await signupUserWithGoogle(response);\r\n    if (res.success) {\r\n      setUserInfo({\r\n        ...userInfo,\r\n        username: res.data.username,\r\n        role: res.data.role,\r\n        id: res.data._id,\r\n        authenticated: true,\r\n      });\r\n      // setLoading(false);\r\n      localStorage.setItem(\"jwtToken\", res.data.token);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      const r = await createCustomerDetails(wizardValues, res.data._id);\r\n      props.history.push(\"/new/welcome\");\r\n    } else {\r\n      console.log(\"error 2\", res);\r\n      res.data.response && typeof res.data.response.data === \"string\"\r\n        ? setError(res.data.response.data)\r\n        : setError(\"Unable to create account. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const onFinish = async (value) => {\r\n    delete value.confirm;\r\n    value[\"gender\"] = wizardValues.gender;\r\n    setLoading(true);\r\n    // console.log(wizardValues);\r\n    // console.log(value);\r\n    // // return;\r\n    const res = await registerUser(value);\r\n    if (res.success) {\r\n      setUserInfo({\r\n        ...userInfo,\r\n        username: res.data.username,\r\n        role: res.data.role,\r\n        email: res.data.email,\r\n        id: res.data._id,\r\n        authenticated: true,\r\n      });\r\n      setLoading(false);\r\n      localStorage.setItem(\"jwtToken\", res.data.token);\r\n      localStorage.setItem(\"userRecentlySignedUp\", true);\r\n      localStorage.setItem(\"isActive\", false);\r\n      setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n      const r = await createCustomerDetails(wizardValues, res.data._id);\r\n      if (\r\n        localStorage.getItem(\"package-type\") &&\r\n        localStorage.getItem(\"package-type\").length > 0\r\n      ) {\r\n        props.history.push(\"/create-payment\");\r\n      } else {\r\n        props.history.push(\"/new/welcome\");\r\n      }\r\n    } else {\r\n      console.log(\"error 3\", res);\r\n      res.data.response && typeof res.data.response.data === \"string\"\r\n        ? setError(res.data.response.data)\r\n        : setError(\"Unable to create account. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const onFinishFailed = (value) => {\r\n    console.log(\"fnish failed\", value);\r\n  };\r\n  return wizCompleted ? (\r\n    <div className=\"signup-background\">\r\n      <button\r\n        onClick={() => setWizCompleted(false)}\r\n        className=\"font-paragraph-white\"\r\n        style={{\r\n          color: \"#fff\",\r\n          fontSize: \"18px\",\r\n          backgroundColor: \"var(--mirage)\",\r\n          padding: \"10px \",\r\n          float: \"left\",\r\n          margin: \"10px 0 0 50px\",\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <ArrowLeftOutlined /> {t(\"signup.back\")}\r\n      </button>\r\n      <div className=\"signup-container\">\r\n        <h1 className=\"font-heading-white\">{t(\"signup.join\")}</h1>\r\n        <p\r\n          style={{\r\n            color: \"#00ffff\",\r\n            fontWeight: \"400\",\r\n            fontSize: \"1.8rem\",\r\n            padding: \"10px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          {t(\"signup.weHaveDeveloped\")}\r\n        </p>\r\n        <div className=\"signup-container-columns\">\r\n          <div\r\n            className=\"signup-container-column1\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            <p className=\"font-subheading-white\" style={{ paddingTop: \"12px\" }}>\r\n              {t(\"signup.social\")}\r\n            </p>\r\n            <FacebookLogin\r\n              appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n              // autoLoad={true}\r\n              fields=\"name,email,picture\"\r\n              callback={responseFacebook}\r\n              render={(renderProps) => (\r\n                <button\r\n                  class=\"loginBtn loginBtn--facebook\"\r\n                  style={{ width: \"90%\" }}\r\n                  onClick={renderProps.onClick}\r\n                >\r\n                  {t(\"signup.signFacebook\")}\r\n                </button>\r\n              )}\r\n            />\r\n            <GoogleLogin\r\n              clientId={process.env.REACT_APP_GOOGLE_APP_ID}\r\n              render={(renderProps) => (\r\n                <button\r\n                  class=\"loginBtn loginBtn--google\"\r\n                  onClick={renderProps.onClick}\r\n                  style={{ width: \"90%\" }}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  {t(\"signup.signGoogle\")}\r\n                </button>\r\n              )}\r\n              buttonText=\"Login\"\r\n              onSuccess={responseGoogle}\r\n              onFailure={responseGoogle}\r\n            />\r\n          </div>\r\n          <div className=\"signup-container-column2\">\r\n            <Form\r\n              layout=\"vertical\"\r\n              name=\"basic\"\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <p className=\"font-subheading-white\">\r\n                  {t(\"signup.or_with_email\")}\r\n                </p>\r\n                <Form.Item\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {\" \"}\r\n                      {t(\"signup.username\")}\r\n                    </div>\r\n                  }\r\n                  name=\"username\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your username!\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {t(\"signup.firstName\")}\r\n                    </div>\r\n                  }\r\n                  name=\"firstName\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your first name.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {t(\"signup.lastName\")}\r\n                    </div>\r\n                  }\r\n                  name=\"lastName\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your last name.\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {t(\"signup.email\")}\r\n                    </div>\r\n                  }\r\n                  name=\"email\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your email!\" },\r\n                    { type: \"email\", message: \"Please input correct email\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {t(\"signup.password\")}\r\n                    </div>\r\n                  }\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"login-textfield-box\"\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  name=\"confirm\"\r\n                  label={\r\n                    <div className=\"font-paragraph-white\">\r\n                      {t(\"signup.confirm_password\")}\r\n                    </div>\r\n                  }\r\n                  dependencies={[\"password\"]}\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"The two passwords that you entered do not match!\"\r\n                          )\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <span\r\n                  style={{ color: \"#72777B\" }}\r\n                  className=\"font-paragraph-white\"\r\n                >\r\n                  {t(\"signup.by_creating\")}\r\n                </span>\r\n              </div>\r\n              {loading ? (\r\n                <LoadingOutlined style={{ color: \"#ff7700\" }} />\r\n              ) : (\r\n                <button\r\n                  className=\"create-payment-check-out poppins-medium-white-20px\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    cursor: \"pointer\",\r\n                    marginTop: \"2px\",\r\n                  }}\r\n                  to=\"/challenges\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  <span\r\n                    className=\"font-paragraph-white\"\r\n                    style={{ textTransform: \"uppercase\", fontWeight: \"600\" }}\r\n                  >\r\n                    {t(\"signup.create_account\")}\r\n                  </span>\r\n                </button>\r\n              )}\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                style={{ color: \"#ff4d4f\", margin: \"10px 0\" }}\r\n              >\r\n                {error}\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Wizard setWizardCompleted={setWizardCompleted} />\r\n  );\r\n}\r\n\r\nexport default withRouter(Signup);\r\n",["514","515"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TrainerProfile.js",["516","517"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserUpdate.js",["518","519"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\CookiePolicy.js",["520","521","522","523"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\MollieRedirectPage.js",["524"],"import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createSubscribtion } from \"../../services/payment\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { addChallengeToCustomerDetail } from \"../../services/customer\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nfunction MollieRedirectPage(props) {\r\n  useEffect(() => {\r\n    createSub();\r\n  }, []);\r\n\r\n  const createSub = async () => {\r\n    const subObject = localStorage.getItem(\"subObject\");\r\n    const selectedChallenges = localStorage.getItem(\"selectedChallenges\");\r\n\r\n    if (subObject) {\r\n      console.log(\"retrievedObject: \", JSON.parse(subObject));\r\n      console.log(\"selectedChallenges:\", JSON.parse(selectedChallenges));\r\n      const data = JSON.parse(subObject);\r\n      const res = await createSubscribtion(data);\r\n      if (res) {\r\n        const sC = selectedChallenges ? JSON.parse(selectedChallenges) : [];\r\n        if (sC.length > 0 && !_.isEmpty(sC[0])) {\r\n          const responses = [];\r\n          for (var i = 0; i < sC.length; i++) {\r\n            responses.push(\r\n              await addChallengeToCustomerDetail(data.id, sC[i]._id)\r\n            );\r\n          }\r\n\r\n          localStorage.removeItem(\"subObject\");\r\n          localStorage.removeItem(\"selectedChallenges\");\r\n          localStorage.removeItem(\"package-type\");\r\n          props.history.push(\"/user/dashboard\");\r\n        } else {\r\n          localStorage.removeItem(\"subObject\");\r\n          localStorage.removeItem(\"selectedChallenges\");\r\n          localStorage.removeItem(\"package-type\");\r\n          props.history.push(\"/user/dashboard\");\r\n        }\r\n      }\r\n      console.log(\"subscribtion respinse\", res);\r\n    } else {\r\n      props.history.push(\"/create-payment\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"center-inpage\" style={{ textAlign: \"center\" }}>\r\n      <LoadingOutlined style={{ fontSize: \"60px\", color: \"#ff7700\" }} />\r\n      <h1 className=\"font-heading-black\">\r\n        PLEASE WAIT WHILE WE REDIRECT YOU TO DASHBOARD.\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MollieRedirectPage);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\main.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\WorkoutCompleteModal.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\AllFaqs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\AllRecipes.js",["525"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaManager.js",["526","527","528","529","530","531"],"import { ChonkyActions, FileHelper, FullFileBrowser } from \"chonky\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { showActionNotification } from \"./mediaManagerUtils\";\r\nimport MediaFileUploader from \"./MediaFileUploader\";\r\nimport {\r\n  getAllVideos,\r\n  getAllImages,\r\n  getAllDocs,\r\n  getAllMusics,\r\n  getAllVoiceOvers,\r\n  deleteMediaFiles,\r\n  getAllIcons,\r\n  getAllFoods,\r\n  getAllTemps,\r\n  getAllRcFiles,\r\n} from \"../../../services/mediaManager\";\r\nimport setAuthToken from \"../../../helpers/setAuthToken\";\r\n\r\n// Hook that sets up our file map and defines functions used to mutate - `deleteFiles`,\r\n// `moveFiles`, and so on.\r\nconst useCustomFileMap = () => {\r\n  // Setup the React state for our file map and the current folder.\r\n  const [fileMap, setFileMap] = useState({\r\n    qwerty123456: {\r\n      id: \"qwerty123456\",\r\n      name: \"Media Manager\",\r\n      isDir: true,\r\n      childrenIds: [\r\n        \"images-e598a85f843c\",\r\n        \"videos-s9514a3d74d57\",\r\n        \"docs-e598a85f843b\",\r\n        \"voiceOvers-e598a85f84gb\",\r\n        \"musics-e598a85f8lgb\",\r\n        \"docs-e598a85f843b\",\r\n        \"icons-e598a85f843b\",\r\n        \"foods-e598a85f843b\",\r\n        \"temps-e598a85f843b\",\r\n        \"rc1-e598a85f843b\",\r\n        \"rc2-e598a85f843b\",\r\n        \"rc3-e598a85f843b\",\r\n        \"rc4-e598a85f843b\",\r\n        \"rc5-e598a85f843b\",\r\n        \"rc6-e598a85f843b\",\r\n        \"rc7-e598a85f843b\",\r\n        \"rc8-e598a85f843b\",\r\n        \"rc9-e598a85f843b\",\r\n        \"rc10-e598a85f843b\",\r\n      ],\r\n      childrenCount: 5,\r\n    },\r\n\r\n    \"images-e598a85f843c\": {\r\n      id: \"images-e598a85f843c\",\r\n      name: \"Images\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"videos-s9514a3d74d57\": {\r\n      id: \"videos-s9514a3d74d57\",\r\n      name: \"Videos\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"voiceOvers-e598a85f84gb\": {\r\n      id: \"voiceOvers-e598a85f84gb\",\r\n      name: \"Voice Overs\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"musics-e598a85f8lgb\": {\r\n      id: \"musics-e598a85f8lgb\",\r\n      name: \"Musics\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"docs-e598a85f843b\": {\r\n      id: \"docs-e598a85f843b\",\r\n      name: \"Document\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"icons-e598a85f843b\": {\r\n      id: \"icons-e598a85f843b\",\r\n      name: \"Icons\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"foods-e598a85f843b\": {\r\n      id: \"foods-e598a85f843b\",\r\n      name: \"Foods\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"temps-e598a85f843b\": {\r\n      id: \"temps-e598a85f843b\",\r\n      name: \"Temps\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n\r\n    \"rc1-e598a85f843b\": {\r\n      id: \"rc1-e598a85f843b\",\r\n      name: \"RC001\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc2-e598a85f843b\": {\r\n      id: \"rc2-e598a85f843b\",\r\n      name: \"RC002\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc3-e598a85f843b\": {\r\n      id: \"rc3-e598a85f843b\",\r\n      name: \"RC003\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc4-e598a85f843b\": {\r\n      id: \"rc4-e598a85f843b\",\r\n      name: \"RC004\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc5-e598a85f843b\": {\r\n      id: \"rc5-e598a85f843b\",\r\n      name: \"RC005\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc6-e598a85f843b\": {\r\n      id: \"rc6-e598a85f843b\",\r\n      name: \"RC006\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc7-e598a85f843b\": {\r\n      id: \"rc7-e598a85f843b\",\r\n      name: \"RC007\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc8-e598a85f843b\": {\r\n      id: \"rc8-e598a85f843b\",\r\n      name: \"RC008\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc9-e598a85f843b\": {\r\n      id: \"rc9-e598a85f843b\",\r\n      name: \"RC009\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n    \"rc10-e598a85f843b\": {\r\n      id: \"rc10-e598a85f843b\",\r\n      name: \"RC010\",\r\n      isDir: true,\r\n      parentId: \"qwerty123456\",\r\n      childrenIds: [],\r\n    },\r\n  });\r\n  const [currentFolderId, setCurrentFolderId] = useState(\"qwerty123456\");\r\n  const [currentFolderName, setCurrentFolderName] = useState(\"Media Manager\");\r\n  const currentFolderIdRef = useRef(currentFolderId);\r\n\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n    getAllMedia();\r\n    currentFolderIdRef.current = currentFolderId;\r\n  }, [currentFolderId]);\r\n\r\n  // get all videos from backend\r\n  const getAllMedia = async () => {\r\n    const videoFiles = await getAllVideos();\r\n    const imageFiles = await getAllImages();\r\n    const docFiles = await getAllDocs();\r\n    const voiceOverFiles = await getAllVoiceOvers();\r\n    const musicFiles = await getAllMusics();\r\n    // new folders\r\n    const iconFiles = await getAllIcons();\r\n    const foodFiles = await getAllFoods();\r\n    const tempFiles = await getAllTemps();\r\n\r\n    // for rc folders\r\n    const rc1Files = await getAllRcFiles(\"rc1\");\r\n    const rc2Files = await getAllRcFiles(\"rc2\");\r\n    const rc3Files = await getAllRcFiles(\"rc3\");\r\n    const rc4Files = await getAllRcFiles(\"rc4\");\r\n    const rc5Files = await getAllRcFiles(\"rc5\");\r\n    const rc6Files = await getAllRcFiles(\"rc6\");\r\n    const rc7Files = await getAllRcFiles(\"rc7\");\r\n    const rc8Files = await getAllRcFiles(\"rc8\");\r\n    const rc9Files = await getAllRcFiles(\"rc9\");\r\n    const rc10Files = await getAllRcFiles(\"rc10\");\r\n\r\n    const musicIds = musicFiles ? musicFiles.musics.map((f) => f._id) : [];\r\n    const videoIds = videoFiles ? videoFiles.videos.map((f) => f._id) : [];\r\n    const imageIds = imageFiles ? imageFiles.images.map((f) => f._id) : [];\r\n    const docIds = docFiles ? docFiles.docs.map((f) => f._id) : [];\r\n    const voiceOverIds = voiceOverFiles\r\n      ? voiceOverFiles.voiceOvers.map((f) => f._id)\r\n      : [];\r\n    // new folders\r\n    const iconIds = iconFiles ? iconFiles.files.map((f) => f._id) : [];\r\n    const foodIds = foodFiles ? foodFiles.files.map((f) => f._id) : [];\r\n    const tempIds = tempFiles ? tempFiles.files.map((f) => f._id) : [];\r\n    // rc folders\r\n    const rc1Ids = rc1Files ? rc1Files.files.map((f) => f._id) : [];\r\n    const rc2Ids = rc2Files ? rc2Files.files.map((f) => f._id) : [];\r\n    const rc3Ids = rc3Files ? rc3Files.files.map((f) => f._id) : [];\r\n    const rc4Ids = rc4Files ? rc4Files.files.map((f) => f._id) : [];\r\n    const rc5Ids = rc5Files ? rc5Files.files.map((f) => f._id) : [];\r\n    const rc6Ids = rc6Files ? rc6Files.files.map((f) => f._id) : [];\r\n    const rc7Ids = rc7Files ? rc7Files.files.map((f) => f._id) : [];\r\n    const rc8Ids = rc8Files ? rc8Files.files.map((f) => f._id) : [];\r\n    const rc9Ids = rc9Files ? rc9Files.files.map((f) => f._id) : [];\r\n    const rc10Ids = rc10Files ? rc10Files.files.map((f) => f._id) : [];\r\n\r\n    const musicObjects = musicIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: musicFiles.musics[i].filename,\r\n          id: id,\r\n          link: musicFiles.musics[i].filelink,\r\n          parent: \"musics-e598a85f8lgb\",\r\n        },\r\n      };\r\n    });\r\n    const docObjects = docIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: docFiles.docs[i].filename,\r\n          id: id,\r\n          link: docFiles.docs[i].filelink,\r\n          parent: \"docs-e598a85f843b\",\r\n        },\r\n      };\r\n    });\r\n    const videoObjects = videoIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: videoFiles.videos[i].filename,\r\n          id: id,\r\n          link: videoFiles.videos[i].filelink,\r\n          parent: \"videos-s9514a3d74d57\",\r\n        },\r\n      };\r\n    });\r\n    console.log(\"ammar\", imageFiles);\r\n    const imageObjects = imageIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: imageFiles.images[i].filename,\r\n          id: id,\r\n          link: imageFiles.images[i].filelink,\r\n          parent: \"images-e598a85f843c\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${imageFiles.images[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const voiceOverObjects = voiceOverIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: voiceOverFiles.voiceOvers[i].filename,\r\n          id: id,\r\n          link: voiceOverFiles.voiceOvers[i].filelink,\r\n          parent: \"voiceOvers-e598a85f84gb\",\r\n        },\r\n      };\r\n    });\r\n\r\n    // new folder\r\n    const iconObjects = iconIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: iconFiles.files[i].filename,\r\n          id: id,\r\n          link: iconFiles.files[i].filelink,\r\n          parent: \"icons-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${iconFiles.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const foodObjects = foodIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: foodFiles.files[i].filename,\r\n          id: id,\r\n          link: foodFiles.files[i].filelink,\r\n          parent: \"foods-e598a85f843b\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${foodFiles.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const tempObjects = tempIds.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: tempFiles.files[i].filename,\r\n          id: id,\r\n          link: tempFiles.files[i].filelink,\r\n          parent: \"temps-e598a85f843b\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${tempFiles.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const rc1Objects = rc1Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc1Files.files[i].filename,\r\n          id: id,\r\n          link: rc1Files.files[i].filelink,\r\n          parent: \"rc1-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc1Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const rc2Objects = rc2Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc2Files.files[i].filename,\r\n          id: id,\r\n          link: rc2Files.files[i].filelink,\r\n          parent: \"rc2-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc2Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    const rc3Objects = rc3Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc3Files.files[i].filename,\r\n          id: id,\r\n          link: rc3Files.files[i].filelink,\r\n          parent: \"rc3-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc3Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc4Objects = rc4Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc4Files.files[i].filename,\r\n          id: id,\r\n          link: rc4Files.files[i].filelink,\r\n          parent: \"rc4-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc4Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc5Objects = rc5Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc5Files.files[i].filename,\r\n          id: id,\r\n          link: rc5Files.files[i].filelink,\r\n          parent: \"rc5-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc5Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc6Objects = rc6Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc6Files.files[i].filename,\r\n          id: id,\r\n          link: rc6Files.files[i].filelink,\r\n          parent: \"rc6-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc6Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc7Objects = rc7Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc7Files.files[i].filename,\r\n          id: id,\r\n          link: rc7Files.files[i].filelink,\r\n          parent: \"rc7-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc7Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc8Objects = rc8Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc8Files.files[i].filename,\r\n          id: id,\r\n          link: rc8Files.files[i].filelink,\r\n          parent: \"rc8-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc8Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc9Objects = rc9Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc9Files.files[i].filename,\r\n          id: id,\r\n          link: rc9Files.files[i].filelink,\r\n          parent: \"rc9-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc9Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n    const rc10Objects = rc10Ids.map((id, i) => {\r\n      return {\r\n        [id]: {\r\n          name: rc10Files.files[i].filename,\r\n          id: id,\r\n          link: rc10Files.files[i].filelink,\r\n          parent: \"rc10-e598a85f84gb\",\r\n          thumbnailUrl: `${process.env.REACT_APP_SERVER}/uploads/${rc10Files.files[i].filelink}`,\r\n        },\r\n      };\r\n    });\r\n\r\n    setFileMap((currentFileMap) => {\r\n      var newFileMap = { ...currentFileMap };\r\n      newFileMap[\"videos-s9514a3d74d57\"] = {\r\n        ...newFileMap[\"videos-s9514a3d74d57\"],\r\n        childrenIds: videoIds,\r\n      };\r\n      newFileMap[\"musics-e598a85f8lgb\"] = {\r\n        ...newFileMap[\"musics-e598a85f8lgb\"],\r\n        childrenIds: musicIds,\r\n      };\r\n      newFileMap[\"images-e598a85f843c\"] = {\r\n        ...newFileMap[\"images-e598a85f843c\"],\r\n        childrenIds: imageIds,\r\n      };\r\n\r\n      newFileMap[\"docs-e598a85f843b\"] = {\r\n        ...newFileMap[\"docs-e598a85f843b\"],\r\n        childrenIds: docIds,\r\n      };\r\n      newFileMap[\"voiceOvers-e598a85f84gb\"] = {\r\n        ...newFileMap[\"voiceOvers-e598a85f84gb\"],\r\n        childrenIds: voiceOverIds,\r\n      };\r\n      //new\r\n      newFileMap[\"icons-e598a85f843b\"] = {\r\n        ...newFileMap[\"icons-e598a85f843b\"],\r\n        childrenIds: iconIds,\r\n      };\r\n      newFileMap[\"foods-e598a85f843b\"] = {\r\n        ...newFileMap[\"foods-e598a85f843b\"],\r\n        childrenIds: foodIds,\r\n      };\r\n      newFileMap[\"temps-e598a85f843b\"] = {\r\n        ...newFileMap[\"temps-e598a85f843b\"],\r\n        childrenIds: tempIds,\r\n      };\r\n\r\n      newFileMap[\"temps-e598a85f843b\"] = {\r\n        ...newFileMap[\"temps-e598a85f843b\"],\r\n        childrenIds: tempIds,\r\n      };\r\n\r\n      newFileMap[\"rc1-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc1-e598a85f843b\"],\r\n        childrenIds: rc1Ids,\r\n      };\r\n\r\n      newFileMap[\"rc2-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc2-e598a85f843b\"],\r\n        childrenIds: rc2Ids,\r\n      };\r\n\r\n      newFileMap[\"rc3-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc3-e598a85f843b\"],\r\n        childrenIds: rc3Ids,\r\n      };\r\n\r\n      newFileMap[\"rc4-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc4-e598a85f843b\"],\r\n        childrenIds: rc4Ids,\r\n      };\r\n\r\n      newFileMap[\"rc5-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc5-e598a85f843b\"],\r\n        childrenIds: rc5Ids,\r\n      };\r\n\r\n      newFileMap[\"rc6-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc6-e598a85f843b\"],\r\n        childrenIds: rc6Ids,\r\n      };\r\n\r\n      newFileMap[\"rc7-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc7-e598a85f843b\"],\r\n        childrenIds: rc7Ids,\r\n      };\r\n\r\n      newFileMap[\"rc8-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc8-e598a85f843b\"],\r\n        childrenIds: rc8Ids,\r\n      };\r\n\r\n      newFileMap[\"rc9-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc9-e598a85f843b\"],\r\n        childrenIds: rc9Ids,\r\n      };\r\n\r\n      newFileMap[\"rc10-e598a85f843b\"] = {\r\n        ...newFileMap[\"rc10-e598a85f843b\"],\r\n        childrenIds: rc10Ids,\r\n      };\r\n\r\n      musicObjects.forEach((obj, i) => {\r\n        newFileMap[musicIds[i]] = { ...obj[musicIds[i]] };\r\n      });\r\n      imageObjects.forEach((obj, i) => {\r\n        newFileMap[imageIds[i]] = { ...obj[imageIds[i]] };\r\n      });\r\n      videoObjects.forEach((obj, i) => {\r\n        newFileMap[videoIds[i]] = { ...obj[videoIds[i]] };\r\n      });\r\n      docObjects.forEach((obj, i) => {\r\n        newFileMap[docIds[i]] = { ...obj[docIds[i]] };\r\n      });\r\n      voiceOverObjects.forEach((obj, i) => {\r\n        newFileMap[voiceOverIds[i]] = { ...obj[voiceOverIds[i]] };\r\n      });\r\n      // new\r\n      foodObjects.forEach((obj, i) => {\r\n        newFileMap[foodIds[i]] = { ...obj[foodIds[i]] };\r\n      });\r\n      iconObjects.forEach((obj, i) => {\r\n        newFileMap[iconIds[i]] = { ...obj[iconIds[i]] };\r\n      });\r\n      tempObjects.forEach((obj, i) => {\r\n        newFileMap[tempIds[i]] = { ...obj[tempIds[i]] };\r\n      });\r\n      //rc\r\n      rc1Objects.forEach((obj, i) => {\r\n        newFileMap[rc1Ids[i]] = { ...obj[rc1Ids[i]] };\r\n      });\r\n      rc2Objects.forEach((obj, i) => {\r\n        newFileMap[rc2Ids[i]] = { ...obj[rc2Ids[i]] };\r\n      });\r\n      rc3Objects.forEach((obj, i) => {\r\n        newFileMap[rc3Ids[i]] = { ...obj[rc3Ids[i]] };\r\n      });\r\n      rc4Objects.forEach((obj, i) => {\r\n        newFileMap[rc4Ids[i]] = { ...obj[rc4Ids[i]] };\r\n      });\r\n      rc5Objects.forEach((obj, i) => {\r\n        newFileMap[rc5Ids[i]] = { ...obj[rc5Ids[i]] };\r\n      });\r\n      rc6Objects.forEach((obj, i) => {\r\n        newFileMap[rc6Ids[i]] = { ...obj[rc6Ids[i]] };\r\n      });\r\n      rc7Objects.forEach((obj, i) => {\r\n        newFileMap[rc7Ids[i]] = { ...obj[rc7Ids[i]] };\r\n      });\r\n      rc8Objects.forEach((obj, i) => {\r\n        newFileMap[rc8Ids[i]] = { ...obj[rc8Ids[i]] };\r\n      });\r\n      rc9Objects.forEach((obj, i) => {\r\n        newFileMap[rc9Ids[i]] = { ...obj[rc9Ids[i]] };\r\n      });\r\n      rc10Objects.forEach((obj, i) => {\r\n        newFileMap[rc10Ids[i]] = { ...obj[rc10Ids[i]] };\r\n      });\r\n\r\n      return newFileMap;\r\n    });\r\n  };\r\n\r\n  // Function that will be called when user deletes files either using the toolbar\r\n  // button or `Delete` key.\r\n  const deleteFiles = useCallback((files) => {\r\n    console.log(files);\r\n\r\n    setFileMap((currentFileMap) => {\r\n      // Create a copy of the file map to make sure we don't mutate it.\r\n      const newFileMap = { ...currentFileMap };\r\n\r\n      files.forEach((file) => {\r\n        // Delete file from the file map.\r\n        delete newFileMap[file.id];\r\n\r\n        // Update the parent folder to make sure it doesn't try to load the\r\n        // file we just deleted.\r\n        if (file.parentId) {\r\n          const parent = newFileMap[file.parentId];\r\n          const newChildrenIds = parent.childrenIds.filter(\r\n            (id) => id !== file.id\r\n          );\r\n          newFileMap[file.parentId] = {\r\n            ...parent,\r\n            childrenIds: newChildrenIds,\r\n            childrenCount: newChildrenIds.length,\r\n          };\r\n        }\r\n      });\r\n\r\n      return newFileMap;\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    getAllMedia,\r\n    fileMap,\r\n    currentFolderId,\r\n    setCurrentFolderId,\r\n    setCurrentFolderName,\r\n    currentFolderName,\r\n    deleteFiles,\r\n  };\r\n};\r\n\r\nexport const useFiles = (fileMap, currentFolderId) => {\r\n  return useMemo(() => {\r\n    const currentFolder = fileMap[currentFolderId];\r\n    const childrenIds = currentFolder.childrenIds;\r\n    const files = childrenIds.map((fileId) => fileMap[fileId]);\r\n    return files;\r\n  }, [currentFolderId, fileMap]);\r\n};\r\n\r\nexport const useFolderChain = (fileMap, currentFolderId) => {\r\n  return useMemo(() => {\r\n    const currentFolder = fileMap[currentFolderId];\r\n\r\n    const folderChain = [currentFolder];\r\n\r\n    let parentId = currentFolder.parentId;\r\n    while (parentId) {\r\n      const parentFile = fileMap[parentId];\r\n      if (parentFile) {\r\n        folderChain.unshift(parentFile);\r\n        parentId = parentFile.parentId;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return folderChain;\r\n  }, [currentFolderId, fileMap]);\r\n};\r\n\r\nexport const useFileActionHandler = (\r\n  setCurrentFolderName,\r\n  setCurrentFolderId,\r\n  deleteFiles,\r\n  moveFiles,\r\n  createFolder,\r\n  setOpenUploadModal,\r\n  mediaActions,\r\n  mediaType,\r\n  setRemoteMediaManagerVisible,\r\n  checkForType\r\n) => {\r\n  return useCallback(\r\n    async (data) => {\r\n      if (data.id === ChonkyActions.OpenFiles.id) {\r\n        const { targetFile, files } = data.payload;\r\n        const fileToOpen = targetFile ?? files[0];\r\n        if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\r\n          setCurrentFolderId(fileToOpen.id);\r\n          setCurrentFolderName(fileToOpen.name);\r\n          console.log(\"ads\", fileToOpen);\r\n          return;\r\n        }\r\n        const [media, setMedia] = mediaActions;\r\n        console.log(\"media actions\", mediaActions);\r\n        console.log(\"media type\", mediaType);\r\n        console.log(\"target file parent\", targetFile);\r\n        // here yo\r\n        if (checkForType(targetFile.name, mediaType)) {\r\n          console.log(mediaType);\r\n          if (mediaActions[2]) {\r\n            // check if 3rd option says that there are multiple images\r\n            if (mediaActions[2] === \"multiple\") {\r\n              setMedia([\r\n                ...media,\r\n                { name: targetFile.name, link: targetFile.link },\r\n              ]);\r\n              showActionNotification(data);\r\n              setRemoteMediaManagerVisible(false);\r\n              return;\r\n            }\r\n            setMedia(mediaActions[2], {\r\n              name: targetFile.name,\r\n              link: targetFile.link,\r\n            });\r\n            showActionNotification(data);\r\n            setRemoteMediaManagerVisible(false);\r\n            return;\r\n          }\r\n          setMedia({\r\n            name: targetFile.name,\r\n            link: targetFile.link,\r\n          });\r\n          showActionNotification(data);\r\n          setRemoteMediaManagerVisible(false);\r\n          return;\r\n        } else {\r\n          console.log(\"media\", mediaType);\r\n          window.alert(\"Wrong media type selected\");\r\n        }\r\n      } else if (data.id === ChonkyActions.DeleteFiles.id) {\r\n        console.log(data.state.selectedFilesForAction);\r\n        const deletedFiles = await deleteMediaFiles(\r\n          data.state.selectedFilesForAction\r\n        );\r\n        // console.log(deletedFiles);\r\n        if (deletedFiles.status === \"success\") {\r\n          deleteFiles(deletedFiles.deleted);\r\n        }\r\n      } else if (data.id === ChonkyActions.UploadFiles.id) {\r\n        setOpenUploadModal(true);\r\n      } else if (data.id === \"open_files\") {\r\n      }\r\n    },\r\n    [createFolder, deleteFiles, moveFiles, setCurrentFolderId]\r\n  );\r\n};\r\n\r\nfunction checkForType(file, fileType) {\r\n  var parts = file.split(\".\");\r\n  var ext = parts[parts.length - 1];\r\n\r\n  if (fileType === \"images\") {\r\n    switch (ext.toLowerCase()) {\r\n      case \"png\":\r\n      case \"jpeg\":\r\n      case \"jpg\":\r\n      case \"tiff\":\r\n        // etc\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  } else if (fileType === \"videos\") {\r\n    switch (ext.toLowerCase()) {\r\n      case \"m4v\":\r\n      case \"avi\":\r\n      case \"mpg\":\r\n      case \"mp4\":\r\n        // etc\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  } else if (fileType === \"docs\") {\r\n    const isPdf = ext.toLowerCase() === \"pdf\";\r\n    return isPdf;\r\n  } else if (fileType === \"voiceOvers\") {\r\n    switch (ext.toLowerCase()) {\r\n      case \"mp3\":\r\n      case \"mp4\":\r\n        // etc\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  } else if (fileType === \"musics\") {\r\n    switch (ext.toLowerCase()) {\r\n      case \"mp3\":\r\n      case \"mp4\":\r\n        // etc\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const VFSBrowser = React.memo((props) => {\r\n  const [openUploadModal, setOpenUploadModal] = useState(false);\r\n  const {\r\n    getAllMedia,\r\n    fileMap,\r\n    currentFolderId,\r\n    setCurrentFolderId,\r\n    setCurrentFolderName,\r\n    currentFolderName,\r\n    resetFileMap,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n  } = useCustomFileMap();\r\n  const files = useFiles(fileMap, currentFolderId);\r\n  const folderChain = useFolderChain(fileMap, currentFolderId);\r\n  const mediaActions = props.actions;\r\n  const mediaType = props.mediaType;\r\n  const setRemoteMediaManagerVisible = props.setRemoteMediaManagerVisible;\r\n  const handleFileAction = useFileActionHandler(\r\n    setCurrentFolderName,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    setOpenUploadModal,\r\n    mediaActions,\r\n    mediaType,\r\n    setRemoteMediaManagerVisible,\r\n    checkForType\r\n  );\r\n  const fileActions = useMemo(\r\n    () => [\r\n      // ChonkyActions.CreateFolder,\r\n      ChonkyActions.DeleteFiles,\r\n      ChonkyActions.UploadFiles,\r\n    ],\r\n    []\r\n  );\r\n\r\n  const thumbnailGenerator = useCallback(\r\n    (file) => (file.thumbnailUrl ? file.thumbnailUrl : null),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: \"100vh\" }}>\r\n        <MediaFileUploader\r\n          currentFolderName={currentFolderName}\r\n          visible={openUploadModal}\r\n          getAllMedia={getAllMedia}\r\n          setVisible={setOpenUploadModal}\r\n        />\r\n        <FullFileBrowser\r\n          files={files}\r\n          folderChain={folderChain}\r\n          fileActions={fileActions}\r\n          onFileAction={handleFileAction}\r\n          thumbnailGenerator={thumbnailGenerator}\r\n          {...props}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n",["532","533"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\blogs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\UpdateProduct.js",["534","535","536","537"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ReplaceFreeChallengePopup.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomExercisePanel.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\reportWebVitals.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\RecipeProfile.js",["538","539","540","541","542","543","544"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../assets/trainerprofile.css\";\r\nimport \"../assets/home.css\";\r\nimport \"../assets/challengeProfile.css\";\r\nimport \"../assets/recipeProfile.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport {\r\n  StarOutlined,\r\n  UserOutlined,\r\n  ArrowRightOutlined,\r\n  LikeOutlined,\r\n  ClockCircleOutlined,\r\n  LoadingOutlined,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Input, Modal, Rate } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getRecipeById,\r\n  favouriteRecipeById,\r\n  addRecipeComment,\r\n} from \"../services/recipes\";\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport ChallengeReviewModal from \"../components/Challenge/ChallengeReviewModal\";\r\nimport ReviewsModal from \"../components/Common/ReviewsModal\";\r\nimport moment from \"moment\";\r\nimport slug from \"elegant-slug\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nfunction RecipeProfile(props) {\r\n  const [allComments, setAllComments] = useState([]);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [commentButtonLoading, setCommentButtomLoading] = useState(false);\r\n  const [userInfo, serUserInfo] = useContext(userInfoContext);\r\n  const [reviewOpen, setReviewOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [t] = useTranslation();\r\n  // eslint-disable-next-line\r\n  const [recipe, setRecipe] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const id = props.match.params.id;\r\n    setLoading(true);\r\n    const res = await getRecipeById(id);\r\n    setAllComments(res.comments);\r\n    setRecipe(res);\r\n    setLoading(false);\r\n    console.log(res);\r\n  };\r\n  const postCommentToBackend = async () => {\r\n    setCommentButtomLoading(true);\r\n    const res = await addRecipeComment(recipe._id, commentText);\r\n\r\n    if (res) {\r\n      setAllComments(res.comments);\r\n    }\r\n    setCommentButtomLoading(false);\r\n    setCommentText(\"\");\r\n  };\r\n\r\n  const favouriteRecipe = async (id) => {\r\n    await favouriteRecipeById({ recipeId: id }, userInfo.id);\r\n  };\r\n  return loading ? (\r\n    <div className=\"center-inpage\">\r\n      <LoadingOutlined style={{ fontSize: \"50px\", color: \"#ff7700\" }} />\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Helmet>\r\n        <title>{`Realchallenge: ${recipe.name}`}</title>\r\n        <meta name=\"description\" content={recipe.description} />\r\n        <meta property=\"og:title\" content={recipe.name} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:description\" content={recipe.description} />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`http://localhost:3001/recipe/${slug(recipe.name)}/${\r\n            recipe._id\r\n          }`}\r\n        />\r\n        <meta name=\"author\" content=\"Realchallenge\" />\r\n      </Helmet>\r\n      <Navbar color=\"dark\" />\r\n      <ReviewsModal\r\n        visible={reviewOpen}\r\n        setVisible={setReviewOpen}\r\n        item={recipe}\r\n        type=\"recipes\"\r\n        fetchData={fetchData}\r\n      />\r\n      <div className=\"trainer-profile-container\">\r\n        <div\r\n          className=\"trainer-profile-container-column1\"\r\n          style={{\r\n            background: `linear-gradient(rgba(23, 30, 39, 0), rgb(23, 30, 39)), url(${process.env.REACT_APP_SERVER}/uploads/${recipe.image})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"10% 10%\",\r\n          }}\r\n        >\r\n          <div className=\"profile-box\">\r\n            <div\r\n              className=\"challenge-profile-box-1\"\r\n              style={{ borderBottom: \"2px solid #222932\", textAlign: \"left\" }}\r\n            >\r\n              <h1\r\n                className=\"font-heading-white\"\r\n                style={{\r\n                  fontSize: \"4rem\",\r\n                }}\r\n              >\r\n                {recipe.name}\r\n              </h1>\r\n            </div>\r\n            <div className=\"challenge-profile-box-2\">\r\n              <div className=\"challenge-profile-box-2-rating\">\r\n                {console.log(\"rating\", recipe)}\r\n                <div style={{ padding: \"5px\" }}>\r\n                  <Rate value={recipe.rating} allowHalf disabled={true} />\r\n                  {/* {new Array(recipe.rating ? recipe.rating : 1)\r\n                    .fill(0)\r\n                    .map(() => (\r\n                      <StarOutlined\r\n                        style={{\r\n                          color: \"var(--color-orange)\",\r\n                          fontSize: \"2rem\",\r\n                        }}\r\n                      />\r\n                    ))} */}\r\n                </div>\r\n                <span onClick={() => setReviewOpen(true)}>\r\n                  {t(\"recipe_profile.reviews\")}\r\n                </span>\r\n                {localStorage.getItem(\"jwtToken\") ? (\r\n                  <div className=\"recipe-likes\">\r\n                    <HeartFilled\r\n                      onClick={() => favouriteRecipe(recipe._id)}\r\n                      style={{ fontSize: \"3rem\", cursor: \"pointer\" }}\r\n                    />{\" \"}\r\n                    {recipe.likes}\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              <div className=\"challenge-profile-box-2-info\">\r\n                {recipe.mealTypes\r\n                  ? recipe.mealTypes.map((meal) => (\r\n                      <div\r\n                        className=\"challenge-profile-box-2-container\"\r\n                        style={{ opacity: \"0.7\" }}\r\n                      >\r\n                        {meal.name}\r\n                      </div>\r\n                    ))\r\n                  : \"\"}\r\n                {recipe.kCalPerPerson ? (\r\n                  <div\r\n                    className=\"challenge-profile-box-2-container\"\r\n                    style={{ opacity: \"0.7\" }}\r\n                  >\r\n                    {recipe.kCalPerPerson + \" KCAL\"}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div className=\"challenge-profile-box-2-info\">\r\n                {recipe.prepTime ? (\r\n                  <div className=\"recipe-info-block\">\r\n                    <ClockCircleOutlined\r\n                      style={{ color: \"var(--color-orange)\" }}\r\n                    />{\" \"}\r\n                    {recipe.prepTime} {t(\"recipe_profile.minutes\")}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {recipe.persons ? (\r\n                  <div className=\"recipe-info-block\">\r\n                    <UserOutlined style={{ color: \"var(--color-orange)\" }} />{\" \"}\r\n                    {recipe.persons} {t(\"recipe_profile.persons\")}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"recipe-profile-container-column2\">\r\n          {/* hree we go */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.meal_values\")}\r\n            </div>\r\n            <div className=\"recipe-mealValues-container\">\r\n              {[\r\n                {\r\n                  type: \"Carbohydrates\",\r\n                  quantity: recipe.carbohydrate ? recipe.carbohydrate : \"\",\r\n                },\r\n                {\r\n                  type: \"Protein\",\r\n                  quantity: recipe.protein ? recipe.protein : \"\",\r\n                },\r\n                {\r\n                  type: \"Fat\",\r\n                  quantity: recipe.fat ? recipe.fat : \"\",\r\n                },\r\n                {\r\n                  type: \"Fiber\",\r\n                  quantity: recipe.fiber ? recipe.fiber : \"\",\r\n                },\r\n              ].map((value) => (\r\n                <div className=\"recipe-mealValues-container-box\">\r\n                  <span>{value.type}</span>\r\n                  <span>{value.quantity} g</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {/* sdadasd */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.short_info\")}\r\n            </div>\r\n            <div className=\"recipe-mealValues-info\">\r\n              {recipe.description ? ReactHtmlParser(recipe.description) : \"\"}\r\n            </div>\r\n          </div>\r\n          {/* asdasdasd */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.ingredients\")}\r\n            </div>\r\n            <div className=\"recipe-ingredients-box\">\r\n              {recipe.ingredients &&\r\n                recipe.ingredients.map((line, i) => (\r\n                  <div className=\"recipe-mealValues-info recipe-ingredients-box-line\">\r\n                    <span>\r\n                      {line.name ? line.name.name : \"\"}{\" \"}\r\n                      {line.method && `(${line.method})`}\r\n                    </span>\r\n                    <span>{line.weight ? `${line.weight}g` : line.weight}</span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          {/* sdcsadas */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.prepration\")}\r\n            </div>\r\n            <div className=\"recipe-prepration-box\">\r\n              {recipe.cookingProcess\r\n                ? recipe.cookingProcess.map((line, i) => (\r\n                    <div className=\"recipe-mealValues-info recipe-prepration-box-line\">\r\n                      <span className=\"recipe-mealValues-info-number\">\r\n                        {i + 1}\r\n                      </span>{\" \"}\r\n                      {line}\r\n                    </div>\r\n                  ))\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          {/* dasdasdsad */}\r\n          {/* dasdasdsad */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.tips\")}\r\n            </div>\r\n            <div\r\n              className=\"recipe-mealValues-info\"\r\n              style={{\r\n                backgroundColor: \"#ffeee0\",\r\n                minHeight: \"100px\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {ReactHtmlParser(recipe?.tips)}\r\n            </div>\r\n          </div>\r\n          {/* sdasdasdas */}\r\n          <div className=\"recipe-mealValues\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.notes\")}\r\n            </div>\r\n            <div\r\n              className=\"recipe-mealValues-info\"\r\n              style={{\r\n                backgroundColor: \"#ffeee0\",\r\n                minHeight: \"100px\",\r\n                padding: \"10px\",\r\n                listStyle: \"none\",\r\n              }}\r\n            >\r\n              {ReactHtmlParser(recipe?.notes)}\r\n            </div>\r\n          </div>\r\n          {/* sdasdasdas */}\r\n          {/* <div className=\"trainer-profile-goals\">\r\n            <div className=\"recipe-mealValues-heading font-paragraph-white\">\r\n              {t(\"recipe_profile.comments\")}\r\n            </div>\r\n            <div\r\n              className=\"trainer-profile-goals-container\"\r\n              style={{ backgroundColor: \"#e1e9f2\" }}\r\n            > */}\r\n          {/* {.map((comment) => (\r\n                <div\r\n                  className=\"challenge-profile-comment font-paragraph-white\"\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                >\r\n                  <span className=\"challenge-profile-comment-username\">\r\n                    <UserOutlined /> {comment.username}\r\n                  </span>\r\n                  <span style={{ color: \"black\" }}>{comment.comment}</span>\r\n                </div>\r\n              ))} */}\r\n          <div\r\n            className=\"trainer-profile-goals\"\r\n            style={{\r\n              borderBottom: \"1px solid transparent\",\r\n              backgroundColor: \"#e1e9f2\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{\r\n                color: \"#72777B\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {t(\"challenge_profile.comments\")}\r\n            </div>\r\n            {allComments.map((c) => (\r\n              <div className=\"comment-container\">\r\n                <div className=\"comment-container-c1 font-paragraph-black\">\r\n                  <Avatar src={c.user.avatarLink} shape=\"square\" />{\" \"}\r\n                  <span style={{ marginLeft: \"5px\" }}>{c.user.username}</span>\r\n                  <div className=\"comment-container-c2 font-paragraph-black\">\r\n                    {c.text}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"font-paragraph-white comment-container-c3\"\r\n                  style={{ color: \"#82868b\" }}\r\n                >\r\n                  {moment(c.createdAt).format(\"MMM, Do YY\")}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {localStorage.getItem(\"jwtToken\") && (\r\n              <>\r\n                <div\r\n                  className=\"trainer-profile-goals-container\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <Input.TextArea\r\n                    rows={4}\r\n                    value={commentText}\r\n                    onChange={(e) => setCommentText(e.target.value)}\r\n                  />\r\n                </div>\r\n                {commentButtonLoading ? (\r\n                  <LoadingOutlined\r\n                    style={{\r\n                      color: \"#ff7700\",\r\n                      fontSize: \"30px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <button\r\n                    className=\"common-transparent-button font-paragraph-white\"\r\n                    onClick={postCommentToBackend}\r\n                    style={{\r\n                      color: \"#ff7700\",\r\n                      borderColor: \"#ff7700\",\r\n                      marginTop: \"10px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {t(\"common.postComment\")}\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* </div>\r\n          </div> */}\r\n          {!localStorage.getItem(\"jwtToken\") && (\r\n            <div style={{ textAlign: \"center\", paddingTop: \"10px\" }}>\r\n              <Link\r\n                className=\"home-button font-paragraph-white\"\r\n                to=\"/challenges\"\r\n                style={{ width: \"80%\" }}\r\n              >\r\n                <span className=\"home-button-text\">\r\n                  {t(\"recipe_profile.start_today\")} <ArrowRightOutlined />\r\n                </span>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RecipeProfile);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\NewWelcome.js",["545","546"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../assets/newWelcome.css\";\r\nimport { RightOutlined, CheckOutlined, EuroOutlined } from \"@ant-design/icons\";\r\n\r\nimport { withRouter, Link, useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport VerifyUser from \"../components/UserDashboard/VerifyUser\";\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport { selectedChallengeContext } from \"../contexts/PaymentProcessStore\";\r\nimport { addFreeChallenge } from \"../services/createChallenge/main\";\r\n\r\nfunction NewWelcome(props) {\r\n  const [t] = useTranslation();\r\n  const history = useHistory();\r\n  const userInfo = useContext(userInfoContext)[0];\r\n  const selectedChallenge = useContext(selectedChallengeContext)[0];\r\n  const [choosePlan, setChoosenPlan] = useState(\"CHALLENGE_12\");\r\n\r\n  useEffect(() => {\r\n    if (!props.onPricingPage) {\r\n      if (!localStorage.getItem(\"jwtToken\")) {\r\n        props.history.push(\"/login\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const checkStyle = {\r\n    color: \"#ff7700\",\r\n    fontSize: \"2.5rem\",\r\n    paddingRight: \"0.5rem\",\r\n  };\r\n\r\n  const addFreeChallengeToDashboard = async () => {\r\n    console.log(selectedChallenge, userInfo);\r\n    if (selectedChallenge && selectedChallenge.access?.includes(\"FREE\")) {\r\n      await addFreeChallenge(selectedChallenge);\r\n      history.push(\"/user/dashboard\");\r\n      // console.log(\"is free\");\r\n    } else {\r\n      // console.log(\"no free\");\r\n      history.push(\"/user/dashboard\");\r\n    }\r\n    // async () => {\r\n    //   const res = await addChallengeToCustomerDetail(userInfo._id, selectedChallenge._id);\r\n    //   if(res){\r\n    //     history.push(\"/user/dashboard\")\r\n    //   }\r\n  };\r\n  const onChoosePlan = () => {\r\n    console.log(\"here\", choosePlan);\r\n    localStorage.setItem(\"package-type\", choosePlan);\r\n    if (localStorage.getItem(\"jwtToken\")) {\r\n      if (choosePlan === \"CHALLENGE_1\") {\r\n        props.history.push(\"/all-challenges\");\r\n      } else {\r\n        props.history.push(\"/create-payment\");\r\n      }\r\n    } else {\r\n      props.history.push(\"/new\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {props.onPricingPage ? \"\" : <VerifyUser fromNewWelcomeScreen={true} />}\r\n      {props.onPricingPage ? (\r\n        \"\"\r\n      ) : (\r\n        <div\r\n          onClick={addFreeChallengeToDashboard}\r\n          className=\"font-paragraph-white\"\r\n          style={{\r\n            color: \"var(--color-orange)\",\r\n            fontSize: \"20px\",\r\n            backgroundColor: \"var(--mirage)\",\r\n            padding: \"10px \",\r\n            float: \"right\",\r\n            margin: \"10px 50px 0 0\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          {t(\"newWelcome.skip\")} <RightOutlined />\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className=\"new-welcome-page\"\r\n        style={{ paddingTop: props.onPricingPage ? \"60px\" : \"10px\" }}\r\n      >\r\n        <div className=\"new-welcome-container\">\r\n          <h1\r\n            className=\"font-heading-white\"\r\n            style={{ fontSize: props.onPricingPage ? \"25px\" : \"\" }}\r\n          >\r\n            {props.onPricingPage ? t(\"pricing.great\") : \"Welcome\"}\r\n          </h1>\r\n          <h3\r\n            className=\"font-subheading-white\"\r\n            style={{ fontSize: props.onPricingPage ? \"18px\" : \"\" }}\r\n          >\r\n            {props.onPricingPage ? t(\"pricing.p\") : t(\"newWelcome.tyfjr\")}\r\n          </h3>\r\n          <p className=\"font-paragraph-white\">{t(\"newWelcome.getAccess\")}</p>\r\n          <div className=\"new-welcome-cards\">\r\n            {/* first card */}\r\n            <div\r\n              className=\"new-welcome-card\"\r\n              onClick={() => setChoosenPlan(\"CHALLENGE_1\")}\r\n              style={{\r\n                border:\r\n                  choosePlan === \"CHALLENGE_1\"\r\n                    ? \"2px solid #f37720\"\r\n                    : \"2px solid #2a2f36\",\r\n              }}\r\n            >\r\n              <h2 className=\"font-paragraph-white\">\r\n                {t(\"newWelcome.oneTime\")} <br />\r\n                {t(\"newWelcome.challenge\")}\r\n              </h2>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ fontWeight: \"600\", margin: \"10px\" }}\r\n              >\r\n                {t(\"newWelcome.from\")}{\" \"}\r\n                <span style={{ fontSize: \"30px\" }}>€29</span> /{\" \"}\r\n                {t(\"newWelcome.challenge\")}\r\n              </span>\r\n\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ color: \"#969696\", textAlign: \"left\" }}\r\n              >\r\n                {t(\"newWelcome.ccfl\")}\r\n              </span>\r\n              <ul\r\n                className=\"features\"\r\n                style={{ textAlign: \"left\", marginTop: \"20px\" }}\r\n              >\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.nsn\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.billedOnce\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.unlockAll\")}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {/* second card */}\r\n            <div\r\n              className=\"new-welcome-card\"\r\n              onClick={() => setChoosenPlan(\"CHALLENGE_12\")}\r\n              style={{\r\n                border:\r\n                  choosePlan === \"CHALLENGE_12\"\r\n                    ? \"2px solid #f37720\"\r\n                    : \"2px solid #2a2f36\",\r\n              }}\r\n            >\r\n              <h2 className=\"font-paragraph-white\"> {t(\"newWelcome.rs\")}</h2>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  fontSize: \"13px\",\r\n                  backgroundColor: \"#f37720\",\r\n                  padding: \"5px\",\r\n                  width: \"120px\",\r\n                  fontWeight: \"600\",\r\n                  alignSelf: \"center\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              >\r\n                {t(\"newWelcome.saveUpTo\")} 60%\r\n              </span>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ fontWeight: \"600\", margin: \"10px\" }}\r\n              >\r\n                <span style={{ fontSize: \"30px\" }}>€4.5</span> / WEEK\r\n              </span>\r\n\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ color: \"#969696\", textAlign: \"left\" }}\r\n              >\r\n                12 months plan\r\n              </span>\r\n              <ul\r\n                className=\"features\"\r\n                style={{ textAlign: \"left\", marginTop: \"20px\" }}\r\n              >\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.uac\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.bm\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.mtg\")}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {/* third card */}\r\n            <div\r\n              className=\"new-welcome-card\"\r\n              onClick={() => setChoosenPlan(\"CHALLENGE_3\")}\r\n              style={{\r\n                border:\r\n                  choosePlan === \"CHALLENGE_3\"\r\n                    ? \"2px solid #f37720\"\r\n                    : \"2px solid #2a2f36\",\r\n              }}\r\n            >\r\n              <h2 className=\"font-paragraph-white\">{t(\"newWelcome.rs\")}</h2>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  fontSize: \"13px\",\r\n                  backgroundColor: \"#f37720\",\r\n                  padding: \"5px\",\r\n                  width: \"120px\",\r\n                  fontWeight: \"600\",\r\n                  alignSelf: \"center\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              >\r\n                {t(\"newWelcome.saveUpTo\")} 30%\r\n              </span>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ fontWeight: \"600\", margin: \"10px\" }}\r\n              >\r\n                <span style={{ fontSize: \"30px\" }}>€6</span> /{\" \"}\r\n                {t(\"newWelcome.week\")}\r\n              </span>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ color: \"#969696\", textAlign: \"left\" }}\r\n              >\r\n                {t(\"newWelcome.tmp\")}\r\n              </span>\r\n              <ul\r\n                className=\"features\"\r\n                style={{ textAlign: \"left\", marginTop: \"20px\" }}\r\n              >\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.uac\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.bm\")}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <CheckOutlined style={checkStyle} />\r\n                  <span className=\"font-paragraph-white\">\r\n                    {t(\"newWelcome.mtg\")}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {/* sadasd */}\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingBottom: \"20px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"create-payment-check-out font-paragraph-white\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n                width: \"80%\",\r\n              }}\r\n              onClick={onChoosePlan}\r\n            >\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ fontWeight: \"600\" }}\r\n              >\r\n                {t(\"newWelcome.choose\")}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          {props.onPricingPage ? (\r\n            \"\"\r\n          ) : (\r\n            <div style={{ padding: \"20px 0\" }}>\r\n              <div\r\n                onClick={addFreeChallengeToDashboard}\r\n                // to=\r\n                className=\"font-paragraph-white\"\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  borderBottom: \"1px solid #fff\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {t(\"newWelcome.dash\")}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"money-back-guarantee font-paragraph-white\">\r\n          <EuroOutlined /> {t(\"newWelcome.moneyBack\")}\r\n        </div>\r\n      </div>\r\n\r\n      {/* cards */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(NewWelcome);\r\n\r\n// <Link\r\n// to={{\r\n//   pathname: \"/create-payment\",\r\n// }}\r\n// onClick={() =>\r\n//   localStorage.setItem(\"package-type\", \"CHALLENGE_1\")\r\n// }\r\n// className=\"common-orange-button font-paragraph-white\"\r\n// style={{\r\n//   width: \"150px\",\r\n//   marginBottom: \"10px\",\r\n//   textAlign: \"center\",\r\n// }}\r\n// >\r\n// Select\r\n// </Link>\r\n",["547","548"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\HelpPopupPlayer.js",["549","550","551","552","553","554"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\AllChallenges.js",["555"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Tag, Table, Space, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllUserChallenges,\r\n  removeChallenge,\r\n} from \"../../../services/createChallenge/main\";\r\nimport { Select } from \"antd\";\r\nimport UpdateChallenge from \"./UpdateChallenge\";\r\nimport { getAllTrainers } from \"../../../services/trainers\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\nimport slug from \"elegant-slug\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AllChallenges({ setCurrentSelection, setSelectedChallengeForUpdate }) {\r\n  const [t] = useTranslation();\r\n  const [filterAllChallenges, setFilterAllChallenge] = useState([]);\r\n  const [allChallenges, setAllChallenges] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [allTrainers, setAllTrainers] = useState([]);\r\n  const userInfo = useContext(userInfoContext);\r\n\r\n  useEffect(() => {\r\n    if (filter === \"all\") {\r\n      setFilterAllChallenge(allChallenges);\r\n      return;\r\n    }\r\n    const admins = allChallenges.filter((c) =>\r\n      c.trainers.some((t) => t.username === filter)\r\n    );\r\n    setFilterAllChallenge(admins);\r\n  }, [allChallenges, filter]);\r\n\r\n  useEffect(() => {\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n  const fetchChallenges = async () => {\r\n    const c = await getAllUserChallenges();\r\n    const t = await getAllTrainers();\r\n    console.log(\"trainers\", t);\r\n    console.log(c);\r\n    setAllChallenges(c.challenges);\r\n    setAllTrainers(t.trainers);\r\n    setFilterAllChallenge(c.challenges);\r\n  };\r\n\r\n  const openChallengeUpdater = (record) => {\r\n    setSelectedChallengeForUpdate(record);\r\n    setCurrentSelection(5.3);\r\n    // setShow(true);\r\n  };\r\n\r\n  const deleteChallenge = async (c) => {\r\n    await removeChallenge(c._id);\r\n    fetchChallenges();\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Challenge ID\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Challenge Name\",\r\n      dataIndex: \"challengeName\",\r\n      key: \"challengeName\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Updated At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">\r\n          {moment(text).format(\"DD/MM/YYYY\")}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Points\",\r\n      dataIndex: \"points\",\r\n      key: \"points\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Trainers\",\r\n      key: \"trainers\",\r\n      dataIndex: \"trainers\",\r\n      render: (tags) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <Tag color={\"volcano\"} key={tag._id}>\r\n                {tag.firstName}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Access\",\r\n      key: \"access\",\r\n      dataIndex: \"access\",\r\n      render: (tags) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 5 ? \"orange\" : \"orange\";\r\n            if (tag === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"challengePreviewLink\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          {/* <Button\r\n            type=\"primary\"\r\n            onClick={() => duplicateChallenge(text, record)}\r\n          >\r\n            {t(\"adminDashboard.duplicate\")}\r\n          </Button>\r\n          <Button type=\"primary\">{t(\"adminDashboard.preview\")}</Button>*/}\r\n          <Link\r\n            to={`/challenge/${slug(text.challengeName)}/${text._id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {\" \"}\r\n            <Button type=\"primary\">{t(\"adminDashboard.preview\")}</Button>\r\n          </Link>\r\n          <Button type=\"primary\" onClick={() => openChallengeUpdater(record)}>\r\n            {t(\"adminDashboard.edit\")}\r\n          </Button>\r\n          <Button type=\"danger\" onClick={() => deleteChallenge(text)}>\r\n            {t(\"adminDashboard.delete\")}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // const duplicateChallenge = (i, r) => {\r\n  //   setAllChallenges([...allChallenges, { ...i, id: i.id + 10 }]);\r\n  // };\r\n  return (\r\n    <div>\r\n      <h2 className=\"font-heading-black\">\r\n        {t(\"adminDashboard.challenges.all\")}\r\n      </h2>\r\n      <div className=\"admin-allchallenges-list-container\">\r\n        {userInfo.role === \"admin\" && (\r\n          <div>\r\n            <span className=\"font-heading-black\" style={{ marginLeft: \"10px\" }}>\r\n              Filter By Trainer:\r\n            </span>\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 120, marginLeft: \"10px\" }}\r\n              onChange={(e) => setFilter(e)}\r\n            >\r\n              <Select.Option key={1} value={\"all\"}>\r\n                All\r\n              </Select.Option>\r\n              {allTrainers &&\r\n                allTrainers.map((t, i) => (\r\n                  <Select.Option key={i} value={t.username}>\r\n                    {t.username}\r\n                  </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n        )}\r\n        <Input\r\n          placeholder=\"Search Challenge\"\r\n          onChange={(e) =>\r\n            setFilterAllChallenge(\r\n              allChallenges.filter((challenge) =>\r\n                challenge.challengeName\r\n                  .toUpperCase()\r\n                  .includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Input\r\n          style={{ marginTop: \"10px\" }}\r\n          placeholder=\"Search Challenge By ID\"\r\n          onChange={(e) =>\r\n            setFilterAllChallenge(\r\n              allChallenges.filter((challenge) =>\r\n                challenge._id\r\n                  .toUpperCase()\r\n                  .includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Table columns={columns} dataSource={filterAllChallenges} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllChallenges;\r\n",["556","557"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\NewUser.js",["558","559","560","561","562","563","564"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\posts.js",[],["565","566"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\communityPosts.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMainTab.js",["567","568","569","570","571"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutCollapse\\CustomWeekPanel.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\CommentSection.js",["572","573"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\LanguageContext.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AdminDashboard.js",["574","575"],"import React, { useContext, useState } from \"react\";\r\nimport \"../assets/adminDashboard.css\";\r\nimport Logo from \"../images/logo_orange.png\";\r\nimport { Avatar, Popover, Layout, Menu, Modal } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  CaretDownOutlined,\r\n  ShopOutlined,\r\n  NotificationOutlined,\r\n  AuditOutlined,\r\n  FolderViewOutlined,\r\n  VideoCameraAddOutlined,\r\n  UserAddOutlined,\r\n  InsertRowBelowOutlined,\r\n  CoffeeOutlined,\r\n  ControlOutlined,\r\n  QuestionCircleOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { VFSBrowser } from \"../components/Admin/MediaManager/MediaManager\";\r\nimport AllChallenges from \"../components/Admin/ChallengeManager/AllChallenges\";\r\nimport NewChallenge from \"../components/Admin/ChallengeManager/NewChallenge\";\r\nimport AllExercises from \"../components/Admin/ExerciseManager/AllExercises\";\r\nimport NewExercise from \"../components/Admin/ExerciseManager/NewExercise\";\r\nimport NewUser from \"../components/Admin/UserManager/NewUser\";\r\nimport AllUsers from \"../components/Admin/UserManager/AllUsers\";\r\nimport AllProducts from \"../components/Admin/ShopManager/AllProducts\";\r\nimport NewProduct from \"../components/Admin/ShopManager/NewProduct\";\r\nimport AllRecipes from \"../components/Admin/RecipeManager/AllRecipes\";\r\nimport NewRecipe from \"../components/Admin/RecipeManager/NewRecipe\";\r\nimport AllBlogs from \"../components/Admin/BlogManager/AllBlogs\";\r\nimport NewBlog from \"../components/Admin/BlogManager/NewBlog\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AllMemberships from \"../components/Admin/MembershipManager/AllMemberships\";\r\nimport NewMembership from \"../components/Admin/MembershipManager/NewMembership\";\r\nimport AllCoupons from \"../components/Admin/Coupons/AllCoupons\";\r\nimport NewCoupon from \"../components/Admin/Coupons/NewCoupon\";\r\nimport AllPosts from \"../components/Admin/PostsManager/AllPosts\";\r\n\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport { logoutUser } from \"../services/authentication\";\r\nimport UpdateChallenge from \"../components/Admin/ChallengeManager/UpdateChallenge\";\r\nimport NewPost from \"../components/Admin/PostsManager/NewPost\";\r\nimport AllFaqs from \"../components/Admin/FaqManager/AllFaqs\";\r\nimport NewFaq from \"../components/Admin/FaqManager/NewFaq\";\r\nimport AllRequests from \"../components/Admin/RequestManager/AllRequests\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction AdminDashboard(props) {\r\n  // eslint-disable-next-line\r\n  const [t] = useTranslation();\r\n  const [adminInfo, setAdminInfo] = useContext(userInfoContext);\r\n  const [currentSelection, setCurrentSelection] = useState(1);\r\n  const [selectedChallengeForUpdate, setSelectedChallengeForUpdate] = useState(\r\n    {}\r\n  );\r\n  const content = (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <Link to=\"/user/profile\" className=\"font-paragraph-white\">\r\n        {t(\"admin.profile_setting\")}\r\n      </Link>\r\n      <Link\r\n        className=\"font-paragraphw-white hover-orange\"\r\n        onClick={() => logoutUser(props.history, setAdminInfo)}\r\n      >\r\n        {t(\"admin.logout\")}\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  function showConfirm(newPath) {\r\n    Modal.confirm({\r\n      title: (\r\n        <p className=\"font-paragraph-white\">\r\n          Are you sure, you want to leave before saving? All your progress will\r\n          be lost\r\n        </p>\r\n      ),\r\n      icon: null,\r\n      onOk() {\r\n        // console.log(\"OK\");\r\n        setCurrentSelection(newPath);\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  }\r\n\r\n  const checkBeforeMoving = (newLocation) => {\r\n    if (\r\n      currentSelection === 1.2 ||\r\n      currentSelection === 2.2 ||\r\n      currentSelection === 4.2 ||\r\n      currentSelection === 5.2 ||\r\n      currentSelection === 6.2 ||\r\n      currentSelection === 7.2 ||\r\n      currentSelection === 8.2 ||\r\n      currentSelection === 9.2 ||\r\n      currentSelection === 10.2 ||\r\n      currentSelection === 11.2\r\n    ) {\r\n      // alert(\"Are you sure you wanna do that pussy?\");\r\n      showConfirm(newLocation);\r\n      // setCurrentSelection(newLocation);\r\n    } else {\r\n      setCurrentSelection(newLocation);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* admin navbar */}\r\n      <div className=\"admin-dashboard-navbar\">\r\n        <div>\r\n          <Link to=\"/admin/dashboard\" className=\"navbar-logo\">\r\n            <img src={Logo} alt=\"logo\" className=\"logo small-screenlogo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"loggedin-nav-userinfo\" style={{ width: \"150px\" }}>\r\n          <Avatar\r\n            shape=\"square\"\r\n            src={adminInfo.avatar}\r\n            icon={<UserOutlined />}\r\n          />\r\n          <Popover placement=\"bottom\" content={content} trigger=\"click\">\r\n            <div className=\"loggedin-nav-name font-paragraph-white\">\r\n              <span>\r\n                {adminInfo.username} <CaretDownOutlined />\r\n              </span>\r\n            </div>\r\n          </Popover>\r\n        </div>\r\n      </div>\r\n      {/* admin sidebar */}\r\n      {/* admin main container */}\r\n      <div className=\"admin-dashboard-container\">\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <Sider\r\n            breakpoint=\"lg\"\r\n            collapsedWidth=\"0\"\r\n            style={{ minHeight: \"150vh\", background: \"var(--color-gray-dark)\" }}\r\n            onBreakpoint={(broken) => {\r\n              console.log(broken);\r\n            }}\r\n            onCollapse={(collapsed, type) => {\r\n              console.log(collapsed, type);\r\n            }}\r\n            onConte\r\n          >\r\n            <div className=\"logo\" />\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"inline\"\r\n              style={{ backgroundColor: \"var(--color-gray-dark)\" }}\r\n              defaultSelectedKeys={[\"1\"]}\r\n            >\r\n              {/* <Menu.Item\r\n                key=\"0\"\r\n                icon={<AuditOutlined />}\r\n                onClick={() => setCurrentSelection(0)}\r\n              >\r\n                {t(\"admin.requests\")}\r\n              </Menu.Item> */}\r\n\r\n              {adminInfo.role === \"admin\" && (\r\n                <SubMenu key=\"1\" icon={<ShopOutlined />} title=\"Manage Shop\">\r\n                  <Menu.Item\r\n                    key=\"1.1\"\r\n                    onClick={() => checkBeforeMoving(1.1)}\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 1.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 1.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                  >\r\n                    {t(\"admin.all_products\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"1.2\"\r\n                    onClick={() => checkBeforeMoving(1.2)}\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 1.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 1.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                  >\r\n                    {t(\"admin.new_product\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {adminInfo.role === \"admin\" && (\r\n                <Menu.Item\r\n                  key=\"12\"\r\n                  icon={<FolderViewOutlined />}\r\n                  style={{\r\n                    backgroundColor:\r\n                      currentSelection === 12\r\n                        ? \"var(--color-orange)\"\r\n                        : \"transparent\",\r\n                    color: currentSelection === 12 ? \"#fff\" : \"\",\r\n                  }}\r\n                  onClick={() => checkBeforeMoving(12)}\r\n                >\r\n                  Manage Requests\r\n                </Menu.Item>\r\n              )}\r\n              {(adminInfo.role === \"admin\" || adminInfo.role === \"blogger\") && (\r\n                <SubMenu key=\"2\" icon={<CoffeeOutlined />} title=\"Manage Blogs\">\r\n                  <Menu.Item\r\n                    key=\"2.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 2.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 2.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(2.1)}\r\n                  >\r\n                    {t(\"admin.all_blogs\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"2.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 2.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 2.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(2.2)}\r\n                  >\r\n                    {t(\"admin.new_blog\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              <Menu.Item\r\n                key=\"3\"\r\n                icon={<FolderViewOutlined />}\r\n                style={{\r\n                  backgroundColor:\r\n                    currentSelection === 3\r\n                      ? \"var(--color-orange)\"\r\n                      : \"transparent\",\r\n                  color: currentSelection === 3 ? \"#fff\" : \"\",\r\n                }}\r\n                onClick={() => checkBeforeMoving(3)}\r\n              >\r\n                {t(\"admin.media_manager\")}\r\n              </Menu.Item>\r\n\r\n              {(adminInfo.role === \"admin\" || adminInfo.role === \"nutrist\") && (\r\n                <SubMenu key=\"4\" icon={<CoffeeOutlined />} title=\"Recipes\">\r\n                  <Menu.Item\r\n                    key=\"4.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 4.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 4.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(4.1)}\r\n                  >\r\n                    {t(\"admin.all_recipes\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 4.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 4.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    key=\"4.2\"\r\n                    onClick={() => checkBeforeMoving(4.2)}\r\n                  >\r\n                    {t(\"admin.new_recipe\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {(adminInfo.role === \"admin\" || adminInfo.role === \"trainer\") && (\r\n                <SubMenu key=\"5\" icon={<ControlOutlined />} title=\"Exercises\">\r\n                  <Menu.Item\r\n                    key=\"5.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 5.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 5.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(5.1)}\r\n                  >\r\n                    All Exercises\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"5.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 5.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 5.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(5.2)}\r\n                  >\r\n                    New Exercise\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {(adminInfo.role === \"admin\" || adminInfo.role === \"trainer\") && (\r\n                <SubMenu\r\n                  key=\"6\"\r\n                  icon={<VideoCameraAddOutlined />}\r\n                  title=\"Challenges\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"6.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 6.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 6.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(6.1)}\r\n                  >\r\n                    {t(\"admin.all_challenges\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"6.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 6.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 6.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(6.2)}\r\n                  >\r\n                    {t(\"admin.new_challenge\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {adminInfo.role === \"admin\" && (\r\n                <SubMenu\r\n                  key=\"7\"\r\n                  icon={<UserAddOutlined />}\r\n                  title=\"Manage Users\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"7.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 7.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 7.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(7.1)}\r\n                  >\r\n                    {t(\"admin.all_users\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"7.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 7.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 7.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(7.2)}\r\n                  >\r\n                    {t(\"admin.new_user\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {adminInfo.role === \"admin\" && (\r\n                <SubMenu\r\n                  key=\"8\"\r\n                  icon={<InsertRowBelowOutlined />}\r\n                  title=\"Manage Posts\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"8.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 8.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 8.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(8.1)}\r\n                  >\r\n                    All Posts\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"8.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 8.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 8.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(8.2)}\r\n                  >\r\n                    New Post\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {/* {adminInfo.role === \"admin\" && (\r\n                <SubMenu\r\n                  key=\"9\"\r\n                  icon={<InsertRowBelowOutlined />}\r\n                  title=\"Membership\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"9.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 9.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 9.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(9.1)}\r\n                  >\r\n                    {t(\"admin.all_membership\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"9.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 9.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 9.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(9.2)}\r\n                  >\r\n                    {t(\"admin.new_membership\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )} */}\r\n              {adminInfo.role === \"admin\" && (\r\n                <SubMenu\r\n                  key=\"10\"\r\n                  icon={<NotificationOutlined />}\r\n                  title=\"Manage Coupons\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"10.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 10.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 10.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(10.1)}\r\n                  >\r\n                    {t(\"admin.all_coupons\")}\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"10.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 10.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 10.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(10.2)}\r\n                  >\r\n                    {t(\"admin.new_coupons\")}\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n              {adminInfo.role === \"admin\" && (\r\n                <SubMenu\r\n                  key=\"11\"\r\n                  icon={<QuestionCircleOutlined />}\r\n                  title=\"Help Center\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"11.1\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 11.1\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 11.1 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(11.1)}\r\n                  >\r\n                    All Faqs\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    key=\"11.2\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        currentSelection === 11.2\r\n                          ? \"var(--color-orange)\"\r\n                          : \"transparent\",\r\n                      color: currentSelection === 11.2 ? \"#fff\" : \"\",\r\n                    }}\r\n                    onClick={() => checkBeforeMoving(11.2)}\r\n                  >\r\n                    New Faq\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              )}\r\n            </Menu>\r\n          </Sider>\r\n          <div className=\"admin-dashboard-container-main\">\r\n            {currentSelection === 3 && <VFSBrowser />}\r\n            {currentSelection === 1.1 && <AllProducts />}\r\n            {currentSelection === 1.2 && <NewProduct />}\r\n            {currentSelection === 2.1 && <AllBlogs />}\r\n            {currentSelection === 2.2 && (\r\n              <NewBlog setCurrentSelection={setCurrentSelection} />\r\n            )}\r\n            {currentSelection === 4.1 && <AllRecipes />}\r\n            {currentSelection === 4.2 && (\r\n              <NewRecipe setCurrentSelection={setCurrentSelection} />\r\n            )}\r\n            {currentSelection === 5.1 && <AllExercises />}\r\n            {currentSelection === 5.2 && (\r\n              <NewExercise\r\n                setCurrentSelection={setCurrentSelection}\r\n                home={5.1}\r\n              />\r\n            )}\r\n\r\n            {currentSelection === 6.1 && (\r\n              <AllChallenges\r\n                setSelectedChallengeForUpdate={setSelectedChallengeForUpdate}\r\n                selectedChallengeForUpdate={selectedChallengeForUpdate}\r\n                setCurrentSelection={setCurrentSelection}\r\n                currentSelection={currentSelection}\r\n              />\r\n            )}\r\n            {currentSelection === 6.2 && <NewChallenge />}\r\n            {currentSelection === 5.3 && (\r\n              <UpdateChallenge\r\n                key={\r\n                  selectedChallengeForUpdate\r\n                    ? selectedChallengeForUpdate._id\r\n                    : \"\"\r\n                }\r\n                setSelectedChallengeForUpdate={setSelectedChallengeForUpdate}\r\n                selectedChallengeForUpdate={selectedChallengeForUpdate}\r\n                setCurrentSelection={setCurrentSelection}\r\n                currentSelection={currentSelection}\r\n              />\r\n            )}\r\n\r\n            {currentSelection === 7.1 && <AllUsers />}\r\n            {currentSelection === 7.2 && (\r\n              <NewUser setCurrentSelection={setCurrentSelection} home={7.1} />\r\n            )}\r\n            {currentSelection === 8.1 && <AllPosts />}\r\n            {currentSelection === 8.2 && (\r\n              <NewPost setCurrentSelection={setCurrentSelection} home={8.1} />\r\n            )}\r\n            {currentSelection === 9.1 && <AllMemberships />}\r\n            {currentSelection === 9.2 && <NewMembership />}\r\n            {currentSelection === 10.1 && <AllCoupons />}\r\n            {currentSelection === 10.2 && (\r\n              <NewCoupon\r\n                setCurrentSelection={setCurrentSelection}\r\n                home={10.1}\r\n              />\r\n            )}\r\n            {currentSelection === 11.1 && <AllFaqs />}\r\n            {currentSelection === 11.2 && (\r\n              <NewFaq setCurrentSelection={setCurrentSelection} home={11.1} />\r\n            )}\r\n            {currentSelection === 12 && <AllRequests />}\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminDashboard);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Footer.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\customer.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RequestManager\\AllRequests.js",["576","577","578"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table, Space, Input, Select, Switch } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllAdminRequests,\r\n  updateAdminRequest,\r\n} from \"../../../services/adminRequests\";\r\nimport slug from \"elegant-slug\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AllRequests() {\r\n  const [t] = useTranslation();\r\n  const [filterAllData, setFilterAllData] = useState([]);\r\n  const [allData, setAllData] = useState([]);\r\n  const [requestsTypeFilter, setRequestsTypeFilter] = useState(\"challenge\");\r\n  const [requestsApprovedFilter, setRequestsApprovedFilter] =\r\n    useState(\"notApproved\");\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function updateRequestStatus(id, type, value) {\r\n    const res = await updateAdminRequest(\r\n      id,\r\n      type,\r\n      value === \"approved\" ? true : false\r\n    );\r\n    console.log(res);\r\n    fetchData();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (requestsTypeFilter === \"challenge\") {\r\n      if (requestsApprovedFilter === \"approved\") {\r\n        setFilterAllData(allData?.challenges?.filter((f) => f.adminApproved));\r\n      }\r\n      if (requestsApprovedFilter === \"notApproved\") {\r\n        setFilterAllData(allData?.challenges?.filter((f) => !f.adminApproved));\r\n      }\r\n    }\r\n    if (requestsTypeFilter === \"recipe\") {\r\n      if (requestsApprovedFilter === \"approved\") {\r\n        setFilterAllData(allData?.recipes?.filter((f) => f.adminApproved));\r\n      }\r\n      if (requestsApprovedFilter === \"notApproved\") {\r\n        setFilterAllData(allData?.recipes?.filter((f) => !f.adminApproved));\r\n      }\r\n    }\r\n    if (requestsTypeFilter === \"magazine\") {\r\n      if (requestsApprovedFilter === \"approved\") {\r\n        setFilterAllData(allData?.blogs?.filter((f) => f.adminApproved));\r\n      }\r\n      if (requestsApprovedFilter === \"notApproved\") {\r\n        setFilterAllData(allData?.blogs?.filter((f) => !f.adminApproved));\r\n      }\r\n    }\r\n  }, [requestsApprovedFilter, allData, requestsTypeFilter]);\r\n\r\n  const fetchData = async () => {\r\n    const data = await getAllAdminRequests();\r\n    setAllData(data.res);\r\n    console.log(\"all magazines\", data.res);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">{requestsTypeFilter}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      key: \"bang\",\r\n      render: (text, record) =>\r\n        text.name\r\n          ? text.name\r\n          : text.challengeName\r\n          ? text.challengeName\r\n          : text.title\r\n          ? text.title\r\n          : \"\",\r\n    },\r\n    {\r\n      title: \"Is Public\",\r\n      dataIndex: \"isPublic\",\r\n      key: \"isPublic\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">{text ? \"True\" : \"False\"}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Admin Approved\",\r\n      dataIndex: \"adminApproved\",\r\n      key: \"adminApproved\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">{text ? \"True\" : \"False\"}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Updated At\",\r\n      key: \"updatedAt\",\r\n      dataIndex: \"updatedAt\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">\r\n          {moment(text).format(\"DD/MM/YYYY\")}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"challengePreviewLink\",\r\n      render: (text, record) => (\r\n        <>\r\n          {console.log(\"yas\", text)}\r\n          <Link\r\n            to={`/${requestsTypeFilter}/${slug(\r\n              text.name\r\n                ? text.name\r\n                : text.challengeName\r\n                ? text.challengeName\r\n                : text.title\r\n                ? text.title\r\n                : \"\"\r\n            )}/${text._id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {\" \"}\r\n            <Button type=\"primary\">{t(\"adminDashboard.preview\")}</Button>\r\n          </Link>\r\n\r\n          <Select\r\n            style={{ width: 150, marginLeft: \"10px\" }}\r\n            value={text.adminApproved ? \"approved\" : \"notApproved\"}\r\n            onChange={(e) =>\r\n              updateRequestStatus(text._id, requestsTypeFilter, e)\r\n            }\r\n          >\r\n            <Select.Option key={1} value={\"approved\"}>\r\n              Approved\r\n            </Select.Option>\r\n            <Select.Option key={2} value={\"notApproved\"}>\r\n              Not Approved\r\n            </Select.Option>\r\n          </Select>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h2 className=\"font-heading-black\">Manage Requets</h2>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div>\r\n          <span className=\"font-heading-black\" style={{ marginLeft: \"10px\" }}>\r\n            Filter By Type:\r\n          </span>\r\n          <Select\r\n            defaultValue={requestsTypeFilter}\r\n            style={{ width: 120, marginLeft: \"10px\" }}\r\n            onChange={(e) => setRequestsTypeFilter(e)}\r\n          >\r\n            <Select.Option key={1} value={\"challenge\"}>\r\n              Challenges\r\n            </Select.Option>\r\n            <Select.Option key={2} value={\"recipe\"}>\r\n              Recipes\r\n            </Select.Option>\r\n            <Select.Option key={3} value={\"magazine\"}>\r\n              Blogs\r\n            </Select.Option>\r\n          </Select>\r\n        </div>\r\n        <div style={{ marginLeft: \"20px\" }}>\r\n          <span className=\"font-heading-black\" style={{ marginLeft: \"10px\" }}>\r\n            Filter By Status:\r\n          </span>\r\n          <Select\r\n            defaultValue={requestsApprovedFilter}\r\n            style={{ width: 150, marginLeft: \"10px\" }}\r\n            onChange={(e) => setRequestsApprovedFilter(e)}\r\n          >\r\n            <Select.Option key={1} value={\"notApproved\"}>\r\n              Not Approved\r\n            </Select.Option>\r\n            <Select.Option key={2} value={\"approved\"}>\r\n              Approved\r\n            </Select.Option>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"admin-allchallenges-list-container\">\r\n        <Table columns={columns} dataSource={filterAllData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllRequests;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\UpdateFaq.js",["579","580","581"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeMusicTab.js",["582","583"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\shop.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Nutrition\\SearchNutrition.js",["584"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\contexts\\PaymentProcessStore.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\AllChallenges.js",["585","586","587","588","589"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengePlayer.js",["590","591","592","593"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\PackageSelector.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\goals.js",[],["594","595"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\mediaManager.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ShopManager\\AllProducts.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\EditTypeName.js",["596"],"import React, { useState } from \"react\";\r\nimport { Button, Input, Modal } from \"antd\";\r\nimport { updateBlogCategory } from \"../../../services/blogs\";\r\nimport {\r\n  updateDiet,\r\n  updateFoodType,\r\n  updateIngredient,\r\n  updateMealType,\r\n} from \"../../../services/recipes\";\r\n\r\nfunction EditTypeName({\r\n  editCategoryNameModalVisible,\r\n  setEditCategoryModelVisible,\r\n  selectedForUpdate,\r\n  fethData,\r\n  titleName,\r\n}) {\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  React.useEffect(() => {\r\n    if (selectedForUpdate) {\r\n      setNewCategoryName(selectedForUpdate.name);\r\n    }\r\n  }, [selectedForUpdate]);\r\n\r\n  const updateItem = async () => {\r\n    if (newCategoryName.length > 0) {\r\n      if (titleName === \"Update Meal Type\") {\r\n        await updateMealType(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      if (titleName === \"Update Food Type\") {\r\n        await updateFoodType(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      if (titleName === \"Update Diet Type\") {\r\n        await updateDiet(newCategoryName, selectedForUpdate._id);\r\n      }\r\n\r\n      if (titleName === \"Update Ingredient\") {\r\n        await updateIngredient(newCategoryName, selectedForUpdate._id);\r\n      }\r\n      setEditCategoryModelVisible(false);\r\n      fethData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onCancel={() => setEditCategoryModelVisible(false)}\r\n      footer={false}\r\n      visible={editCategoryNameModalVisible}\r\n    >\r\n      <p className=\"font-paragraph-white\">{titleName}</p>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Input\r\n          value={newCategoryName}\r\n          onChange={(e) => setNewCategoryName(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={updateItem}\r\n          style={{\r\n            backgroundColor: \"var(--color-orange)\",\r\n            borderColor: \"var(--color-orange)\",\r\n            marginLeft: \"5px\",\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditTypeName;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Challenges.js",["597","598"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteNextModal.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\i18next.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Pricing.js",["599","600"],"import React, { useState } from \"react\";\r\nimport \"../assets/home.css\";\r\nimport \"../assets/trainers.css\";\r\nimport \"../assets/pricing.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\n// import { Link } from \"react-router-dom\";\r\n// import {\r\n//   ArrowRightOutlined,\r\n//   CheckOutlined,\r\n//   EuroOutlined,\r\n//   DoubleRightOutlined,\r\n//   PlayCircleOutlined,\r\n// } from \"@ant-design/icons\";\r\n// import ModalVideo from \"react-modal-video\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport NewWelcome from \"./NewWelcome\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nfunction Pricing() {\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n  const [t] = useTranslation();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <NewWelcome onPricingPage={true} />\r\n      {/* video modal */}\r\n      {/* <ModalVideo\r\n        channel=\"youtube\"\r\n        autoplay\r\n        isOpen={isOpen}\r\n        videoId=\"https://youtu.be/HMApf8yWUtg\"\r\n        onClose={() => setIsOpen(false)}\r\n      />\r\n      <div className=\"pricing-row-1\">\r\n        <h1 className=\"font-heading-white\">{t(\"pricing.great\")}</h1>\r\n        <h2 className=\"font-subheading-white\">{t(\"pricing.p\")}</h2>\r\n        <div className=\"pricing-row-1-cards-containers\"> */}\r\n      {/* card 1 */}\r\n      {/* <div className=\"two-cards\">\r\n            <div className=\"pricing-row-1-card\">\r\n              <h1 className=\"font-subheading-black\"> {t(\"pricing.c3\")}</h1>\r\n              <div className=\"home-row-2-col-2-box\">\r\n                <CheckOutlined\r\n                  style={{\r\n                    color: \"#ff7700\",\r\n                    fontSize: \"2.5rem\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                />\r\n                <span className=\"home-text font-paragraph-black\">\r\n                  {t(\"pricing.c3_months\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"home-row-2-col-2-box\">\r\n                <CheckOutlined\r\n                  style={{\r\n                    color: \"#ff7700\",\r\n                    fontSize: \"2.5rem\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                />\r\n                <span className=\"home-text font-paragraph-black\">\r\n                  {t(\"pricing.save\")} 20%\r\n                </span>\r\n              </div>\r\n              <div className=\"pricing-card-price \">\r\n                <h1 className=\"font-heading-black\">€6 / {t(\"pricing.week\")}</h1>\r\n                <p className=\"font-subheading-black\">\r\n                  {t(\"pricing.c3_billed\")}\r\n                </p>\r\n              </div>\r\n            </div> */}\r\n      {/* card 2 */}\r\n      {/* <div className=\"pricing-row-1-card most-popular-card\">\r\n              <div className=\"most-popular-tag\">{t(\"pricing.most\")}</div>\r\n              <h1 className=\"font-subheading-black\">{t(\"pricing.c12\")}</h1>\r\n              <div className=\"home-row-2-col-2-box\">\r\n                <CheckOutlined\r\n                  style={{\r\n                    color: \"#ff7700\",\r\n                    fontSize: \"2.5rem\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                />\r\n                <span className=\"home-text font-paragraph-black\">\r\n                  {t(\"pricing.c12_months\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"home-row-2-col-2-box\">\r\n                <CheckOutlined\r\n                  style={{\r\n                    color: \"#ff7700\",\r\n                    fontSize: \"2.5rem\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                />\r\n                <span className=\"home-text font-paragraph-black\">\r\n                  {t(\"pricing.save\")} 40%\r\n                </span>\r\n              </div>\r\n              <div className=\"pricing-card-price\">\r\n                <h1 className=\"font-heading-black\">\r\n                  €4.5 / {t(\"pricing.week\")}\r\n                </h1>\r\n                <p className=\"font-subheading-black\">\r\n                  {t(\"pricing.c12_billed\")}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n      {/* card 3 */}\r\n      {/* <div className=\"pricing-row-1-card\">\r\n            <h1 className=\"font-subheading-black\">{t(\"pricing.c1\")}</h1>\r\n            <div className=\"home-row-2-col-2-box\">\r\n              <CheckOutlined\r\n                style={{\r\n                  color: \"#ff7700\",\r\n                  fontSize: \"2.5rem\",\r\n                  paddingRight: \"0.5rem\",\r\n                }}\r\n              />\r\n              <span className=\"home-text font-paragraph-black\">\r\n                {t(\"pricing.c1_months\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"pricing-card-price\">\r\n              <h1 className=\"font-heading-black\">€7.5 / {t(\"pricing.week\")}</h1>\r\n              <p className=\"font-subheading-black\">{t(\"pricing.c1_billed\")}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"money-back-guarantee font-paragraph-white\">\r\n          <EuroOutlined /> {t(\"pricing.money_back\")}\r\n        </div>\r\n        <div style={{ marginTop: \"50px\" }}>\r\n          {localStorage.getItem(\"jwtToken\") ? (\r\n            <Link className=\"home-button\" to=\"/choose-plan\">\r\n              <span className=\"home-button-text font-paragraph-white\">\r\n                Choose Plan <ArrowRightOutlined />\r\n              </span>\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"home-button\" to=\"/new\">\r\n              <span className=\"home-button-text font-paragraph-white\">\r\n                {t(\"pricing.start_now\")} <ArrowRightOutlined />\r\n              </span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div> */}\r\n      {/* row 3 */}\r\n      {/* <div className=\"pricing-row-3-container\">\r\n        <div className=\"pricing-row-3\">\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.free\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.free_week\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.keep_track\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.choose\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.adapts\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.for_starters\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.motivating\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.choose_right\")}\r\n          </div>\r\n          <div className=\"pricing-row-3-box font-paragraph-white\">\r\n            <DoubleRightOutlined\r\n              style={{ fontSize: \"2.5rem\", color: \"#ff7700\" }}\r\n            />{\" \"}\r\n            {t(\"pricing.earn_points\")}\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* row 3 ends */}\r\n      {/* 6th row */}\r\n      {/* <div className=\"home-row-6\">\r\n        <h1 className=\"home-row-6-heading font-heading-black\">\r\n          {t(\"pricing.get_motivated\")}\r\n        </h1>\r\n        <p style={{ fontSize: \"18px\" }} className=\"font-paragraph-black\">\r\n          {t(\"pricing.start_today_with\")}\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"home-row-6-video-container-box pricing-video-box\"\r\n            onClick={() => {\r\n              setIsOpen(true);\r\n            }}\r\n          >\r\n            <div className=\"pricing-video-box-overlay\"></div>\r\n            <div\r\n              className=\"home-row-6-text font-paragraph-white\"\r\n              style={{ textAlign: \"left\" }}\r\n            >\r\n              <PlayCircleOutlined className=\"play-icon\" /> Waarom werkt Real\r\n              Challenge zo goed voor Remko?\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* 6th row */}\r\n      {/* 7th row */}\r\n      {/* <div className=\"home-row-7 pricing-background\">\r\n        <div className=\"home-row-7-container\">\r\n          <div className=\"home-row-7-container-text\">\r\n            <h2 style={{ fontSize: \"2rem\" }} className=\"font-subheading-black\">\r\n              {t(\"pricing.start_today\")}\r\n            </h2>\r\n            <h1 style={{ fontSize: \"4.5rem\" }} className=\"font-heading-black\">\r\n              {t(\"pricing.your_set\")}\r\n            </h1>\r\n            <p\r\n              style={{ fontSize: \"1.8rem\", paddingBottom: \"10px\" }}\r\n              className=\"font-paragraph-black\"\r\n            >\r\n              {t(\"pricing.where_and_whenever_you\")}\r\n            </p>\r\n            <Link className=\"home-button\" to=\"/new\">\r\n              <span className=\"home-button-text font-paragraph-white\">\r\n                {t(\"pricing.set_your_goal\")}\r\n                <ArrowRightOutlined />\r\n              </span>\r\n            </Link>\r\n            <p style={{ paddingTop: \"10px\" }} className=\"font-paragraph-black\">\r\n              {t(\"pricing.less_than\")}{\" \"}\r\n              <Link to=\"/all-challenges\" style={{ color: \"#ff7700\" }}>\r\n                {t(\"pricing.see_all\")}\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* 7th row */}\r\n      {/* <div className=\"pricing-faqs\">\r\n        <h1 className=\"pricing-faqs-heading font-subheading-white\">FAQS</h1>\r\n        <div className=\"pricing-faqs-container\">\r\n          <div className=\"pricing-faqs-box\">\r\n            <h1 className=\"font-paragraph-white\">\r\n              Excepteur sint occaecat cupidatat non proident\r\n            </h1>\r\n            <p className=\"font-paragraph-white\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur.\r\n            </p>\r\n          </div>\r\n          <div className=\"pricing-faqs-box\">\r\n            <h1 className=\"font-paragraph-white\">\r\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n            </h1>\r\n            <p className=\"font-paragraph-white\">\r\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </p>\r\n          </div>\r\n          <div className=\"pricing-faqs-box\">\r\n            <h1 className=\"font-paragraph-white\">\r\n              Duis aute irure dolor in reprehenderit\r\n            </h1>\r\n            <p className=\"font-paragraph-white\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur.\r\n            </p>\r\n          </div>\r\n          <div className=\"pricing-faqs-box\">\r\n            <h1 className=\"font-paragraph-white\">\r\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            </h1>\r\n            <p className=\"font-paragraph-white\">\r\n              Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n              cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n              cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n              anim id est laborum.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      9th row */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pricing;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\MagazineArticle.js",["601"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../assets/magazineArticle.css\";\r\nimport \"../assets/trainerprofile.css\";\r\nimport \"../assets/home.css\";\r\nimport \"../assets/challengeProfile.css\";\r\nimport \"../assets/recipeProfile.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Avatar } from \"antd\";\r\nimport { UserOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getBlogById } from \"../services/blogs\";\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  PinterestShareButton,\r\n  TwitterShareButton,\r\n  PinterestIcon,\r\n  TwitterIcon,\r\n  LinkedinIcon,\r\n  FacebookIcon,\r\n} from \"react-share\";\r\nimport slug from \"elegant-slug\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nfunction MagazineArticle(props) {\r\n  const [t] = useTranslation();\r\n  const [blogInfo, setBlogInfo] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchInfo();\r\n  }, []);\r\n\r\n  const fetchInfo = async () => {\r\n    setLoading(true);\r\n    const id = props.match.params.id;\r\n    const res = await getBlogById(id);\r\n    if (res) {\r\n      const d = res.data.blog;\r\n      setBlogInfo(d);\r\n    }\r\n    console.log(\"res\", res);\r\n    setLoading(false);\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  const [article, setArticle] = useState({\r\n    writerInfo: {\r\n      name: \"Filip\",\r\n      facebookLink: \"www.facebook.com\",\r\n      twitter: \"www.twitter.com\",\r\n      linkedin: \"www.linkedin.com\",\r\n      pinterest: \"\",\r\n    },\r\n    coverPhoto:\r\n      \"https://realchallenge.fit/wp-content/uploads/2018/12/karl-s-1060222-unsplash-1024x681.jpg\",\r\n    writeAvatar: \"\",\r\n    articleName: \"Four Mistakes People Make when Choosing a Trainer\",\r\n    articleSubheading:\r\n      \"A training method to enhance neuromuscular efficiency and improve maximum strength.\",\r\n    articleCategory: \"TRAINING\",\r\n    articleDate: new Date(),\r\n    videoLink: \"https://www.youtube.com/watch?v=Pwz4kQrW4g4\",\r\n    articleText:\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque id metus vel est pulvinar suscipit in id ligula. Phasellus porta urna eu risus pulvinar sodales. Morbi finibus mauris dolor, sed pulvinar leo gravida nec. Phasellus a sodales nisi. Vivamus vehicula euismod porta. Curabitur id diam fermentum, placerat massa vitae, consequat diam. Proin dapibus at sem at mollis. Praesent malesuada neque vitae tincidunt laoreet. Duis quis accumsan magna. Aenean diam nisl, pellentesque ut est vitae, suscipit varius velit. Sed consectetur dolor et neque accumsan fringilla.Integer id odio a ligula imperdiet facilisis sit amet id nisi. Ut laoreet, libero sit amet rhoncus accumsan, quam nisl sollicitudin metus, ac tristique odio lacus eu nulla. Curabitur ac vehicula erat. Morbi metus neque, auctor rutrum erat nec, ultrices tristique dui. Nulla sit amet erat vitae nulla mattis tincidunt. Cras quis pharetra dui, eu convallis eros. Cras eu viverra justo, at molestie felis. Aliquam erat volutpat. Sed tellus nunc, tempus vel est non, ultricies efficitur erat. Duis turpis lacus, tristique et tellus sed, interdum gravida leo. Sed maximus ante nibh, id hendrerit ligula ornare id. Quisque tincidunt enim magna, quis condimentum arcu cursus nec. Suspendisse eu diam nec augue efficitur tincidunt id quis lectus. Maecenas vestibulum magna sed mi porta, ut mollis neque dictum. Duis molestie, lacus eget consequat scelerisque, mauris leo feugiat ligula, eu mollis velit lorem ac est. Duis venenatis sagittis magna, vitae volutpat risus eleifend eget. In quam elit, ullamcorper eget quam quis, tincidunt fermentum ante. Donec nec augue tortor. Quisque sodales viverra orci sed bibendum. Mauris interdum ante eget odio scelerisque pharetra. Duis arcu purus, ullamcorper vitae risus eget, viverra facilisis orci. Praesent non auctor dolor, in porttitor eros. Pellentesque tempus justo tellus, in laoreet nisi faucibus eu. Ut sit amet commodo elit. Quisque bibendum porta dui, vitae suscipit magna rhoncus mattis. Integer ultrices sollicitudin varius. Vivamus a interdum libero.\",\r\n    comments: [\r\n      {\r\n        id: 13123,\r\n        username: \"Ammarms\",\r\n        comment: \"Amazing work\",\r\n        date: new Date(),\r\n      },\r\n      {\r\n        id: 13123,\r\n        username: \"don\",\r\n        comment:\r\n          \"Quisque sodales viverra orci sed bibendum. Mauris interdum ante eget odio scelerisque pharetra. Duis arcu purus, ullamcorper vitae risus eget, viverra facilisis orci. Praesent non auctor dolor, in porttitor eros\",\r\n        date: new Date(),\r\n      },\r\n    ],\r\n  });\r\n  return loading ? (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <LoadingOutlined\r\n        style={{\r\n          color: \"#ff7700\",\r\n          fontSize: \"65px\",\r\n        }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Helmet>\r\n        <title>{`Realchallenge: ${blogInfo.title}`}</title>\r\n        <meta name=\"description\" content={blogInfo.paragraph} />\r\n        <meta property=\"og:title\" content={blogInfo.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:description\" content={blogInfo.paragraph} />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`http://localhost:3001/magazine/${slug(blogInfo.title)}/${\r\n            blogInfo._id\r\n          }`}\r\n        />\r\n        <meta name=\"author\" content=\"Realchallenge\" />\r\n      </Helmet>\r\n      <Navbar />\r\n      {console.log(\r\n        `${process.env.REACT_APP_SERVER}/api${\r\n          blogInfo ? blogInfo.featuredImage : \"\"\r\n        }`\r\n      )}\r\n      <div\r\n        className=\"magazine-article-head\"\r\n        style={{\r\n          background: `url(${process.env.REACT_APP_SERVER}/api${\r\n            blogInfo ? blogInfo.featuredImage : \"\"\r\n          }) no-repeat center center / cover`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      ></div>\r\n      <div className=\"article-container\">\r\n        <div className=\"article-container-column1\">\r\n          <div className=\"article-container-column1-row1 font-paragraph-black\">\r\n            <Avatar\r\n              shape=\"square\"\r\n              size=\"large\"\r\n              icon={<UserOutlined />}\r\n              src={`${process.env.REACT_APP_SERVER}/api${\r\n                blogInfo && blogInfo.user ? blogInfo.user.avatarLink : \"\"\r\n              }`}\r\n            />{\" \"}\r\n            {blogInfo && blogInfo.user ? blogInfo.user.username : \"\"}\r\n          </div>\r\n          <div\r\n            className=\"article-container-column1-row1 font-paragraph-black\"\r\n            style={{ color: \"var(--color-orange)\", padding: \"15px 0\" }}\r\n          >\r\n            {t(\"magazine.share\")}\r\n\r\n            <div>\r\n              <FacebookShareButton\r\n                url={window.location.href}\r\n                quote=\"Hi. Please checkout this amazing article I found at realchallenge.fit\"\r\n              >\r\n                <FacebookIcon\r\n                  size={32}\r\n                  round={true}\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </FacebookShareButton>\r\n              <LinkedinShareButton\r\n                url={window.location.href}\r\n                title=\"Awesome article at Realchallenge.fit\"\r\n                summary=\"Hi. Please checkout this amazing article I found at realchallenge.fit\"\r\n              >\r\n                <LinkedinIcon\r\n                  size={32}\r\n                  round={true}\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </LinkedinShareButton>\r\n              <TwitterShareButton\r\n                url={window.location.href}\r\n                title=\"Check out this amazing article I found at Realchallenge.fit\"\r\n              >\r\n                <TwitterIcon\r\n                  size={32}\r\n                  round={true}\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </TwitterShareButton>\r\n              <PinterestShareButton\r\n                url={window.location.href}\r\n                media={`${process.env.REACT_APP_SERVER}/api${blogInfo.featuredImage}`}\r\n                description=\"Hi. Please checkout this amazing article I found at realchallenge.fit\"\r\n              >\r\n                <PinterestIcon\r\n                  size={32}\r\n                  round={true}\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </PinterestShareButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"article-container-column2\">\r\n          <h1 className=\"article-container-column2-heading font-heading-black\">\r\n            {blogInfo.title}\r\n          </h1>\r\n          <div>\r\n            <span\r\n              style={{\r\n                color: \"var(--color-orange)\",\r\n                marginRight: \"20px\",\r\n                fontSize: \"1.6rem\",\r\n              }}\r\n            >\r\n              {blogInfo && blogInfo.category ? blogInfo.category.name : \"\"}\r\n            </span>\r\n            <span style={{ fontSize: \"1.6rem\" }}>\r\n              {moment(article.articleDate).format(\"LL\")}\r\n            </span>\r\n            {/* {console.log(article.articleDate)} */}\r\n          </div>\r\n          {/* <h1 className=\"font-subheading-black\">{article.articleSubheading}</h1> */}\r\n          <a href={blogInfo.videoLink} style={{ color: \"var(--color-orange)\" }}>\r\n            Video Link To This Article\r\n          </a>\r\n          <p className=\"font-paragraph-black\" style={{ fontSize: \"1.8rem\" }}>\r\n            {ReactHtmlParser(blogInfo?.paragraph)}\r\n          </p>\r\n          <div\r\n            className=\"recipe-mealValues-heading font-paragraph-white\"\r\n            style={{ fontSize: \"1.8rem\", padding: \"10px 0\" }}\r\n          >\r\n            {t(\"magazine.comments\")}\r\n          </div>\r\n          <div\r\n            className=\"trainer-profile-goals-container\"\r\n            style={{ backgroundColor: \"#e1e9f2\" }}\r\n          >\r\n            {article.comments.map((comment) => (\r\n              <div\r\n                className=\"challenge-profile-comment font-paragraph-white\"\r\n                style={{ backgroundColor: \"transparent\" }}\r\n              >\r\n                <span\r\n                  className=\"challenge-profile-comment-username\"\r\n                  style={{ paddingBottom: \"0\" }}\r\n                >\r\n                  <UserOutlined /> {comment.username}\r\n                </span>\r\n                <span\r\n                  className=\"font-paragraph-black\"\r\n                  style={{ fontSize: \"1.4rem\" }}\r\n                >\r\n                  {moment(comment.date).format(\"DD/MM/YYYY\")}\r\n                </span>\r\n                <span style={{ color: \"black\" }}>{comment.comment}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MagazineArticle);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ResetNewPassword.js",["602","603"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\UpdateChallenge.js",["604","605","606","607","608","609","610"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tabs, Modal, Button, Form } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport NewChallengeMainTab from \"./NewChallengeMainTab\";\r\nimport NewChallengeWorkoutTab from \"./NewChallengeWorkoutTab\";\r\nimport NewChallengeMusicTab from \"./NewChallengeMusicTab\";\r\nimport NewChallengeAdditionalTab from \"./NewChallengeAdditionalTab\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { v4 } from \"uuid\";\r\n\r\n// services\r\nimport { getAllChallengeGoals } from \"../../../services/createChallenge/goals\";\r\nimport { getAllChallengeTags } from \"../../../services/createChallenge/tags\";\r\nimport { getAllChallengeEquipments } from \"../../../services/createChallenge/equipments\";\r\nimport { getAllBodyFocus } from \"../../../services/createChallenge/bodyFocus\";\r\nimport { getAllTrainers } from \"../../../services/trainers\";\r\nimport { getAllChallengeProducts } from \"../../../services/createChallenge/products\";\r\nimport {\r\n  createChallenge,\r\n  updateChallenge,\r\n} from \"../../../services/createChallenge/main\";\r\nimport setAuthToken from \"../../../helpers/setAuthToken\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\nimport { createPost } from \"../../../services/posts\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nfunction UpdateChallenge({ selectedChallengeForUpdate, setCurrentSelection }) {\r\n  const [t] = useTranslation();\r\n  const [form] = Form.useForm();\r\n  // state of main tab strats\r\n  const [name, setName] = useState(\"\");\r\n  const [access, setAccess] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [currency, setCurrency] = useState(\"$\");\r\n  const [thumbnail, setThumbnail] = useState(\"\");\r\n  const [videoThumbnail, setVideoThumbnail] = useState(\"\");\r\n  const [videoTrailer, setVideoTrailer] = useState(\"\");\r\n  const [trainers, setTrainers] = useState([]);\r\n  const [allTrainers, setAllTrainers] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [goals, setGoals] = useState([]);\r\n  const [bodyFocus, setBodyFocus] = useState([]);\r\n  const [equipments, setEquipments] = useState([]);\r\n  const [duration, setDuration] = useState(\"\");\r\n  // we get all goals from backend\r\n  const [allGoals, setAllGoals] = useState([]);\r\n  const [newGoalName, setNewGoalName] = useState(\"\");\r\n  const [showGoalModal, setShowGoalModal] = useState(false);\r\n  // we get all bodyfocus from backend\r\n  const [allBodyfocus, setAllBodyfocus] = useState([]);\r\n  const [newBodyfocusName, setNewBodyfocusName] = useState(\"\");\r\n  const [showBodyfocusModal, setShowBodyfocusModal] = useState(false);\r\n  // we get all equipments from backend\r\n  const [allEquipments, setAllEquipments] = useState([]);\r\n  const [newEquipmentName, setNewEquipmentName] = useState(\"\");\r\n  const [equipmentModal, setEquipmentModal] = useState(false);\r\n  const [newDurationName, setNewDurationName] = useState(\"\");\r\n  const [showDurationModal, setShowDurationModal] = useState(false);\r\n  // we get all tags from backend\r\n  const [tags, setTags] = useState([]);\r\n  const [allTags, setAllTags] = useState([]);\r\n  const [newTagName, setNewTagName] = useState(\"\");\r\n  const [showTagModal, setShowTagModal] = useState(false);\r\n\r\n    //fitness interest\r\n    const [selectedFitnessInterest, setSelectedFitnessInterest] = useState(\"\");\r\n\r\n  // state of main tab ends\r\n\r\n  // state pf the new challenge tab starts\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [addWorkoutModalVisible, setAddWorkoutModalVisible] = useState(false);\r\n  const [workoutModalFullscreen, setWorkoutModalFullscreen] = useState(false);\r\n  const [allProducts, setAllProducts] = useState([\r\n    { id: 1, name: \"Carpet\" },\r\n    { id: 2, name: \"Mat\" },\r\n    { id: 3, name: \"Dumbell\" },\r\n  ]);\r\n  const [products, setProducts] = useState([]);\r\n  //   this is for new workout creation process\r\n  const [workoutToUpdate, setWorkoutToUpdate] = useState(\"\");\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [currentWeek, setCurrentWeek] = useState(\"\");\r\n  const [workoutTitle, setWorkoutTile] = useState(\"\");\r\n  const [workoutSubtitle, setWorkoutSubtile] = useState(\"\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [infoTitle, setInfoTile] = useState(\"\");\r\n  const [infoFile, setInfoFile] = useState(\"\");\r\n  // const [points, setPoints] = useState(0);\r\n  const [workoutIntroVideoFile, setWorkoutIntroVideoFile] = useState(\"\");\r\n  const [workoutIntroVideoLength, setWorkoutIntroVideoLength] = useState(\"\");\r\n  const [relatedEquipments, setRelatedEquipments] = useState([]);\r\n  const [renderWorkout, setRenderWorkout] = useState(false);\r\n  const [workoutIdsThatNeedToBeUpdated, setWorkoutIdsThatNeedToBeUpdated] =\r\n    useState([]);\r\n  // this is a rendered workout exercise it wonly takes in full video of the exercise\r\n  const [renderedWorkoutExercises, setRenderWorkoutExercises] = useState([\r\n    {\r\n      exerciseId: v4(),\r\n      exerciseName: \"\",\r\n      exerciseVideo: \"\",\r\n    },\r\n  ]);\r\n  // this is a non-rendered workout exercise it will take multiple videos and voiceeover\r\n  const [nonRenderedWorkoutExercises, setNonRenderedWorkoutExercises] =\r\n    useState([\r\n      {\r\n        exerciseId: v4(),\r\n        exerciseName: \"\",\r\n        exerciseVideo: \"\",\r\n        videoLength: \"\",\r\n        voiceOverFile: \"\",\r\n        breakAfterExercise: \"\",\r\n        exerciseGroupName: \"\",\r\n      },\r\n    ]);\r\n  const [musics, setMusics] = useState([]);\r\n  // state of the new cha;llenge ends\r\n\r\n  // state for additional inform\r\n  const [results, setResults] = useState(\"\");\r\n  // const [info, setInfo] = useState(\"\");\r\n  const [makePublic, setMakePublic] = useState(false);\r\n  const [allowComments, setAllowComments] = useState(false);\r\n  const [allowReviews, setAllowReviews] = useState(false);\r\n  const [additionalProducts, setAdditionalProducts] = useState([]);\r\n  const [informationList, setInformationList] = useState([]);\r\n  const [relatedProducts, setRelatedProducts] = useState([]);\r\n  // --------------------\r\n  const [createPostModalVisible, setCreatePostModalVisible] = useState(false);\r\n  const [weeksToBeUpdated, setWeeksToBeUpdated] = useState([]);\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.getItem(\"jwtToken\"));\r\n    addStuffToMainTabForm();\r\n    fethData();\r\n  }, []);\r\n\r\n  const addStuffToMainTabForm = () => {\r\n    console.log(\"selected challenge\", selectedChallengeForUpdate);\r\n    const {\r\n      challengeName,\r\n      description,\r\n      price,\r\n      points,\r\n      currency,\r\n      thumbnailLink,\r\n      videoThumbnailLink,\r\n      videoLink,\r\n      trainers,\r\n      access,\r\n      difficulty,\r\n      challengeGoals,\r\n      tags,\r\n      body,\r\n      duration,\r\n      music,\r\n      additionalProducts,\r\n      results,\r\n      allowComments,\r\n      allowReviews,\r\n      isPublic,\r\n      informationList,\r\n      weeks,\r\n      trainersFitnessInterest,\r\n    } = selectedChallengeForUpdate;\r\n\r\n    console.log(selectedChallengeForUpdate);\r\n    // return;\r\n    setName(challengeName);\r\n    setAccess(access);\r\n    setPrice(price);\r\n    setPoints(points);\r\n    setCurrency(currency);\r\n    setThumbnail({ name: thumbnailLink, link: thumbnailLink });\r\n    setVideoThumbnail({ name: videoThumbnailLink, link: videoThumbnailLink });\r\n    setVideoTrailer({ name: videoLink, link: videoLink });\r\n    setTrainers(trainers.map((t) => t._id));\r\n    setDescription(description);\r\n    setDifficulty(difficulty);\r\n    setSelectedFitnessInterest(trainersFitnessInterest ? trainersFitnessInterest : \"\")\r\n    setGoals(challengeGoals.map((t) => t._id));\r\n    setBodyFocus(body.map((t) => t._id));\r\n    setDuration(duration);\r\n    setTags(tags.map((t) => t._id));\r\n    setMusics(\r\n      music\r\n        ? music.map((m) => ({\r\n            _id: m._id,\r\n            musicId: m._id,\r\n            file: { name: m.url, link: m.url },\r\n            name: m.name,\r\n          }))\r\n        : []\r\n    );\r\n    setAdditionalProducts(additionalProducts.map((t) => t._id));\r\n    setResults(results);\r\n    setAllowComments(allowComments);\r\n    setAllowReviews(allowReviews);\r\n    setMakePublic(isPublic);\r\n    setInformationList(\r\n      informationList.map((j) => ({\r\n        _id: j._id,\r\n        id: j._id,\r\n        text: j.info,\r\n        file: { link: j.icon },\r\n      }))\r\n    );\r\n    setWeeksToBeUpdated(weeks);\r\n    // setWeeks(weeks);\r\n    const w = weeks.map((week) => ({\r\n      _id: week._id,\r\n      id: week._id,\r\n      weekId: week._id,\r\n      weekTitle: week.weekName ? week.weekName : \"\",\r\n      weekSubtitle: week.weekSubtitle ? week.weekSubtitle : \"\",\r\n      workouts: week.workouts.map((workout) => ({\r\n        _id: workout._id,\r\n        workoutId: workout._id,\r\n        workoutTitle: workout.title ? workout.title : \"\",\r\n        workoutSubtitle: workout.subtitle ? workout.subtitle : \"\",\r\n        renderWorkout: workout.isRendered ? workout.isRendered : false,\r\n        workoutIntroVideoFile: workout.introVideoLink\r\n          ? {\r\n              name: workout.introVideoLink,\r\n              link: workout.introVideoLink,\r\n            }\r\n          : { name: \"\", link: \"\" },\r\n          workoutIntroVideoLength: workout.introVideoLength\r\n          ? workout.introVideoLength\r\n          : \"\",\r\n        relatedProducts: workout.relatedProducts\r\n          ? workout.relatedProducts.map((t) => t._id)\r\n          : \"\",\r\n        relatedEquipments: workout.relatedEquipments\r\n          ? workout.relatedEquipments.map((t) => t._id)\r\n          : \"\",\r\n        infoTitle: workout.infoTitle ? workout.infoTitle : \"\",\r\n        infoFile: workout.infoFile\r\n          ? { name: workout.infoFile, link: workout.infoFile }\r\n          : \"\",\r\n        groupName: workout.groupName ? workout.groupName : \"\",\r\n        exercises: workout.isRendered\r\n          ? workout.exercises.map((e) => ({\r\n              _id: e._id,\r\n              exerciseId: e.exerciseId._id,\r\n              exerciseName: e.exerciseId.title ? e.exerciseId.title : \"\",\r\n              exerciseVideo: e.exerciseId.videoURL,\r\n              voiceOverFile: e.exerciseId.voiceOverLink,\r\n              videoLength: e.exerciseLength ? e.exerciseLength : \"\",\r\n              exerciseGroupName: e.groupName ? e.groupName : \"\",\r\n              breakAfterExercise: e.break ? e.break : \"\",\r\n            }))\r\n          : workout.exercises.map((e) => ({\r\n              exerciseName: e.renderedWorkoutExerciseName,\r\n              exerciseVideo: e.renderedWorkoutExerciseVideo,\r\n            })),\r\n      })),\r\n    }));\r\n    setWeeks(w);\r\n\r\n    form.setFieldsValue({\r\n      challengeName,\r\n      description,\r\n      price,\r\n      points,\r\n      currency: currency,\r\n      access: access,\r\n      duration,\r\n      goals: challengeGoals,\r\n    });\r\n  };\r\n  async function fethData() {\r\n    const bodyFocus = await getAllBodyFocus();\r\n    const goals = await getAllChallengeGoals();\r\n    const tags = await getAllChallengeTags();\r\n    const equipments = await getAllChallengeEquipments();\r\n    const trainers = await getAllTrainers();\r\n    const products = await getAllChallengeProducts();\r\n\r\n    setAllBodyfocus(bodyFocus.body);\r\n    setAllEquipments(equipments.equipments);\r\n    setAllGoals(goals.challengeGoals);\r\n    setAllTags(tags.tags);\r\n    // console.log(\"trainers\", trainers);\r\n    setAllTrainers(trainers.trainers);\r\n    setAllProducts(products.products);\r\n  }\r\n\r\n  // const updateWorkouts = (weeks) => {\r\n  //   weeks.map((week) => {\r\n  //     week.workout.map(async (workout) => {\r\n  //       await updateWorkout(workout, workout._id);\r\n  //     });\r\n  //   });\r\n  // };\r\n  const parseWeeksForBackend = (weeks) => {\r\n    const w = weeks.map((week) => {\r\n      let g = {\r\n        ...week,\r\n        weekName: week.weekTitle,\r\n        weekSubtitle: week.weekSubtitle,\r\n        workouts: week.workouts\r\n          .map((wo) => wo._id)\r\n          .filter(function (el) {\r\n            return el !== undefined && el !== null;\r\n          }),\r\n      };\r\n      workoutIdsThatNeedToBeUpdated\r\n        .map((woId) => {\r\n          if (g._id === woId.weelId || g.weekId === woId.weelId) {\r\n            g.workouts = [...g.workouts, woId.workout];\r\n          }\r\n        })\r\n        .filter(function (el) {\r\n          return el !== undefined && el !== null;\r\n        });\r\n      console.log(g);\r\n      return g;\r\n    });\r\n\r\n    console.log(w);\r\n    return w;\r\n  };\r\n  const updateChallengeButton = async () => {\r\n    const obj = {\r\n      challengeName: name,\r\n      description: description,\r\n      price: price,\r\n      points: points,\r\n      currency: currency,\r\n      thumbnailLink: typeof thumbnail === \"object\" ? thumbnail.link : \"\",\r\n      videoThumbnailLink:\r\n        typeof videoThumbnail === \"object\" ? videoThumbnail.link : \"\",\r\n      trainers: trainers,\r\n      challengeGoals: goals,\r\n      trainersFitnessInterest: selectedFitnessInterest,\r\n      tags: tags,\r\n      body: bodyFocus,\r\n      access: access,\r\n      duration: duration,\r\n      difficulty: difficulty,\r\n      videoTrailer: typeof videoTrailer === \"object\" ? videoTrailer.link : \"\",\r\n      weeks: parseWeeksForBackend(weeks),\r\n      music: musics.map((m) => ({\r\n        ...m,\r\n        name: m.name,\r\n        url: typeof m.file === \"object\" ? m.file.link : m.file,\r\n      })),\r\n      additionalProducts: additionalProducts,\r\n      results: results,\r\n      informationList: informationList\r\n        ? informationList.map((i) => ({\r\n            ...i,\r\n            info: i.text,\r\n            icon: i.file ? i.file.link : \"\",\r\n          }))\r\n        : [],\r\n      allowComments,\r\n      allowReviews,\r\n      isPublic: makePublic,\r\n    };\r\n    console.log(obj, selectedChallengeForUpdate._id);\r\n    // return;\r\n    const res = await updateChallenge(obj, selectedChallengeForUpdate._id);\r\n    console.log(\"response\", res);\r\n    console.log(\"weeks\", workoutIdsThatNeedToBeUpdated);\r\n    // updateWorkouts(obj.weeks);\r\n    // if (res) {\r\n    //   setCreatePostModalVisible(true);\r\n    // }\r\n    console.log(obj);\r\n  };\r\n\r\n  const createAPost = async () => {\r\n    const values = {\r\n      title: name,\r\n      text: description,\r\n      image: typeof thumbnail === \"object\" ? thumbnail.link : \"\",\r\n      type: \"Challenge\",\r\n    };\r\n    await createPost(values);\r\n    setCreatePostModalVisible(false);\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ask user to if they want to post challenge */}\r\n      <Modal\r\n        onCancel={() => setCreatePostModalVisible(false)}\r\n        visible={createPostModalVisible}\r\n        footer={false}\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <h1 className=\"font-heading-white\">\r\n          Create a post about your challenge?\r\n        </h1>\r\n        <Button\r\n          className=\"common-orange-button font-paragraph-white\"\r\n          onClick={() => createAPost()}\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Create a Post\r\n        </Button>\r\n      </Modal>\r\n      <h2 className=\"font-heading-black\">\r\n        <ArrowLeftOutlined\r\n          onClick={() => setCurrentSelection(6.1)}\r\n          style={{ fontSize: \"30px\", cursor: \"pointer\", marginRight: \"10px\" }}\r\n        />\r\n        Update Challenge\r\n        <Button\r\n          className=\"font-paragraph-white\"\r\n          style={{\r\n            backgroundColor: \"var(--color-orange)\",\r\n            border: \"none\",\r\n            marginTop: \"10px\",\r\n            marginRight: \"30px\",\r\n            float: \"right\",\r\n          }}\r\n          onClick={updateChallengeButton}\r\n        >\r\n          Update Challenge\r\n        </Button>\r\n      </h2>\r\n\r\n      <div className=\"newchallenge-creator-container\">\r\n        <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n          <TabPane tab=\"Main\" key=\"1\">\r\n            <NewChallengeMainTab\r\n              form={form}\r\n              selectedFitnessInterest={selectedFitnessInterest} \r\n              setSelectedFitnessInterest={setSelectedFitnessInterest}\r\n              id={selectedChallengeForUpdate._id}\r\n              name={name}\r\n              setName={setName}\r\n              access={access}\r\n              setAccess={setAccess}\r\n              price={price}\r\n              points={points}\r\n              setPrice={setPrice}\r\n              setPoints={setPoints}\r\n              currency={currency}\r\n              setCurrency={setCurrency}\r\n              thumbnail={thumbnail}\r\n              setThumbnail={setThumbnail}\r\n              videoThumbnail={videoThumbnail}\r\n              setVideoThumbnail={setVideoThumbnail}\r\n              videoTrailer={videoTrailer}\r\n              setVideoTrailer={setVideoTrailer}\r\n              trainers={trainers}\r\n              setTrainers={setTrainers}\r\n              allTrainers={allTrainers}\r\n              setAllTrainers={setAllTrainers}\r\n              description={description}\r\n              setDescription={setDescription}\r\n              difficulty={difficulty}\r\n              setDifficulty={setDifficulty}\r\n              goals={goals}\r\n              setGoals={setGoals}\r\n              bodyFocus={bodyFocus}\r\n              setBodyFocus={setBodyFocus}\r\n              equipments={equipments}\r\n              setEquipments={setEquipments}\r\n              duration={duration}\r\n              setDuration={setDuration}\r\n              allGoals={allGoals}\r\n              setAllGoals={setAllGoals}\r\n              newGoalName={newGoalName}\r\n              setNewGoalName={setNewGoalName}\r\n              showGoalModal={showGoalModal}\r\n              setShowGoalModal={setShowGoalModal}\r\n              allBodyfocus={allBodyfocus}\r\n              setAllBodyfocus={setAllBodyfocus}\r\n              newBodyfocusName={newBodyfocusName}\r\n              setNewBodyfocusName={setNewBodyfocusName}\r\n              showBodyfocusModal={showBodyfocusModal}\r\n              setShowBodyfocusModal={setShowBodyfocusModal}\r\n              allEquipments={allEquipments}\r\n              setAllEquipments={setAllEquipments}\r\n              newEquipmentName={newEquipmentName}\r\n              setNewEquipmentName={setNewEquipmentName}\r\n              equipmentModal={equipmentModal}\r\n              setEquipmentModal={setEquipmentModal}\r\n              newDurationName={newDurationName}\r\n              setNewDurationName={setNewDurationName}\r\n              showDurationModal={showDurationModal}\r\n              setShowDurationModal={setShowDurationModal}\r\n              tags={tags}\r\n              setTags={setTags}\r\n              allTags={allTags}\r\n              setAllTags={setAllTags}\r\n              newTagName={newTagName}\r\n              setNewTagName={setNewTagName}\r\n              showTagModal={showTagModal}\r\n              setShowTagModal={setShowTagModal}\r\n              update={true}\r\n            />\r\n          </TabPane>\r\n          <TabPane tab=\"Workouts\" key=\"2\">\r\n            <NewChallengeWorkoutTab\r\n              weeksToBeUpdated={weeksToBeUpdated}\r\n              update={true}\r\n              weeks={weeks}\r\n              setWeeks={setWeeks}\r\n              addWorkoutModalVisible={addWorkoutModalVisible}\r\n              setAddWorkoutModalVisible={setAddWorkoutModalVisible}\r\n              workoutModalFullscreen={workoutModalFullscreen}\r\n              setWorkoutModalFullscreen={setWorkoutModalFullscreen}\r\n              allProducts={allProducts}\r\n              setAllProducts={setAllProducts}\r\n              setProducts={setProducts}\r\n              allEquipments={allEquipments}\r\n              setAllEquipments={setAllEquipments}\r\n              workoutToUpdate={workoutToUpdate}\r\n              setWorkoutToUpdate={setWorkoutToUpdate}\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              currentWeek={currentWeek}\r\n              setCurrentWeek={setCurrentWeek}\r\n              workoutTitle={workoutTitle}\r\n              setWorkoutTile={setWorkoutTile}\r\n              workoutSubtitle={workoutSubtitle}\r\n              setWorkoutSubtile={setWorkoutSubtile}\r\n              groupName={groupName}\r\n              setGroupName={setGroupName}\r\n              infoTitle={infoTitle}\r\n              setInfoTile={setInfoTile}\r\n              infoFile={infoFile}\r\n              setInfoFile={setInfoFile}\r\n              workoutIntroVideoFile={workoutIntroVideoFile}\r\n              setWorkoutIntroVideoFile={setWorkoutIntroVideoFile}\r\n              workoutIntroVideoLength={workoutIntroVideoLength}\r\n              setWorkoutIntroVideoLength={setWorkoutIntroVideoLength}\r\n              relatedProducts={relatedProducts}\r\n              setRelatedProducts={setRelatedProducts}\r\n              relatedEquipments={relatedEquipments}\r\n              setRelatedEquipments={setRelatedEquipments}\r\n              renderWorkout={renderWorkout}\r\n              setRenderWorkout={setRenderWorkout}\r\n              renderedWorkoutExercises={renderedWorkoutExercises}\r\n              setRenderWorkoutExercises={setRenderWorkoutExercises}\r\n              nonRenderedWorkoutExercises={nonRenderedWorkoutExercises}\r\n              setNonRenderedWorkoutExercises={setNonRenderedWorkoutExercises}\r\n              setWorkoutIdsThatNeedToBeUpdated={\r\n                setWorkoutIdsThatNeedToBeUpdated\r\n              }\r\n              workoutIdsThatNeedToBeUpdated={workoutIdsThatNeedToBeUpdated}\r\n              // updateWorkouts={updateWorkouts}\r\n            />\r\n          </TabPane>\r\n          <TabPane tab=\"Music\" key=\"3\">\r\n            <NewChallengeMusicTab\r\n              musics={musics}\r\n              setMusics={setMusics}\r\n              update={true}\r\n            />\r\n          </TabPane>\r\n          <TabPane tab=\"Additional\" key=\"4\">\r\n            <NewChallengeAdditionalTab\r\n              results={results}\r\n              setResults={setResults}\r\n              allProducts={allProducts}\r\n              setAllProducts={setAllProducts}\r\n              makePublic={makePublic}\r\n              setMakePublic={setMakePublic}\r\n              allowComments={allowComments}\r\n              setAllowComments={setAllowComments}\r\n              allowReviews={allowReviews}\r\n              setAllowReviews={setAllowReviews}\r\n              additionalProducts={additionalProducts}\r\n              setAdditionalProducts={setAdditionalProducts}\r\n              informationList={informationList}\r\n              setInformationList={setInformationList}\r\n              // createChallenge={createChallengeButton}\r\n              update={true}\r\n              updateChallenge={updateChallengeButton}\r\n            />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateChallenge;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\AllUsers.js",["611"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table, Space, Input, Select } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { deleteUser, getAllUsers } from \"../../../services/users\";\r\nimport UpdateUser from \"./UpdateUser\";\r\nimport { getAllChallengeGoals } from \"../../../services/createChallenge/goals\";\r\n\r\nfunction AllUsers() {\r\n  const [filterAllUsers, setFilterAllUsers] = useState([]);\r\n  const [allChallengeGoals, setAllChallengeGoals] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  async function fetchUsers() {\r\n    const users = await getAllUsers();\r\n    const aCh = await getAllChallengeGoals();\r\n    if (aCh.challengeGoals) {\r\n      setAllChallengeGoals(aCh.challengeGoals);\r\n    }\r\n    setAllUsers(users.users);\r\n    setFilterAllUsers(users.users);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filter === \"all\") {\r\n      setFilterAllUsers(allUsers);\r\n    }\r\n    if (filter === \"admin\") {\r\n      const admins = allUsers.filter((f) => f.role === \"admin\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"customer\") {\r\n      const admins = allUsers.filter((f) => f.role === \"customer\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"nutrist\") {\r\n      const admins = allUsers.filter((f) => f.role === \"nutrist\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"shopmanager\") {\r\n      const admins = allUsers.filter((f) => f.role === \"shopmanager\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"blogger\") {\r\n      const admins = allUsers.filter((f) => f.role === \"blogger\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n    if (filter === \"trainer\") {\r\n      const admins = allUsers.filter((f) => f.role === \"trainer\");\r\n      setFilterAllUsers(admins);\r\n    }\r\n  }, [allUsers, filter]);\r\n\r\n  const removeUser = async (d) => {\r\n    await deleteUser(d._id);\r\n    fetchUsers();\r\n  };\r\n\r\n  const onUpdateComplete = async (setLoading, vals, blogId) => {\r\n    // await updateBlog(vals, blogId);\r\n    // setLoading(false);\r\n    // setShow(false);\r\n    // fetchData();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n    // {\r\n    //   title: \"Firstname\",\r\n    //   dataIndex: \"firstName\",\r\n    //   key: \"firstname\",\r\n    //   render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    // },\r\n    // {\r\n    //   title: \"Lastname\",\r\n    //   dataIndex: \"lastName\",\r\n    //   key: \"lastname\",\r\n    //   render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    // },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      render: (text) => <span className=\"font-paragraph-black\">{text}</span>,\r\n    },\r\n\r\n    {\r\n      title: \"Role\",\r\n      key: \"role\",\r\n      dataIndex: \"role\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\" style={{ color: \"#ff7700\" }}>\r\n          {text}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Created At\",\r\n      key: \"updatedAt\",\r\n      dataIndex: \"updatedAt\",\r\n      render: (text) => (\r\n        <span className=\"font-paragraph-black\">\r\n          {moment(text).format(\"DD/MM/YYYY\")}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"challengePreviewLink\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setSelectedUser(record);\r\n              setShow(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button type=\"danger\" onClick={() => removeUser(record)}>\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <UpdateUser\r\n        userInfo={selectedUser}\r\n        show={show}\r\n        setShow={setShow}\r\n        onUpdateComplete={onUpdateComplete}\r\n        allChallengeGoals={allChallengeGoals}\r\n        fetchUsers={fetchUsers}\r\n        key={selectedUser ? selectedUser._id : \"\"}\r\n      />\r\n      <h2 className=\"font-heading-black\">All Users</h2>\r\n      <div>\r\n        <span className=\"font-heading-black\" style={{ marginLeft: \"10px\" }}>\r\n          Filter By Role:\r\n        </span>\r\n        <Select\r\n          defaultValue=\"\"\r\n          style={{ width: 120, marginLeft: \"10px\" }}\r\n          onChange={(e) => setFilter(e)}\r\n        >\r\n          {[\r\n            \"all\",\r\n            \"admin\",\r\n            \"customer\",\r\n            \"trainer\",\r\n            \"blogger\",\r\n            \"shopmanager\",\r\n            \"nutrist\",\r\n          ].map((t) => (\r\n            <Select.Option value={t}>{t}</Select.Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className=\"admin-allchallenges-list-container\">\r\n        <Input\r\n          placeholder=\"Search Users By Username\"\r\n          onChange={(e) =>\r\n            setFilterAllUsers(\r\n              allUsers.filter((user) =>\r\n                user.username\r\n                  .toUpperCase()\r\n                  .includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Input\r\n          placeholder=\"Search User By ID\"\r\n          style={{ marginTop: \"10px\" }}\r\n          onChange={(e) =>\r\n            setFilterAllUsers(\r\n              allUsers.filter((user) =>\r\n                user._id.toUpperCase().includes(e.target.value.toUpperCase())\r\n              )\r\n            )\r\n          }\r\n        />\r\n        <Table columns={columns} dataSource={filterAllUsers} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllUsers;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeAdditionalTab.js",["612","613","614","615","616"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\Player.js",["617","618","619","620"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\HowItWork.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\authentication.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\UserManager\\UpdateUser.js",["621","622","623","624","625","626","627"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ChallengeProfile.js",["628","629","630","631","632"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../assets/trainerprofile.css\";\r\nimport \"../assets/home.css\";\r\nimport \"../assets/challengeProfile.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport {\r\n  ArrowRightOutlined,\r\n  LoadingOutlined,\r\n  DownOutlined,\r\n  UpOutlined,\r\n  UndoOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Attachment from \"../assets/icons/attachement-symbol.png\";\r\nimport Ellipse from \"../assets/icons/ellipse.svg\";\r\nimport { addComment, getChallengeById } from \"../services/createChallenge/main\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport { Tooltip, Collapse, Input, Avatar, Progress } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { userInfoContext } from \"../contexts/UserStore\";\r\nimport { checkUserPackage } from \"../services/payment\";\r\nimport { selectedChallengeContext } from \"../contexts/PaymentProcessStore\";\r\nimport { getChallengeProgress, getUserProfileInfo } from \"../services/users\";\r\nimport { addChallengeToCustomerDetail } from \"../services/customer\";\r\nimport { checkUser } from \"../services/authentication\";\r\nimport moment from \"moment\";\r\nimport HelpIcon from \"../assets/icons/Help-icon.png\";\r\nimport ShoopingIcon from \"../assets/icons/shopping-symbol.png\";\r\nimport ChallengeProfileSubtract from \"../assets/icons/challenge-profile-subtract.svg\";\r\nimport StarFilled from \"../assets/icons/star-orange.svg\";\r\nimport StartTransparent from \"../assets/icons/star-transparent.svg\";\r\nimport ForwardWhite from \"../assets/icons/forward-white.png\";\r\nimport ChallengeCompleteModal from \"../components/Challenge/ChallengeCompleteModal\";\r\nimport ReplaceFreeChallengePopup from \"../components/Challenge/ReplaceFreeChallengePopup\";\r\nimport ChallengeReviewModal from \"../components/Challenge/ChallengeReviewModal\";\r\nimport { set } from \"lodash\";\r\nimport slug from \"elegant-slug\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst tooltipText = `\r\nIf you don’t choose any plan and hit start now, you can go through the wizard, get your free intake, make a free account and enjoy our free challenges collection and one week meal plan. \r\n`;\r\nfunction ChallengeProfile(props) {\r\n  const [reviewOpen, setReviewOpen] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [t] = useTranslation();\r\n  const [challenge, setChallenge] = useState({});\r\n  const [usereDtails, setUserDetails] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  const [pack, setPack] = useState(\"\");\r\n  const [selectedChallenge, setSelectedChallenge] = useContext(\r\n    selectedChallengeContext\r\n  );\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [commentButtonLoading, setCommentButtomLoading] = useState(false);\r\n  const [showChangePanel, setShowChangePanel] = useState([]);\r\n  const [allComments, setAllComments] = useState([]);\r\n  const [challengeProgress, setChallengeProgress] = useState(null);\r\n\r\n  // flag if user owns this challenge or not\r\n  const [userOwnsThisChallenge, setUserOwnsThisChallenge] = useState(\"\");\r\n  const [finishChallengePopupVisible, setFinishChallengePopupVisible] =\r\n    useState(false);\r\n  const [\r\n    replaceFreeChallengePopupVisible,\r\n    setReplaceFreeChallengePopupVisible,\r\n  ] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const res = await getChallengeById(props.match.params.id);\r\n    setChallenge(res);\r\n    setAllComments(res.comments);\r\n    if (localStorage.getItem(\"jwtToken\") && userInfo.id) {\r\n      const uInfo = await getUserProfileInfo(userInfo.id);\r\n      uInfo && setUserDetails(uInfo.customer);\r\n      const check =\r\n        uInfo &&\r\n        uInfo.customer &&\r\n        uInfo.customer.customerDetails &&\r\n        uInfo.customer.customerDetails.challenges.find(\r\n          (f) => f._id === res._id\r\n        );\r\n      console.log(\"check\", check, uInfo);\r\n      setUserOwnsThisChallenge(check);\r\n      // if users the challenge\r\n      if (check) {\r\n        let challengeProgress = await getChallengeProgress(\r\n          props.match.params.id\r\n        );\r\n        if (challengeProgress.data) {\r\n          setChallengeProgress(challengeProgress.data);\r\n          console.log(\"ammar\", challengeProgress, challenge);\r\n          if (\r\n            challengeProgress.data &&\r\n            challengeProgress.data.challengeCompletionRate === 100 &&\r\n            !challengeProgress.data.challengeReview\r\n          ) {\r\n            setFinishChallengePopupVisible(true);\r\n          }\r\n        }\r\n        console.log(\"challengeProgress\", challengeProgress);\r\n      }\r\n      console.log(\"uInfo\", uInfo);\r\n    }\r\n    setLoading(false);\r\n    console.log(res, \"res\");\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [userInfo]);\r\n\r\n  const postCommentToBackend = async () => {\r\n    setCommentButtomLoading(true);\r\n    const res = await addComment(challenge._id, commentText);\r\n\r\n    if (res) {\r\n      setAllComments(res.comments);\r\n    }\r\n    setCommentButtomLoading(false);\r\n    setCommentText(\"\");\r\n    // console.log(res);\r\n  };\r\n\r\n  function isWorkoutLocked(workoutId, i, j) {\r\n    // when is workout locked.\r\n    // if there is no challenge progress in backend so we only show first workout unlocked everything else is locked.\r\n    // if therer is a challenge progress, we only unlock a workout with the following 3 cases:\r\n    //workout is completed\r\n    // workout is in progress\r\n    // workout is next one to the one completed\r\n    var flag = true;\r\n    const isPrevWorkoutCompleted =\r\n      challenge &&\r\n      challengeProgress &&\r\n      j > 0 &&\r\n      challengeProgress.completedWorkouts.includes(\r\n        challenge.weeks[i].workouts[j - 1]._id\r\n      );\r\n\r\n    const isPrevWeekCompleted =\r\n      challenge &&\r\n      challengeProgress &&\r\n      i >= 1 &&\r\n      challenge.weeks[i - 1].workouts.every((r) =>\r\n        challengeProgress.completedWorkouts.includes(r._id)\r\n      );\r\n\r\n    console.log(\r\n      \"hahshasd\",\r\n      i >= 1 &&\r\n        challengeProgress &&\r\n        challenge.weeks[i - 1].workouts.every((r) =>\r\n          challengeProgress.completedWorkouts.includes(r._id)\r\n        )\r\n    );\r\n    if (challengeProgress === null && (i !== 0 || j !== 0)) {\r\n      flag = true;\r\n    }\r\n\r\n    if (challengeProgress) {\r\n      if (\r\n        challengeProgress.completedWorkouts.includes(workoutId) ||\r\n        challengeProgress.currentWorkout === workoutId ||\r\n        isPrevWorkoutCompleted ||\r\n        isPrevWeekCompleted\r\n      ) {\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    console.log(\r\n      \"flagggggggggggg\",\r\n      flag,\r\n      isPrevWorkoutCompleted,\r\n      isPrevWeekCompleted\r\n    );\r\n\r\n    return flag;\r\n  }\r\n\r\n  function getEquipmentsFromWorkouts(weeks) {\r\n    const workouts =\r\n      weeks &&\r\n      weeks.map((w) => {\r\n        return w.workouts;\r\n      });\r\n    const merged = [].concat.apply([], workouts);\r\n    const relatedEquipments = merged.map((m) => m.relatedEquipments);\r\n    const eg = [].concat.apply([], relatedEquipments);\r\n    return eg.length > 0 ? (\r\n      <div className=\"trainer-profile-goals\">\r\n        <div\r\n          className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n          style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n        >\r\n          {t(\"challenge_profile.equipments\")}\r\n        </div>\r\n        <div className=\"trainer-profile-goals-container\">\r\n          {/* {getEquipmentsFromWorkouts(challenge.weeks)} */}\r\n          {eg.map((body) => (\r\n            <div\r\n              className=\"trainer-profile-goal font-paragraph-white\"\r\n              style={{ marginRight: \"1px\", background: \"#283443\" }}\r\n            >\r\n              {body.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n  }\r\n\r\n  const pushCustomerOnConditions = async () => {\r\n    // console.log(\"YAAAAAAAAS\");\r\n    // check if user is logged in\r\n    if (userInfo.id) {\r\n      //this check wheater the customer is subscribed or not\r\n      //TODO: if customer is susbcribed and he doest not already have access to 3 challenges, I need to add this challenge to his challenge array(make sure he is not subscirbed to package 1)\r\n      const ch = checkUserPackage(\r\n        usereDtails,\r\n        challenge,\r\n        pack,\r\n        props.history,\r\n        setSelectedChallenge,\r\n        setReplaceFreeChallengePopupVisible\r\n      );\r\n      // console.log(\"chhhhhh\", ch);\r\n      // return;\r\n      if (ch) {\r\n        if (ch.success && ch.message === \"SUBSCRIBE\") {\r\n          const res = await addChallengeToCustomerDetail(\r\n            userInfo.id,\r\n            challenge._id\r\n          );\r\n          if (res && res.success) {\r\n            fetchData();\r\n          }\r\n          console.log(\"res\", res);\r\n          console.log(\"complete this part\", ch);\r\n        }\r\n      }\r\n    } else {\r\n      console.log(userInfo.id);\r\n      setSelectedChallenge(challenge);\r\n      localStorage.setItem(\"package-type\", pack);\r\n      props.history.push(\"/new\");\r\n    }\r\n  };\r\n\r\n  const getWeeksComponent = () => {\r\n    if (userOwnsThisChallenge) {\r\n      return <div></div>;\r\n    } else {\r\n      if (challenge && challenge.access && challenge.access.includes(\"FREE\")) {\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"challenge_profile.sub\")}\r\n              <Tooltip placement=\"top\" title={tooltipText}>\r\n                <img src={HelpIcon} alt=\"\" style={{ marginLeft: \"5px\" }} />\r\n              </Tooltip>\r\n            </div>\r\n            <div className=\"font-paragraph-white\">\r\n              {t(\"challenge_profile.gataf\")}\r\n            </div>\r\n\r\n            <div className=\"unlock-challenge-div font-paragraph-white\">\r\n              <span style={{ fontSize: \"20px\", fontWeight: \"600\" }}>\r\n                {t(\"challenge_profile.ofc\")}\r\n              </span>\r\n              <span style={{ fontSize: \"26px\", fontWeight: \"600\" }}>€0</span>\r\n              <span className=\"font-paragraph-white\">\r\n                {t(\"challenge_profile.nosub\")}\r\n              </span>\r\n              <span\r\n                className=\"font-paragraph-white\"\r\n                style={{ color: \"#9F9F9F\" }}\r\n              >\r\n                {t(\"challenge_profile.hsn\")}\r\n              </span>\r\n            </div>\r\n          </>\r\n        );\r\n      } else {\r\n        if (\r\n          usereDtails &&\r\n          usereDtails.customerDetails &&\r\n          usereDtails.customerDetails.membership &&\r\n          usereDtails.customerDetails.membership.length > 0\r\n        ) {\r\n          <div></div>;\r\n        } else {\r\n          return (\r\n            <>\r\n              <div\r\n                className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n                style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n              >\r\n                {t(\"player.related\")}\r\n                {t(\"challenge_profile.sub\")}\r\n                <Tooltip placement=\"top\" title={tooltipText}>\r\n                  <img src={HelpIcon} alt=\"\" style={{ marginLeft: \"5px\" }} />\r\n                </Tooltip>\r\n              </div>\r\n              <div className=\"font-paragraph-white\">\r\n                {t(\"challenge_profile.gataf\")}\r\n              </div>\r\n              <div className=\"unlock-challenge-packages\">\r\n                <div\r\n                  className=\"unlock-challenge-pack font-paragraph-white\"\r\n                  onClick={() => {\r\n                    if (pack === \"CHALLENGE_1\") {\r\n                      setPack(\"\");\r\n                    } else {\r\n                      setPack(\"CHALLENGE_1\");\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    border:\r\n                      pack === \"CHALLENGE_1\"\r\n                        ? \"2px solid #f37720\"\r\n                        : \"2px solid #2a2f36\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"400\",\r\n                      marginBottom: \"30px\",\r\n                    }}\r\n                  >\r\n                    One-Time <br /> Challenge\r\n                  </span>\r\n                  <span\r\n                    style={{ fontSize: \"26px\", fontWeight: \"600\" }}\r\n                  >{`${challenge.currency}${challenge.price}`}</span>\r\n                  <span style={{ margin: \"15px 0\" }}>No subscription</span>\r\n                  <span style={{ fontSize: \"14px\", color: \"#7e7c79\" }}>\r\n                    Billed Once\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className=\"unlock-challenge-pack font-paragraph-white\"\r\n                  onClick={() => {\r\n                    if (pack === \"CHALLENGE_12\") {\r\n                      setPack(\"\");\r\n                    } else {\r\n                      setPack(\"CHALLENGE_12\");\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    border:\r\n                      pack === \"CHALLENGE_12\"\r\n                        ? \"2px solid #f37720\"\r\n                        : \"2px solid #2a2f36\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"400\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    Repeat & Save\r\n                  </span>\r\n                  <span\r\n                    className=\"font-paragraph-white\"\r\n                    style={{\r\n                      fontSize: \"13px\",\r\n                      backgroundColor: \"#f37720\",\r\n                      padding: \"5px\",\r\n                      width: \"120px\",\r\n                      fontWeight: \"600\",\r\n                      alignSelf: \"center\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    Save up to 60%\r\n                  </span>\r\n                  <span style={{ fontSize: \"26px\", fontWeight: \"600\" }}>\r\n                    €4.5 <span style={{ fontSize: \"14px\" }}>/Week</span>\r\n                  </span>\r\n                  <span style={{ margin: \"15px 0\" }}>12 months plan</span>\r\n                  <span style={{ fontSize: \"14px\", color: \"#7e7c79\" }}>\r\n                    Billed Monthly\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className=\"unlock-challenge-pack font-paragraph-white\"\r\n                  onClick={() => {\r\n                    if (pack === \"CHALLENGE_3\") {\r\n                      setPack(\"\");\r\n                    } else {\r\n                      setPack(\"CHALLENGE_3\");\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    border:\r\n                      pack === \"CHALLENGE_3\"\r\n                        ? \"2px solid #f37720\"\r\n                        : \"2px solid #2a2f36\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"400\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    Repeat & Save\r\n                  </span>\r\n                  <span\r\n                    className=\"font-paragraph-white\"\r\n                    style={{\r\n                      fontSize: \"13px\",\r\n                      backgroundColor: \"#f37720\",\r\n                      padding: \"5px\",\r\n                      width: \"120px\",\r\n                      fontWeight: \"600\",\r\n                      alignSelf: \"center\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    Save up to 30%\r\n                  </span>\r\n                  <span style={{ fontSize: \"26px\", fontWeight: \"600\" }}>\r\n                    €6 <span style={{ fontSize: \"14px\" }}>/Week</span>\r\n                  </span>\r\n                  <span style={{ margin: \"15px 0\" }}>3 months plan</span>\r\n                  <span style={{ fontSize: \"14px\", color: \"#7e7c79\" }}>\r\n                    Billed Monthly\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function openChallengePlayer(address, workout, i, j) {\r\n    if (isWorkoutLocked(workout._id, i, j) && (i !== 0 || j !== 0)) {\r\n    } else {\r\n      props.history.push(address);\r\n    }\r\n  }\r\n  const getWeeks = () => {\r\n    // if user has that specific challenge in its details\r\n    console.log(\"usereDtails asdasdasd\", usereDtails);\r\n    if (userOwnsThisChallenge) {\r\n      return (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          {challenge.weeks &&\r\n            challenge.weeks.map((w, i) => (\r\n              <>\r\n                <h3\r\n                  className=\"font-paragraph-white\"\r\n                  style={{ margin: \"10px 0\" }}\r\n                >\r\n                  {w.weekName}\r\n                </h3>\r\n                <div\r\n                  className=\"trainer-profile-goals-container\"\r\n                  // style={{ backgroundColor: \"#2D3239\" }}\r\n                >\r\n                  {w.workouts &&\r\n                    w.workouts.map((workout, j) => (\r\n                      <div\r\n                        onClick={() =>\r\n                          openChallengePlayer(\r\n                            `/play-challenge/${props.match.params.challengeName}/${challenge._id}/${workout._id}`,\r\n                            workout,\r\n                            i,\r\n                            j\r\n                          )\r\n                        }\r\n                        className={`challenge-profile-comment font-paragraph-white`}\r\n                        key={workout._id}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          cursor: \"pointer\",\r\n                          backgroundColor: \"#2D3239\",\r\n                          position: \"relative\",\r\n                        }}\r\n                      >\r\n                        {isWorkoutLocked(workout._id, i, j) &&\r\n                          (i !== 0 || j !== 0) && (\r\n                            <div className=\"workout-card-disabled\"></div>\r\n                          )}\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <img\r\n                            src={Ellipse}\r\n                            alt=\"\"\r\n                            style={{\r\n                              marginRight: \"5px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            className=\"font-paragraph-white\"\r\n                            style={{\r\n                              margin: \"0 5px\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                          >\r\n                            <span>{workout.title}</span>\r\n                            <span\r\n                              style={{ color: \"#BABCBF\", fontSize: \"14px\" }}\r\n                            >\r\n                              {workout.subtitle}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          {workout.introVideoLink && (\r\n                            <span\r\n                              className=\"font-paragraph-white\"\r\n                              style={{\r\n                                backgroundColor: \"#354c63\",\r\n                                padding: \"3px 10px\",\r\n                                margin: \"0 2px\",\r\n                              }}\r\n                            >\r\n                              Intro\r\n                            </span>\r\n                          )}\r\n                          {workout.relatedEquipments &&\r\n                            workout.relatedEquipments.map((w) => (\r\n                              <span\r\n                                className=\"font-paragraph-white\"\r\n                                style={{\r\n                                  backgroundColor: \"#354c63\",\r\n                                  padding: \"5px 10px\",\r\n                                  margin: \"0 2px\",\r\n                                }}\r\n                              >\r\n                                {w.name}\r\n                              </span>\r\n                            ))}\r\n                          {workout.infoFile && (\r\n                            <img\r\n                              src={Attachment}\r\n                              alt=\"\"\r\n                              style={{\r\n                                margin: \"0 2px\",\r\n                              }}\r\n                            />\r\n                          )}\r\n\r\n                          {workout.relatedProducts &&\r\n                            workout.relatedProducts.length > 0 && (\r\n                              <img\r\n                                src={ShoopingIcon}\r\n                                alt=\"\"\r\n                                style={{\r\n                                  margin: \"0 2px\",\r\n                                }}\r\n                              />\r\n                            )}\r\n\r\n                          {challengeProgress &&\r\n                          challengeProgress.completedWorkouts.includes(\r\n                            workout._id\r\n                          ) ? (\r\n                            <UndoOutlined\r\n                              style={{\r\n                                margin: \"0 5px\",\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <ArrowRightOutlined\r\n                              style={{\r\n                                margin: \"0 5px\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        {challengeProgress &&\r\n                          (challengeProgress.completedWorkouts.includes(\r\n                            workout._id\r\n                          ) ||\r\n                            challengeProgress.currentWorkout ===\r\n                              workout._id) && (\r\n                            <span\r\n                              className=\"workout-bottom-border\"\r\n                              style={{\r\n                                width:\r\n                                  challengeProgress &&\r\n                                  challengeProgress.currentWorkout ===\r\n                                    workout._id\r\n                                    ? `${challengeProgress.currentWorkoutCompletionRate}%`\r\n                                    : \"100%\",\r\n                              }}\r\n                            ></span>\r\n                          )}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </>\r\n            ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Collapse\r\n          defaultActiveKey={[]}\r\n          onChange={(e) => setShowChangePanel(e)}\r\n          style={{\r\n            backgroundColor: \"#171e27\",\r\n            marginTop: \"10px\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          {challenge.weeks &&\r\n            challenge.weeks.map((w, i) => (\r\n              <Collapse.Panel\r\n                showArrow={false}\r\n                style={{ backgroundColor: \"#1b2632\", marginBottom: \"5px\" }}\r\n                header={\r\n                  <>\r\n                    {console.log(\"week\", w)}\r\n                    <span\r\n                      className=\"font-paragraph-white\"\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        backgroundColor: \"#f37720\",\r\n                        padding: \"5px\",\r\n                        width: \"120px\",\r\n                        textTransform: \"uppercase\",\r\n                        margin: \"0 0 12px 5px\",\r\n                      }}\r\n                    >\r\n                      {w.weekName}\r\n                    </span>\r\n                    <div\r\n                      style={{\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"16px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        padding: \"8px\",\r\n                        textTransform: \"uppercase\",\r\n                      }}\r\n                      className=\"font-paragraph-white\"\r\n                    >\r\n                      <span> {w.weekSubtitle}</span>\r\n                      <span>\r\n                        {showChangePanel.includes(`${i + 1}`) ? (\r\n                          <UpOutlined style={{ color: \"#ff7700\" }} />\r\n                        ) : (\r\n                          <DownOutlined style={{ color: \"#ff7700\" }} />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                }\r\n                key={i + 1}\r\n              >\r\n                <div\r\n                  className=\"trainer-profile-goals-container\"\r\n                  style={{ backgroundColor: \"#1b2632\" }}\r\n                >\r\n                  {w.workouts &&\r\n                    w.workouts.map((workout) => (\r\n                      <div\r\n                        className=\"challenge-profile-comment font-paragraph-white\"\r\n                        key={workout._id}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"flex-start\",\r\n                          backgroundColor: \"transparent\",\r\n                        }}\r\n                      >\r\n                        <span>{workout.title}</span>\r\n                        <span\r\n                          className=\"font-paragraph-white\"\r\n                          style={{ fontSize: \"13px\" }}\r\n                        >\r\n                          {workout.subtitle}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </Collapse.Panel>\r\n            ))}\r\n        </Collapse>\r\n      );\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <div className=\"center-inpage\">\r\n      <LoadingOutlined style={{ fontSize: \"50px\", color: \"#ff7700\" }} />\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Helmet>\r\n        <title>{`Realchallenge: ${challenge.challengeName}`}</title>\r\n        <meta name=\"description\" content={challenge.description} />\r\n        <meta property=\"og:title\" content={challenge.challengeName} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:description\" content={challenge.description} />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`http://localhost:3001/${slug(challenge.challengeName)}/${\r\n            challenge._id\r\n          }`}\r\n        />\r\n        <meta name=\"author\" content=\"Realchallenge\" />\r\n      </Helmet>\r\n      <Navbar />\r\n      {/* video modal */}\r\n      <ModalVideo\r\n        channel=\"custom\"\r\n        autoplay\r\n        isOpen={open}\r\n        controlsList=\"nodownload\"\r\n        url={challenge.videoThumbnailLink}\r\n        onClose={() => setOpen(false)}\r\n      />\r\n      <ChallengeReviewModal\r\n        visible={reviewOpen}\r\n        setVisible={setReviewOpen}\r\n        challenge={challenge}\r\n      />\r\n      <div className=\"trainer-profile-container\">\r\n        <div\r\n          className=\"trainer-profile-container-column1\"\r\n          style={{\r\n            background: `linear-gradient(rgba(23, 30, 39, 0), rgb(23, 30, 39)), url(${\r\n              process.env.REACT_APP_SERVER\r\n            }/uploads/${\r\n              challenge.thumbnailLink ? challenge.thumbnailLink : \"\"\r\n            })`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"10% 10%\",\r\n          }}\r\n        >\r\n          <div className=\"profile-box\">\r\n            <div className=\"challenge-profile-box-1\">\r\n              <img\r\n                src={ChallengeProfileSubtract}\r\n                alt=\"\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n              <h1 className=\"font-heading-white\" style={{ fontSize: \"4rem\" }}>\r\n                {challenge.challengeName ? challenge.challengeName : \"\"}\r\n              </h1>\r\n              <Progress\r\n                percent={\r\n                  challengeProgress && challengeProgress.challengeCompletionRate\r\n                    ? challengeProgress.challengeCompletionRate\r\n                    : 0\r\n                }\r\n                style={{ height: \"4px\" }}\r\n                trailColor=\"rgb(79, 90, 104)\"\r\n                showInfo={false}\r\n              />\r\n            </div>\r\n            <div className=\"challenge-profile-box-2\">\r\n              <div className=\"challenge-profile-box-2-rating\">\r\n                <div style={{ padding: \"5px\" }}>\r\n                  {new Array(challenge.rating).fill(0).map(() => (\r\n                    <img\r\n                      src={StarFilled}\r\n                      alt=\"\"\r\n                      style={{ height: \"20px\", margin: \"2px\" }}\r\n                    />\r\n                  ))}\r\n                  {new Array(challenge.rating ? 5 - challenge.rating : 5)\r\n                    .fill(0)\r\n                    .map(() => (\r\n                      <img\r\n                        src={StartTransparent}\r\n                        alt=\"\"\r\n                        style={{ height: \"20px\", margin: \"2px\" }}\r\n                      />\r\n                    ))}\r\n                </div>\r\n                <span onClick={() => setReviewOpen(true)}>\r\n                  {t(\"challenge_profile.reviews\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"challenge-profile-box-2-info\">\r\n                <div className=\"challenge-profile-box-2-container\">\r\n                  <img src={ForwardWhite} alt=\"\" />{\" \"}\r\n                  {challenge.difficulty ? challenge.difficulty : \"\"}\r\n                </div>\r\n                <div className=\"challenge-profile-box-2-container\">\r\n                  {challenge.duration ? `${challenge.duration} mins` : \"\"}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"font-paragraph-white\"\r\n                style={{ fontSize: \"18px\", marginTop: \"10px\" }}\r\n              >\r\n                {challenge.description}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"trainer-profile-container-column2\">\r\n          <div className=\"trainer-profile-goals\">\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"challenge_profile.trainers\")}\r\n            </div>\r\n            <div className=\"challenge-trainers-container\">\r\n              {challenge.trainers &&\r\n                challenge.trainers.map((trainer) => (\r\n                  <div\r\n                    className=\"challenge-trainer-box\"\r\n                    style={{ background: \"#283443\" }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        backgroundImage: `url(${process.env.REACT_APP_SERVER}/uploads/${trainer.avatarLink})`,\r\n                        backgroundPosition: \"center center\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        height: \"50px\",\r\n                        width: \"60px\",\r\n                      }}\r\n                    ></span>\r\n                    {/* <img\r\n                      // src={}\r\n                      alt={trainer.firstName}\r\n                    /> */}\r\n                    <Link\r\n                      to={`/trainer/${trainer._id}`}\r\n                      className=\"challenge-trainer-box-text font-paragraph-white\"\r\n                    >\r\n                      {trainer.firstName + \" \" + trainer.lastName}\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          {challenge.trainersFitnessInterest && (\r\n            <div className=\"trainer-profile-goals\">\r\n              <div\r\n                className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n                style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n              >\r\n                {t(\"challenge_profile.fitnessInterests\")}\r\n              </div>\r\n              <div className=\"trainer-profile-goals-container\">\r\n                {challenge.trainersFitnessInterest &&\r\n                  challenge.trainersFitnessInterest.map((goal) => (\r\n                    <div\r\n                      className=\"trainer-profile-goal font-paragraph-white\"\r\n                      style={{ marginRight: \"1px\", background: \"#283443\" }}\r\n                    >\r\n                      {goal.name}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"trainer-profile-goals\">\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"challenge_profile.body_focus\")}\r\n            </div>\r\n            <div className=\"trainer-profile-goals-container\">\r\n              {challenge.body &&\r\n                challenge.body.map((body) => (\r\n                  <div\r\n                    className=\"trainer-profile-goal font-paragraph-white\"\r\n                    style={{ marginRight: \"1px\", background: \"#283443\" }}\r\n                  >\r\n                    {body.name}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          {getEquipmentsFromWorkouts(challenge.weeks)}\r\n\r\n          <div\r\n            className=\"trainer-profile-goals\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{ color: \"#72777B\", textTransform: \"uppercase\" }}\r\n            >\r\n              {t(\"challenge_profile.yourPersonalJourney\")}\r\n            </div>\r\n            {getWeeks()}\r\n          </div>\r\n          <div\r\n            className=\"trainer-profile-goals\"\r\n            style={{\r\n              position: \"relative\",\r\n              borderBottom: \"1px solid transparent\",\r\n            }}\r\n          >\r\n            {getWeeksComponent()}\r\n          </div>\r\n\r\n          <div\r\n            className=\"trainer-profile-goals\"\r\n            style={{ textAlign: \"center\", paddingTop: \"10px\" }}\r\n          >\r\n            {userOwnsThisChallenge ? (\r\n              \"\"\r\n            ) : (\r\n              <button\r\n                className=\"create-payment-check-out font-paragraph-white\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  cursor: \"pointer\",\r\n                  width: \"100%\",\r\n                }}\r\n                onClick={pushCustomerOnConditions}\r\n              >\r\n                <span\r\n                  className=\"font-paragraph-white\"\r\n                  style={{ fontWeight: \"600\" }}\r\n                >\r\n                  {t(\"challenge_profile.start_today\")} <ArrowRightOutlined />\r\n                </span>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            className=\"trainer-profile-goals\"\r\n            style={{ borderBottom: \"1px solid transparent\" }}\r\n          >\r\n            <div\r\n              className=\"trainer-profile-goals-heading font-paragraph-white\"\r\n              style={{\r\n                color: \"#72777B\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {t(\"challenge_profile.comments\")}\r\n            </div>\r\n            {allComments.map((c) => (\r\n              <div className=\"comment-container\">\r\n                <div className=\"comment-container-c1 font-paragraph-white\">\r\n                  <Avatar src={c.user.avatarLink} shape=\"square\" />{\" \"}\r\n                  <span style={{ marginLeft: \"5px\" }}>{c.user.username}</span>\r\n                  <div className=\"comment-container-c2 font-paragraph-white\">\r\n                    {c.text}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"font-paragraph-white comment-container-c3\"\r\n                  style={{ color: \"#82868b\" }}\r\n                >\r\n                  {moment(c.createdAt).format(\"MMM, Do YY\")}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {localStorage.getItem(\"jwtToken\") && (\r\n              <>\r\n                <div\r\n                  className=\"trainer-profile-goals-container\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <Input.TextArea\r\n                    rows={4}\r\n                    value={commentText}\r\n                    onChange={(e) => setCommentText(e.target.value)}\r\n                  />\r\n                </div>\r\n                {commentButtonLoading ? (\r\n                  <LoadingOutlined\r\n                    style={{\r\n                      color: \"#ff7700\",\r\n                      fontSize: \"30px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <button\r\n                    className=\"common-transparent-button font-paragraph-white\"\r\n                    onClick={postCommentToBackend}\r\n                    style={{\r\n                      color: \"#ff7700\",\r\n                      borderColor: \"#ff7700\",\r\n                      marginTop: \"10px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {t(\"common.postComment\")}\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ChallengeCompleteModal\r\n        visible={finishChallengePopupVisible}\r\n        setVisible={setFinishChallengePopupVisible}\r\n        challengeId={props.match.params.id}\r\n        challenge={challenge}\r\n        points={50}\r\n        fetchData={fetchData}\r\n      />\r\n      <ReplaceFreeChallengePopup\r\n        challenge={challenge}\r\n        visible={replaceFreeChallengePopupVisible}\r\n        setVisible={setReplaceFreeChallengePopupVisible}\r\n        fetchData={fetchData}\r\n      />\r\n\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ChallengeProfile);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\RenderedVideoPlayer.js",["633","634","635","636"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport \"../../assets/video-player-design.css\";\r\nimport \"../../assets/player.css\";\r\nimport ReactPlayer from \"react-player\";\r\nimport BreakTimer from \"./BreakTimer\";\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport tune from \"../../assets/music/break-start.wav\";\r\nimport {\r\n  breakContext,\r\n  exerciseWorkoutTimeTrackContext,\r\n  playerStateContext,\r\n  timerVisibleContext,\r\n} from \"../../contexts/PlayerState\";\r\n\r\nvar count = 0;\r\n\r\nconst playAudio = () => {\r\n  new Audio(tune).play();\r\n};\r\nfunction RenderedVideoPlayer({\r\n  exercise,\r\n  musics,\r\n  moveToNextExercise,\r\n  moveToPrevExercise,\r\n  nextExerciseTitle,\r\n  completed,\r\n  // for full screen player video browser\r\n  workout,\r\n  setExerciseForHelpModal,\r\n  setOpenHelpModal,\r\n  setCurrentExercise,\r\n  currentExercise,\r\n  challengePageAddress,\r\n}) {\r\n  const [timerVisible, setTimerVisible] = useContext(timerVisibleContext);\r\n  const [playerState, setPlayerState] = useContext(playerStateContext);\r\n  // const [currentBreak, setCurrentBreak] = useContext(breakContext);\r\n  const [exerciseWorkoutTimeTrack, setExerciseWorkoutTimeTrack] = useContext(\r\n    exerciseWorkoutTimeTrackContext\r\n  );\r\n  const [exerciseSeconds, setExerciseSeconds] = useState(-1);\r\n  const playerRef = useRef(null);\r\n  const playerContainerRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const descriptionRef = useRef(null);\r\n  //   const time = new Date();\r\n  //   time.setSeconds(time.getSeconds() + 600);\r\n  //   const {\r\n  //     seconds,\r\n  //     minutes,\r\n  //     hours,\r\n  //     days,\r\n  //     isRunning,\r\n  //     start,\r\n  //     pause,\r\n  //     resume,\r\n  //     restart,\r\n  //   } = useTimer({\r\n  //     expiryTimestamp: time,\r\n  //     onExpire: () => console.warn(\"onExpire called\"),\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    const sumAllBreakTime =\r\n      workout && workout.exercises.reduce((a, b) => a + (b[\"break\"] || 0), 0);\r\n    const sumAllExerciseDuration =\r\n      workout &&\r\n      workout.exercises.reduce(\r\n        (a, b) => a + (parseInt(b[\"exerciseLength\"]) || 0),\r\n        0\r\n      );\r\n    console.log(\"sumAllBreakTime\", workout + sumAllExerciseDuration);\r\n    const d = sumAllExerciseDuration + sumAllBreakTime;\r\n    setExerciseWorkoutTimeTrack((prev) => ({ ...prev, total: d }));\r\n  }, [workout]);\r\n\r\n  useEffect(() => {\r\n    // start();\r\n\r\n    exercise.exerciseLength\r\n      ? setExerciseSeconds(parseInt(exercise.exerciseLength))\r\n      : setExerciseSeconds(Math.round(playerRef.current.getDuration()));\r\n  }, [exercise]);\r\n\r\n  useEffect(() => {\r\n    if (exerciseSeconds === 0) {\r\n      playAudio();\r\n      if (workout.exercises[currentExercise.index + 1]) {\r\n        // this was how it was originall\r\n        setPlayerState({ ...playerState, playing: false });\r\n        setTimerVisible(true);\r\n        // these are new stuff\r\n        // setPlayerState({ ...playerState, playing: false });\r\n        // moveToNextExercise();\r\n        // setTimerVisible(true);\r\n      } else {\r\n        moveToNextExercise();\r\n        // setPlayerState({ ...playerState, playing: true });\r\n      }\r\n      return;\r\n    }\r\n  }, [exerciseSeconds]);\r\n\r\n  const handleProgress = (changeState) => {\r\n    if (count > 1) {\r\n      controlsRef.current.style.visibility = \"hidden\";\r\n      descriptionRef.current.style.visibility = \"visible\";\r\n      count = 0;\r\n    }\r\n    if (controlsRef.current.style.visibility === \"visible\") {\r\n      count += 1;\r\n    }\r\n\r\n    // setPlayerState({ ...playerState, progress: changeState });\r\n    // seconds++;\r\n\r\n    if (exerciseSeconds > 0 && playerState.playing && !playerState.loading) {\r\n      setExerciseSeconds(exerciseSeconds - 1);\r\n      setExerciseWorkoutTimeTrack((prev) => ({\r\n        ...prev,\r\n        current: prev.current + 1,\r\n      }));\r\n    }\r\n\r\n    setPlayerState({ ...playerState, progress: changeState });\r\n  };\r\n\r\n  const handleMouseMove = () => {\r\n    controlsRef.current.style.visibility = \"visible\";\r\n    descriptionRef.current.style.visibility = \"hidden\";\r\n    count = 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"player-wrapper\"\r\n      style={{ position: \"relative\" }}\r\n      ref={playerContainerRef}\r\n      onMouseMove={handleMouseMove}\r\n    >\r\n      <ReactPlayer\r\n        ref={playerRef}\r\n        className=\"react-player\"\r\n        onBuffer={() => {\r\n          setPlayerState({ ...playerState, loading: true });\r\n        }}\r\n        onBufferEnd={() => {\r\n          setPlayerState({ ...playerState, loading: false });\r\n        }}\r\n        playing={playerState.playing}\r\n        muted={playerState.muted}\r\n        loop={currentExercise.index === 0 ? false : true}\r\n        volume={playerState.volume}\r\n        url={\r\n          exercise.videoURL\r\n            ? `${process.env.REACT_APP_SERVER}/uploads/${exercise.videoURL}`\r\n            : \"\"\r\n        }\r\n        progress={playerState.progress}\r\n        onProgress={handleProgress}\r\n        // onEnded={() => {\r\n        //   if (currentExercise.index === 0) {\r\n        //     playAudio();\r\n        //     if (workout.exercises[currentExercise.index + 1]) {\r\n        //       // this was how it was originall\r\n        //       setPlayerState({ ...playerState, playing: false });\r\n        //       setTimerVisible(true);\r\n        //       // these are new stuff\r\n        //       // setPlayerState({ ...playerState, playing: false });\r\n        //       // moveToNextExercise();\r\n        //       // setTimerVisible(true);\r\n        //     } else {\r\n        //       moveToNextExercise();\r\n        //       // setPlayerState({ ...playerState, playing: true });\r\n        //     }\r\n        //   }\r\n        // }}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        controls={false}\r\n      />\r\n      <PlayerControls\r\n        ref={controlsRef}\r\n        descriptionRef={descriptionRef}\r\n        playerRef={playerRef}\r\n        exerciseTitle={exercise.title ? exercise.title : \"\"}\r\n        exerciseLength={exercise.exerciseLength ? exercise.exerciseLength : \"\"}\r\n        breakTime={exercise.break ? exercise.break : \"\"}\r\n        playerContainerRef={playerContainerRef}\r\n        musicList={musics}\r\n        challengePageAddress={challengePageAddress}\r\n        exerciseSeconds={exerciseSeconds}\r\n        // for full screen player video browser\r\n        workout={workout}\r\n        setExerciseForHelpModal={setExerciseForHelpModal}\r\n        setOpenHelpModal={setOpenHelpModal}\r\n        setCurrentExercise={setCurrentExercise}\r\n        currentExercise={currentExercise}\r\n        moveToNextExercise={moveToNextExercise}\r\n        moveToPrevExercise={moveToPrevExercise}\r\n      />\r\n\r\n      {timerVisible && (\r\n        <BreakTimer\r\n          moveToNextExercise={moveToNextExercise}\r\n          nextExerciseTitle={nextExerciseTitle}\r\n          exercise={workout.exercises[currentExercise.index]}\r\n          timerVisible={timerVisible}\r\n          setTimerVisible={setTimerVisible}\r\n        />\r\n      )}\r\n      {/* music player */}\r\n\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderedVideoPlayer;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\NonRenderedVideoPlayer.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\ForgotPassword.js",["637"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\ChoosePlan.js",["638","639","640","641","642"],"import React, { useEffect, useContext } from \"react\";\r\nimport \"../../assets/newWelcome.css\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { userInfoContext } from \"../../contexts/UserStore\";\r\nimport PackageSelector from \"./PackageSelector\";\r\n\r\nfunction ChoosePlan(props) {\r\n  const [t] = useTranslation();\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"jwtToken\")) {\r\n      props.history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const onChoosePlan = (pack) => {\r\n    console.log(\"here\", pack);\r\n    localStorage.setItem(\"package-type\", pack);\r\n    props.history.push(\"/create-payment\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"new-welcome-page choose-plan-page\">\r\n        <div className=\"new-welcome-container\">\r\n          <h1 className=\"font-heading-white\">Our Plans</h1>\r\n          <p className=\"font-paragraph-white\">\r\n            Our plans are created by expert trainers that helps you achive your\r\n            goals.\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <PackageSelector onChoosePlan={onChoosePlan} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(ChoosePlan);\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Cards\\ChallengeCard.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\coupons.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\faqs.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\AllCoupons.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Community.js",["643","644","645","646","647","648","649","650","651"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\PostsManager\\UpdatePost.js",["652","653"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserDashboard.js",["654","655","656"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\NewBlog.js",["657"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ExerciseManager\\UpdateExercise.js",["658"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\UpdateCoupon.js",["659","660"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Common\\ReviewsModal.js",["661","662"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Payment\\CreatePayment.js",["663","664","665","666"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\Coupons\\NewCoupon.js",["667"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Switch, Select, InputNumber } from \"antd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createCoupon } from \"../../../services/coupons\";\r\nimport { getAllChallenges } from \"../../../services/createChallenge/main\";\r\n\r\nfunction NewCoupon() {\r\n  const [code, setCode] = useState(\"\");\r\n  const [active, setActive] = useState(false);\r\n  const [applicableOn, setApplicableOn] = useState([]);\r\n  const [challengesApplicableOn, setChallengesApplicableOn] = useState([]);\r\n  const [allChallenges, setAllChallenges] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    if (code.length > 0) {\r\n      const s = {\r\n        name: values.name,\r\n        code: code,\r\n        discountPercent: parseInt(values.discount),\r\n        limitUsage: values.usageCount,\r\n        isActive: values.active,\r\n        applicableOn: values.applicableOn,\r\n        challengesApplicableOn:\r\n          challengesApplicableOn.length > 0 ? challengesApplicableOn : null,\r\n      };\r\n      const res = await createCoupon(s);\r\n      console.log(res);\r\n    } else {\r\n      alert(\"Please enter coupon code\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  // const selectBefore = (\r\n  //   <Select defaultValue=\"%\" className=\"select-before\">\r\n  //     <Option value=\"%\">%</Option>\r\n  //     <Option value=\"€\">€</Option>\r\n  //   </Select>\r\n  // );\r\n\r\n  useEffect(() => {\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n  const fetchChallenges = async () => {\r\n    const c = await getAllChallenges(localStorage.getItem(\"locale\"));\r\n    setAllChallenges(c.challenges);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"font-heading-black\">New Coupon</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input coupon name!\" }]}\r\n            type=\"number\"\r\n          >\r\n            <Input style={{ width: \"100%\" }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Coupon Code\" name=\"couponCode\">\r\n            <Input value={code} onChange={(e) => setCode(e.target.value)} />\r\n            <Button\r\n              type=\"primary\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n                float: \"right\",\r\n              }}\r\n              onClick={() => {\r\n                setCode(\"RL\" + uuidv4().substring(1, 8));\r\n              }}\r\n            >\r\n              Generate Coupon Code\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Discount\"\r\n            name=\"discount\"\r\n            rules={[{ required: true, message: \"Please input discount!\" }]}\r\n            type=\"number\"\r\n          >\r\n            <Input\r\n              placeholder=\"Must be in percentage eg 10\"\r\n              type=\"number\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Usage Count\"\r\n            name=\"usageCount\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input number of times the code can be used!\",\r\n              },\r\n            ]}\r\n            type=\"number\"\r\n          >\r\n            <InputNumber style={{ width: \"100%\" }} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Active\" name=\"active\">\r\n            <Switch\r\n              checkedChildren=\"is active\"\r\n              unCheckedChildren=\"not active\"\r\n              checked={active}\r\n              onChange={(e) => setActive(e)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Applicable On Specific Plan\" name=\"applicableOn\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              value={applicableOn}\r\n              placeholder=\"Please select\"\r\n              onChange={(e) => setApplicableOn(e)}\r\n            >\r\n              {[\r\n                \"ALL\",\r\n                \"CHALLENGE ONE\",\r\n                \"CHALLENGE THREE\",\r\n                \"CHALLENGE TWELVE\",\r\n              ].map((e, i) => (\r\n                <Select.Option key={i + 1} value={e}>\r\n                  {e}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Applicable On Specific Challenge\"\r\n            name=\"challengesApplicableOn\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              value={challengesApplicableOn}\r\n              placeholder=\"Please select\"\r\n              onChange={(e) => setChallengesApplicableOn(e)}\r\n            >\r\n              {allChallenges.map((e, i) => (\r\n                <Select.Option key={i + 1} value={e._id}>\r\n                  {e.challengeName}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewCoupon;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\recipes.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallengeWorkoutTab.js",["668","669","670","671","672"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\ChallengeManager\\NewChallenge.js",["673","674","675","676"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Challenge\\ChallengeCompleteModal.js",["677","678"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Player\\FullScreenPlayerVideosBrowser.js",["679"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\RecipeManager\\NewRecipe.js",["680","681","682","683","684","685","686"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Select,\r\n  Modal,\r\n  InputNumber,\r\n  List,\r\n} from \"antd\";\r\nimport { PlusOutlined, CloseSquareOutlined } from \"@ant-design/icons\";\r\nimport { v4 } from \"uuid\";\r\nimport {\r\n  createIngredient,\r\n  createDiet,\r\n  createFoodType,\r\n  createMealType,\r\n  getAllDietTypes,\r\n  getAllMealTypes,\r\n  getAllFoodTypes,\r\n  getAllIngredients,\r\n  removeMealType,\r\n  removeFoodType,\r\n  removeDiet,\r\n  removeIngredient,\r\n  createRecipe,\r\n} from \"../../../services/recipes\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport { createPost } from \"../../../services/posts\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport EditTypeName from \"./EditTypeName\";\r\nimport slug from \"elegant-slug\";\r\nimport TextEditor from \"../../TextEditor\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction NewRecipe({ setCurrentSelection }) {\r\n  const [userInfo, setUserInfo] = useContext(userInfoContext);\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n  // -----------\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [featuredImage, setFeaturedImage] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"eng\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [thumbnailBase64, setThumbnailBase64] = useState(\"\");\r\n  const [preprationTime, setPreprationTime] = useState(\"\");\r\n  const [persons, setPersons] = useState(\"\");\r\n  const [kcalPerPersons, setKcalPerPersons] = useState(\"\");\r\n  const [saturationIndex, setSaturationIndex] = useState(\"\");\r\n  const [protein, setProtein] = useState(\"\");\r\n  const [carbohydrates, setCarbohydrates] = useState(\"\");\r\n  const [fat, setFat] = useState(\"\");\r\n  const [fiber, setFiber] = useState(\"\");\r\n  const [isPublic, setIsPublic] = useState(false);\r\n  const [allowComments, setAllowComments] = useState(false);\r\n  const [allowReviews, setAllowReviews] = useState(false);\r\n  //meal type\r\n  const [mealTypes, setMealTypes] = useState([]);\r\n  const [allMealTypes, setAllMealTypes] = useState([]);\r\n  const [mealTypeModalVisible, setMealTypeModalVisible] = useState(false);\r\n  const [newMealTypeName, setNewMealTypeName] = useState(\"\");\r\n  //=food type\r\n  const [foodType, setFoodTypes] = useState([]);\r\n  const [allFoodTypes, setAllFoodTypes] = useState([]);\r\n  const [foodTypeModalVisible, setFoodTypeModalVisible] = useState(false);\r\n  const [newFoodTypeName, setNewFoodTypeName] = useState(\"\");\r\n  //=diet\r\n  const [diet, setDiet] = useState([]);\r\n  const [allDiets, setAllDiets] = useState([]);\r\n  const [dietModalVisible, setDietModalVisible] = useState(false);\r\n  const [newDietName, setNewDietName] = useState(\"\");\r\n  //   INGREDIETS\r\n  const [allIngredients, setAllIngredients] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredientModalVisible, setNewIngredientModlVisible] =\r\n    useState(false);\r\n  const [newIngredientName, setNewIngredientName] = useState(\"\");\r\n  //   cooking process\\\r\n  const [cookingProcess, setCookingProcess] = useState([]);\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [tips, setTips] = useState(\"\");\r\n  // --------------\r\n  // const [createPostModalVisible, setCreatePostModalVisible] = useState(false);\r\n  const [userCreatePost, setUserCreatePost] = useState(false);\r\n  // update stuff\r\n  const [editItemNameModalVisible, setEditItemModelVisible] = useState(false);\r\n\r\n  const [selectedItemForUpdate, setSelectedItemForUpdate] = useState({});\r\n  const [selectedItemForUpdateTitle, setSelectedItemForUpdateTitle] =\r\n    useState(\"\");\r\n\r\n  async function fetchData() {\r\n    const diets = await getAllDietTypes();\r\n    const meals = await getAllMealTypes();\r\n    const foodTypes = await getAllFoodTypes();\r\n    const ingredients = await getAllIngredients();\r\n\r\n    setAllDiets(diets.diets);\r\n    setAllMealTypes(meals.mealTypes);\r\n    setAllFoodTypes(foodTypes.foodTypes);\r\n    setAllIngredients(ingredients.ingredients);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const ing = {\r\n    id: v4(),\r\n    name: \"\",\r\n    weight: \"\",\r\n    volume: \"\",\r\n    pieces: \"\",\r\n    method: \"\",\r\n    other: \"\",\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    if (description.length <= 0) {\r\n      alert(\"Please add description\");\r\n      return;\r\n    }\r\n    const d = {\r\n      name,\r\n      description,\r\n      language: language,\r\n      image: featuredImage.link,\r\n      prepTime: preprationTime,\r\n      kCalPerPerson: kcalPerPersons,\r\n      saturationIndex: saturationIndex,\r\n      protein: protein,\r\n      carbohydrate: carbohydrates,\r\n      persons: persons,\r\n      fat: fat,\r\n      fiber: fiber,\r\n      mealTypes: mealTypes,\r\n      foodTypes: foodType,\r\n      diet: diet,\r\n      ingredients: ingredients,\r\n      cookingProcess: cookingProcess,\r\n      notes: notes,\r\n      tips: tips,\r\n      isPublic: isPublic,\r\n      allowComments: allowComments,\r\n      allowReviews: allowReviews,\r\n    };\r\n    // console.log(\"Success:\", values);\r\n    // console.log(values);\r\n    const res = await createRecipe(d);\r\n    if (res) {\r\n      userCreatePost && createAPost(res.newRecipe._id);\r\n      setCurrentSelection(4.1);\r\n    }\r\n\r\n    console.log(\"res\", res);\r\n  };\r\n\r\n  const createAPost = async (id) => {\r\n    const values = {\r\n      title: name,\r\n      text: description,\r\n      image: featuredImage.link,\r\n      type: \"Recipe\",\r\n      url: `/recipe/${slug(name)}/${id}`,\r\n    };\r\n    await createPost(values);\r\n    // setCreatePostModalVisible(false);\r\n    // console.log(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const changeIngredientValue = (key, ingredientId, value) => {\r\n    let i = [...ingredients];\r\n    i = i.map((ingre) => {\r\n      if (ingre.id === ingredientId) {\r\n        ingre[key] = value;\r\n      }\r\n      return ingre;\r\n    });\r\n    setIngredients(i);\r\n  };\r\n\r\n  const removeIngredientListItem = (item) => {\r\n    let i = [...ingredients];\r\n    i = i.filter((ingre) => ingre.id !== item.id);\r\n    setIngredients(i);\r\n  };\r\n  const renderIngredientsList = (item) => (\r\n    <List.Item style={{ display: \"block\", textAlign: \"right\" }}>\r\n      <Button type=\"danger\" onClick={() => removeIngredientListItem(item)}>\r\n        Remove\r\n      </Button>\r\n\r\n      <div className=\"new-recipe-ingredient-listitem\">\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Select Ingredient</span>\r\n          <Select\r\n            style={{ width: \"100%\" }}\r\n            showSearch\r\n            onSearch={(v) => console.log(\"value\", v)}\r\n            onChange={(e) => changeIngredientValue(\"name\", item.id, e)}\r\n            filterOption={(input, option) => {\r\n              // console.log(\"value\", input,option);\r\n              return (\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              );\r\n            }}\r\n          >\r\n            {allIngredients.map((i) => (\r\n              <Option value={i._id}>{i.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Weight (gm)</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Weight\"\r\n            value={item.weight}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"weight\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Volume (ml)</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Volume\"\r\n            value={item.volume}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"volume\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Pieces</span>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Pieces\"\r\n            value={item.pieces}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"pieces\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Method</span>\r\n          <Input\r\n            placeholder=\"Enter Method\"\r\n            value={item.method}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"method\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <span className=\"font-paragraph-black\">Other</span>\r\n          <Input\r\n            placeholder=\"Enter Other\"\r\n            value={item.other}\r\n            onChange={(e) =>\r\n              changeIngredientValue(\"other\", item.id, e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </List.Item>\r\n  );\r\n\r\n  const removeCookingProcessItem = (item, index) => {\r\n    let cp = [...cookingProcess];\r\n    cp.splice(index, 1);\r\n    setCookingProcess(cp);\r\n  };\r\n\r\n  const onchangeCookingProcess = (value, index) => {\r\n    let cp = [...cookingProcess];\r\n    cp[index] = value;\r\n    setCookingProcess(cp);\r\n  };\r\n  const renderCookingProcessList = (item, index) => (\r\n    <List.Item>\r\n      <span className=\"font-subheading-black\" style={{ marginRight: \"10px\" }}>\r\n        {index + 1}\r\n      </span>\r\n      <Input.TextArea\r\n        value={item}\r\n        onChange={(e) => onchangeCookingProcess(e.target.value, index)}\r\n        style={{ marginRight: \"10px\" }}\r\n        rows={2}\r\n      />\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={() => removeCookingProcessItem(item, index)}\r\n      >\r\n        Remove\r\n      </Button>\r\n    </List.Item>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n\r\n      {/* modal to create a new meal type  */}\r\n      <Modal\r\n        onCancel={() => setMealTypeModalVisible(false)}\r\n        footer={false}\r\n        visible={mealTypeModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Meal Type</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newMealTypeName}\r\n            onChange={(e) => setNewMealTypeName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newMealTypeName.length > 0) {\r\n                await createMealType(newMealTypeName);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Meal Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allMealTypes}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeMealType(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Meal Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* modal to create a new food type  */}\r\n      <Modal\r\n        onCancel={() => setFoodTypeModalVisible(false)}\r\n        footer={false}\r\n        visible={foodTypeModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Food Type</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newFoodTypeName}\r\n            onChange={(e) => setNewFoodTypeName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newFoodTypeName.length > 0) {\r\n                await createFoodType(newFoodTypeName);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Food Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allFoodTypes}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeFoodType(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Food Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      {/* modal to create a new diet  */}\r\n      <Modal\r\n        onCancel={() => setDietModalVisible(false)}\r\n        footer={false}\r\n        visible={dietModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Diet</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newDietName}\r\n            onChange={(e) => setNewDietName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newDietName.length > 0) {\r\n                await createDiet(newDietName);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Diet Types</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allDiets}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeDiet(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Diet Type\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      {/* modal to create a new ingredient  */}\r\n      <Modal\r\n        onCancel={() => setNewIngredientModlVisible(false)}\r\n        footer={false}\r\n        visible={newIngredientModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Enter Ingredient</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newIngredientName}\r\n            onChange={(e) => setNewIngredientName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newIngredientName.length > 0) {\r\n                await createIngredient(newIngredientName);\r\n                // setEquipmentModal(false);\r\n                fetchData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Ingredients</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allIngredients}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeIngredient(cat._id);\r\n                      fetchData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedItemForUpdateTitle(\"Update Ingredient\");\r\n                      setSelectedItemForUpdate(cat);\r\n                      setEditItemModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <EditTypeName\r\n        editCategoryNameModalVisible={editItemNameModalVisible}\r\n        setEditCategoryModelVisible={setEditItemModelVisible}\r\n        fethData={fetchData}\r\n        selectedForUpdate={selectedItemForUpdate}\r\n        titleName={selectedItemForUpdateTitle}\r\n      />\r\n\r\n      <h2 className=\"font-heading-black\">New Recipe</h2>\r\n\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <div style={{ marginTop: \"-40px\", float: \"right\" }}>\r\n          <span style={{ marginRight: \"5px\" }}>Select Language:</span>\r\n          <Select\r\n            allowClear\r\n            style={{ width: \"100px\" }}\r\n            placeholder=\"Please select\"\r\n            value={language}\r\n            onChange={(e) => setLanguage(e)}\r\n          >\r\n            <Option value={\"eng\"}>English</Option>\r\n            <Option value={\"du\"}>Dutch</Option>\r\n          </Select>\r\n        </div>\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Recipe Name\"\r\n            name=\"recipeName\"\r\n            rules={[{ required: true, message: \"Please input recipe name!\" }]}\r\n          >\r\n            <Input value={name} onChange={(e) => setName(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Recipe Description\" name=\"recipeDescription\">\r\n            <TextEditor value={description} setValue={setDescription} />\r\n            {/* <Input.TextArea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            /> */}\r\n          </Form.Item>\r\n          <Form.Item label=\"Featured Image\" name=\"featuredImage\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"images\");\r\n                setMediaManagerActions([featuredImage, setFeaturedImage]);\r\n              }}\r\n            >\r\n              Upload File\r\n            </Button>\r\n            {typeof featuredImage === \"object\" && (\r\n              <div style={{ display: \"flex\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    marginRight: \"15px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"\"\r\n                    src={`${process.env.REACT_APP_SERVER}/uploads/${featuredImage.link}`}\r\n                    height=\"auto\"\r\n                    width={\"80%\"}\r\n                  />\r\n                  <span>\r\n                    {featuredImage.name}{\" \"}\r\n                    <CloseSquareOutlined\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => setFeaturedImage()}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form.Item>\r\n          <Form layout=\"vertical\">\r\n            <div className=\"new-recipe-information-inputs-container\">\r\n              <Form.Item\r\n                label=\"Prepration Time\"\r\n                name=\"preprationTime\"\r\n                // rules={[\r\n                //   { required: true, message: \"Please input prepration time!\" },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={preprationTime}\r\n                  onChange={(e) => setPreprationTime(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Persons\"\r\n                name=\"persons\"\r\n                // rules={[\r\n                //   {\r\n                //     required: true,\r\n                //     message: \"Please input number of persons!\",\r\n                //   },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={persons}\r\n                  onChange={(e) => setPersons(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Kcal per person\"\r\n                name=\"kcalPerPerson\"\r\n                // rules={[\r\n                //   {\r\n                //     required: true,\r\n                //     message: \"Please input number of calories per person!\",\r\n                //   },\r\n                // ]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={kcalPerPersons}\r\n                  onChange={(e) => setKcalPerPersons(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Saturation Index\"\r\n                name=\"saturationIndex\"\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={saturationIndex}\r\n                  onChange={(e) => setSaturationIndex(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Protein\"\r\n                name=\"protein\"\r\n                // rules={[{ required: true, message: \"Please input protein!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={protein}\r\n                  onChange={(e) => setProtein(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Carbohydrates\"\r\n                name=\"carbohydrates\"\r\n                rules={\r\n                  [\r\n                    // { required: true, message: \"Please input carbohydrates!\" },\r\n                  ]\r\n                }\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={carbohydrates}\r\n                  onChange={(e) => setCarbohydrates(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Fat\"\r\n                name=\"fat\"\r\n                // rules={[{ required: true, message: \"Please input fats!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={fat}\r\n                  onChange={(e) => setFat(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Fiber\"\r\n                name=\"fiber\"\r\n                // rules={[{ required: true, message: \"Please input fiber!\" }]}\r\n                type=\"number\"\r\n              >\r\n                <InputNumber\r\n                  value={fiber}\r\n                  onChange={(e) => setFiber(e)}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n          <Form.Item label=\"Meal Types\" name=\"mealTypes\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={mealTypes}\r\n              onChange={(e) => setMealTypes(e)}\r\n            >\r\n              {allMealTypes.map((meal) => (\r\n                <Option value={meal._id}>{meal.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setMealTypeModalVisible(true)}\r\n            >\r\n              Manage Meal Type\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item label=\"Food Types\" name=\"foodTypes\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={foodType}\r\n              onChange={(e) => setFoodTypes(e)}\r\n            >\r\n              {allFoodTypes.map((food) => (\r\n                <Option value={food._id}>{food.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setFoodTypeModalVisible(true)}\r\n            >\r\n              Manage Food Type\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item label=\"Diet\" name=\"diet\">\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={diet}\r\n              onChange={(e) => setDiet(e)}\r\n            >\r\n              {allDiets.map((d) => (\r\n                <Option value={d._id}>{d.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setDietModalVisible(true)}\r\n            >\r\n              Manage Diet\r\n            </Button>\r\n          </Form.Item>\r\n          {/* ingredients */}\r\n          {\r\n            <div className=\"new-recipe-ingredients-list-container\">\r\n              <List\r\n                size=\"small\"\r\n                header={\r\n                  <div className=\"new-recipe-ingredients-list-container-header\">\r\n                    <span className=\"font-heading-black\">Add Ingredients</span>\r\n                    <div>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() => setIngredients([...ingredients, ing])}\r\n                      >\r\n                        Add Ingredient\r\n                      </Button>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() => setNewIngredientModlVisible(true)}\r\n                      >\r\n                        Manage Ingredients\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                bordered\r\n                dataSource={ingredients}\r\n                renderItem={renderIngredientsList}\r\n              />\r\n            </div>\r\n          }\r\n          {/* Cooking process */}\r\n          {\r\n            <div\r\n              className=\"new-recipe-ingredients-list-container\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <List\r\n                size=\"small\"\r\n                header={\r\n                  <div className=\"new-recipe-ingredients-list-container-header\">\r\n                    <span className=\"font-heading-black\">Cooking Process</span>\r\n                    <div>\r\n                      <Button\r\n                        className=\"hover-orange\"\r\n                        onClick={() =>\r\n                          setCookingProcess([...cookingProcess, \"\"])\r\n                        }\r\n                      >\r\n                        Add Step\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                bordered\r\n                dataSource={cookingProcess}\r\n                renderItem={renderCookingProcessList}\r\n              />\r\n            </div>\r\n          }\r\n\r\n          <Form.Item label=\"Notes\" name=\"notes\" style={{ marginTop: \"30px\" }}>\r\n            {/* <Input.TextArea\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n            /> */}\r\n            <TextEditor value={notes} setValue={setNotes} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Tips\" name=\"tips\">\r\n            {/* <Input.TextArea\r\n              value={tips}\r\n              onChange={(e) => setTips(e.target.value)}\r\n            /> */}\r\n            <TextEditor value={tips} setValue={setTips} />\r\n          </Form.Item>\r\n          {userInfo.role === \"admin\" && (\r\n            <>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={userCreatePost}\r\n                  onChange={(e) => setUserCreatePost(e.target.checked)}\r\n                >\r\n                  Create a post\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={isPublic}\r\n                  onChange={(e) => setIsPublic(e.target.checked)}\r\n                >\r\n                  Make Public\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowReviews}\r\n                  onChange={(e) => setAllowReviews(e.target.checked)}\r\n                >\r\n                  Allow Reviews\r\n                </Checkbox>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowComments}\r\n                  onChange={(e) => setAllowComments(e.target.checked)}\r\n                >\r\n                  Allow Comments\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          {/* footer */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                borderColor: \"var(--color-orange)\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewRecipe;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\FaqManager\\EditTypeName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Feed.js",["687","688","689","690","691"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\TermsAndCondition.js",["692","693","694","695"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\EditCategoryName.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\MediaManager\\MediaFileUploader.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\UserSetting.js",["696","697","698"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\LoggedinNavbar.js",["699"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\UserDashboard\\Nutrient.js",["700","701","702","703","704"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\services\\createChallenge\\tags.js",[],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\components\\Admin\\BlogManager\\UpdateBlog.js",["705","706"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Input, Button, Select, Modal, List } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CloseSquareOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport RemoteMediaManager from \"../MediaManager/RemoteMediaManager\";\r\nimport {\r\n  createBlogCategory,\r\n  getAllBlogCategories,\r\n  removeBlogCategory,\r\n} from \"../../../services/blogs\";\r\nimport EditCategoryName from \"./EditCategoryName\";\r\nimport TextEditor from \"../../TextEditor\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport { userInfoContext } from \"../../../contexts/UserStore\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction UpdateBlog({ blogInfo, show, setShow, onUpdateComplete }) {\r\n  const [form] = Form.useForm();\r\n  // media manager stuff\r\n  const [mediaManagerVisible, setMediaManagerVisible] = useState(false);\r\n  const [mediaManagerType, setMediaManagerType] = useState(\"images\");\r\n  const [mediaManagerActions, setMediaManagerActions] = useState([]);\r\n\r\n  const [t] = useTranslation();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [paragraph, setParagraph] = useState(\"\");\r\n  const [featuredImage, setFeaturedImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [videoLink, setVideLink] = useState(\"\");\r\n  //   category\r\n  const [category, setCategory] = useState(\"\");\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  const [categoryModalVisible, setCategoryModalVisible] = useState(false);\r\n  const [editCategoryNameModalVisible, setEditCategoryModelVisible] =\r\n    useState(false);\r\n\r\n  const [selectedCategoryForUpdate, setSelectedCategoryForUpdate] = useState(\r\n    {}\r\n  );\r\n  const [isPublic, setIsPublic] = useState(false);\r\n  const [allowComments, setAllowComments] = useState(false);\r\n  const [allowReviews, setAllowReviews] = useState(false);\r\n  const userInfo = useContext(userInfoContext)[0];\r\n  useEffect(() => {\r\n    fethData();\r\n    form.setFieldsValue({\r\n      title: blogInfo.title,\r\n      paragraph: blogInfo.paragraph,\r\n      category: blogInfo.category,\r\n    });\r\n    blogInfo.category && setCategory(blogInfo.category._id);\r\n    setFeaturedImage(blogInfo.featuredImage);\r\n    setVideLink(blogInfo.videoLink);\r\n    setTitle(blogInfo.title);\r\n    setParagraph(blogInfo.paragraph);\r\n    setAllowReviews(blogInfo.allowReviews);\r\n    setAllowComments(blogInfo.allowComments);\r\n    setIsPublic(blogInfo.isPublic);\r\n\r\n    console.log(blogInfo);\r\n  }, [blogInfo]);\r\n  const fethData = async () => {\r\n    const data = await getAllBlogCategories();\r\n    setAllCategories(data.categories);\r\n    console.log(data);\r\n  };\r\n\r\n  const updateTheBlog = async () => {\r\n    let flag = false;\r\n    if (title && paragraph && featuredImage && videoLink && category) {\r\n      flag = true;\r\n    }\r\n    if (!flag) {\r\n      alert(\"Please fill all the information\");\r\n    } else {\r\n      setLoading(true);\r\n      const vals = {\r\n        title,\r\n        paragraph,\r\n        featuredImage:\r\n          typeof featuredImage === \"object\"\r\n            ? featuredImage.link\r\n            : featuredImage,\r\n        videoLink: typeof videoLink === \"object\" ? videoLink.link : videoLink,\r\n        category,\r\n        isPublic: isPublic,\r\n        allowComments: allowComments,\r\n        allowReviews: allowReviews,\r\n      };\r\n      onUpdateComplete(setLoading, vals, blogInfo._id);\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width=\"60%\"\r\n      visible={show}\r\n      footer={false}\r\n      onCancel={() => setShow(false)}\r\n      onOk={onUpdateComplete}\r\n    >\r\n      {/* media manager */}\r\n      <RemoteMediaManager\r\n        visible={mediaManagerVisible}\r\n        setVisible={setMediaManagerVisible}\r\n        type={mediaManagerType}\r\n        actions={mediaManagerActions}\r\n      />\r\n      {/* edit category name modal */}\r\n      <EditCategoryName\r\n        editCategoryNameModalVisible={editCategoryNameModalVisible}\r\n        setEditCategoryModelVisible={setEditCategoryModelVisible}\r\n        fethData={fethData}\r\n        selectedForUpdate={selectedCategoryForUpdate}\r\n        titleName=\"Update Category\"\r\n      />\r\n      {/* modal to create a new meal type  */}\r\n      <Modal\r\n        onCancel={() => setCategoryModalVisible(false)}\r\n        footer={false}\r\n        visible={categoryModalVisible}\r\n      >\r\n        <p className=\"font-paragraph-white\">Manage Blog Category</p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Input\r\n            value={newCategoryName}\r\n            onChange={(e) => setNewCategoryName(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={async () => {\r\n              if (newCategoryName.length > 0) {\r\n                await createBlogCategory(newCategoryName);\r\n                // setEquipmentModal(false);\r\n                fethData();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"var(--color-orange)\",\r\n              borderColor: \"var(--color-orange)\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n        <div style={{ height: \"300px\", overflow: \"auto\", marginTop: \"10px\" }}>\r\n          <span className=\"font-subheading-white\">All Categories</span>\r\n          <List\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={allCategories}\r\n            renderItem={(cat) => (\r\n              <List.Item\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span>{cat.name}</span>\r\n                <span>\r\n                  <Button\r\n                    onClick={async () => {\r\n                      await removeBlogCategory(cat._id);\r\n                      fethData();\r\n                    }}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    type=\"primary\"\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      setSelectedCategoryForUpdate(cat);\r\n                      setEditCategoryModelVisible(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </span>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <h2 className=\"font-heading-white\">Update Blog</h2>\r\n      <div\r\n        className=\"admin-newuser-container\"\r\n        style={{ padding: \"50px 50px 50px 20px\" }}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: \"Please input title!\" }]}\r\n          >\r\n            <Input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Featured Image\"\r\n            name=\"featuredImage\"\r\n            rules={[\r\n              { required: true, message: \"Please input featured image!\" },\r\n            ]}\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"images\");\r\n                setMediaManagerActions([featuredImage, setFeaturedImage]);\r\n              }}\r\n            >\r\n              Upload File\r\n            </Button>\r\n            {typeof featuredImage === \"object\" ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginRight: \"15px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  src={`${process.env.REACT_APP_SERVER}/uploads/${featuredImage.link}`}\r\n                  height=\"200px\"\r\n                  width=\"250px\"\r\n                />\r\n                <span>\r\n                  {featuredImage.name}{\" \"}\r\n                  <CloseSquareOutlined\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => setFeaturedImage(\"\")}\r\n                  />\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginRight: \"15px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  src={`${process.env.REACT_APP_SERVER}/uploads/${featuredImage}`}\r\n                  height=\"200px\"\r\n                  width=\"250px\"\r\n                />\r\n                <span>\r\n                  <CloseSquareOutlined\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => setFeaturedImage(\"\")}\r\n                  />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Paragraph\"\r\n            name=\"paragraph\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            {/* <Input.TextArea\r\n              rows={20}\r\n              value={paragraph}\r\n              onChange={(e) => setParagraph(e.target.value)}\r\n            /> */}\r\n            <TextEditor\r\n              key={JSON.stringify(paragraph)}\r\n              value={paragraph}\r\n              setValue={setParagraph}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Video Link\" name=\"videoLink\">\r\n            <Button\r\n              onClick={() => {\r\n                setMediaManagerVisible(true);\r\n                setMediaManagerType(\"videos\");\r\n                setMediaManagerActions([videoLink, setVideLink]);\r\n              }}\r\n            >\r\n              Upload File\r\n            </Button>\r\n            {typeof videoLink === \"object\" ? (\r\n              <div className=\"font-paragraph-black\">\r\n                {videoLink.name}{\" \"}\r\n                <CloseSquareOutlined\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setVideLink(\"\")}\r\n                />\r\n              </div>\r\n            ) : (\r\n              videoLink && (\r\n                <div className=\"font-paragraph-black\">\r\n                  {`${process.env.REACT_APP_SERVER}/api${videoLink}`}{\" \"}\r\n                  <CloseSquareOutlined\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => setVideLink(\"\")}\r\n                  />\r\n                </div>\r\n              )\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"Category\" name=\"category\">\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e)}\r\n            >\r\n              {allCategories.map((cat) => (\r\n                <Option value={cat._id}>{cat.name}</Option>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                float: \"right\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => setCategoryModalVisible(true)}\r\n            >\r\n              Manage Blog Categories\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          {userInfo.role === \"admin\" && (\r\n            <>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={isPublic}\r\n                  onChange={(e) => setIsPublic(e.target.checked)}\r\n                >\r\n                  Make Public\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowReviews}\r\n                  onChange={(e) => setAllowReviews(e.target.checked)}\r\n                >\r\n                  Allow Reviews\r\n                </Checkbox>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  checked={allowComments}\r\n                  onChange={(e) => setAllowComments(e.target.checked)}\r\n                >\r\n                  Allow Comments\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          {loading ? (\r\n            <LoadingOutlined style={{ color: \"#ff7700\", fontSize: \"30px\" }} />\r\n          ) : (\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"var(--color-orange)\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                marginTop: \"5px\",\r\n              }}\r\n              onClick={() => updateTheBlog()}\r\n            >\r\n              Update\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdateBlog;\r\n","D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Trainers.js",["707","708","709","710"],"D:\\AllFiverrProjects\\realchallenge\\realchallenge\\src\\pages\\Challenges.js",[],{"ruleId":"711","severity":1,"message":"712","line":62,"column":6,"nodeType":"713","endLine":62,"endColumn":8,"suggestions":"714"},{"ruleId":"715","severity":1,"message":"716","line":24,"column":10,"nodeType":"717","messageId":"718","endLine":24,"endColumn":18},{"ruleId":"715","severity":1,"message":"719","line":24,"column":20,"nodeType":"717","messageId":"718","endLine":24,"endColumn":31},{"ruleId":"715","severity":1,"message":"720","line":25,"column":10,"nodeType":"717","messageId":"718","endLine":25,"endColumn":18},{"ruleId":"715","severity":1,"message":"721","line":25,"column":20,"nodeType":"717","messageId":"718","endLine":25,"endColumn":31},{"ruleId":"711","severity":1,"message":"722","line":33,"column":6,"nodeType":"713","endLine":33,"endColumn":8,"suggestions":"723"},{"ruleId":"724","severity":1,"message":"725","line":84,"column":5,"nodeType":"726","messageId":"727","endLine":115,"endColumn":6},{"ruleId":"728","replacedBy":"729"},{"ruleId":"730","replacedBy":"731"},{"ruleId":"715","severity":1,"message":"732","line":6,"column":10,"nodeType":"717","messageId":"718","endLine":6,"endColumn":22},{"ruleId":"715","severity":1,"message":"733","line":6,"column":24,"nodeType":"717","messageId":"718","endLine":6,"endColumn":39},{"ruleId":"728","replacedBy":"734"},{"ruleId":"730","replacedBy":"735"},{"ruleId":"715","severity":1,"message":"736","line":9,"column":10,"nodeType":"717","messageId":"718","endLine":9,"endColumn":18},{"ruleId":"715","severity":1,"message":"737","line":1,"column":29,"nodeType":"717","messageId":"718","endLine":1,"endColumn":38},{"ruleId":"715","severity":1,"message":"738","line":29,"column":10,"nodeType":"717","messageId":"718","endLine":29,"endColumn":18},{"ruleId":"715","severity":1,"message":"739","line":29,"column":20,"nodeType":"717","messageId":"718","endLine":29,"endColumn":31},{"ruleId":"740","severity":1,"message":"741","line":36,"column":43,"nodeType":"742","messageId":"743","endLine":36,"endColumn":45},{"ruleId":"715","severity":1,"message":"744","line":3,"column":10,"nodeType":"717","messageId":"718","endLine":3,"endColumn":28},{"ruleId":"715","severity":1,"message":"745","line":4,"column":17,"nodeType":"717","messageId":"718","endLine":4,"endColumn":23},{"ruleId":"715","severity":1,"message":"746","line":4,"column":25,"nodeType":"717","messageId":"718","endLine":4,"endColumn":30},{"ruleId":"715","severity":1,"message":"747","line":5,"column":9,"nodeType":"717","messageId":"718","endLine":5,"endColumn":15},{"ruleId":"715","severity":1,"message":"748","line":12,"column":10,"nodeType":"717","messageId":"718","endLine":12,"endColumn":22},{"ruleId":"715","severity":1,"message":"749","line":45,"column":10,"nodeType":"717","messageId":"718","endLine":45,"endColumn":17},{"ruleId":"715","severity":1,"message":"750","line":45,"column":19,"nodeType":"717","messageId":"718","endLine":45,"endColumn":29},{"ruleId":"715","severity":1,"message":"751","line":46,"column":10,"nodeType":"717","messageId":"718","endLine":46,"endColumn":25},{"ruleId":"715","severity":1,"message":"752","line":46,"column":27,"nodeType":"717","messageId":"718","endLine":46,"endColumn":45},{"ruleId":"711","severity":1,"message":"753","line":159,"column":6,"nodeType":"713","endLine":159,"endColumn":8,"suggestions":"754"},{"ruleId":"715","severity":1,"message":"755","line":1,"column":17,"nodeType":"717","messageId":"718","endLine":1,"endColumn":29},{"ruleId":"715","severity":1,"message":"756","line":3,"column":25,"nodeType":"717","messageId":"718","endLine":3,"endColumn":45},{"ruleId":"715","severity":1,"message":"757","line":52,"column":10,"nodeType":"717","messageId":"718","endLine":52,"endColumn":34},{"ruleId":"715","severity":1,"message":"758","line":15,"column":12,"nodeType":"717","messageId":"718","endLine":15,"endColumn":13},{"ruleId":"728","replacedBy":"759"},{"ruleId":"730","replacedBy":"760"},{"ruleId":"715","severity":1,"message":"761","line":2,"column":10,"nodeType":"717","messageId":"718","endLine":2,"endColumn":15},{"ruleId":"715","severity":1,"message":"762","line":11,"column":8,"nodeType":"717","messageId":"718","endLine":11,"endColumn":19},{"ruleId":"715","severity":1,"message":"763","line":17,"column":23,"nodeType":"717","messageId":"718","endLine":17,"endColumn":37},{"ruleId":"715","severity":1,"message":"764","line":18,"column":24,"nodeType":"717","messageId":"718","endLine":18,"endColumn":39},{"ruleId":"715","severity":1,"message":"765","line":19,"column":11,"nodeType":"717","messageId":"718","endLine":19,"endColumn":17},{"ruleId":"715","severity":1,"message":"766","line":19,"column":19,"nodeType":"717","messageId":"718","endLine":19,"endColumn":24},{"ruleId":"715","severity":1,"message":"767","line":26,"column":10,"nodeType":"717","messageId":"718","endLine":26,"endColumn":17},{"ruleId":"715","severity":1,"message":"768","line":26,"column":19,"nodeType":"717","messageId":"718","endLine":26,"endColumn":29},{"ruleId":"711","severity":1,"message":"722","line":32,"column":6,"nodeType":"713","endLine":32,"endColumn":8,"suggestions":"769"},{"ruleId":"715","severity":1,"message":"770","line":58,"column":13,"nodeType":"717","messageId":"718","endLine":58,"endColumn":14},{"ruleId":"715","severity":1,"message":"770","line":88,"column":13,"nodeType":"717","messageId":"718","endLine":88,"endColumn":14},{"ruleId":"715","severity":1,"message":"770","line":120,"column":13,"nodeType":"717","messageId":"718","endLine":120,"endColumn":14},{"ruleId":"728","replacedBy":"771"},{"ruleId":"730","replacedBy":"772"},{"ruleId":"711","severity":1,"message":"773","line":57,"column":6,"nodeType":"713","endLine":57,"endColumn":8,"suggestions":"774"},{"ruleId":"775","severity":1,"message":"776","line":168,"column":17,"nodeType":"777","endLine":171,"endColumn":19},{"ruleId":"715","severity":1,"message":"778","line":56,"column":10,"nodeType":"717","messageId":"718","endLine":56,"endColumn":22},{"ruleId":"711","severity":1,"message":"779","line":108,"column":6,"nodeType":"713","endLine":108,"endColumn":8,"suggestions":"780"},{"ruleId":"715","severity":1,"message":"737","line":1,"column":29,"nodeType":"717","messageId":"718","endLine":1,"endColumn":38},{"ruleId":"715","severity":1,"message":"738","line":29,"column":10,"nodeType":"717","messageId":"718","endLine":29,"endColumn":18},{"ruleId":"715","severity":1,"message":"739","line":29,"column":20,"nodeType":"717","messageId":"718","endLine":29,"endColumn":31},{"ruleId":"740","severity":1,"message":"741","line":36,"column":43,"nodeType":"742","messageId":"743","endLine":36,"endColumn":45},{"ruleId":"711","severity":1,"message":"781","line":12,"column":6,"nodeType":"713","endLine":12,"endColumn":8,"suggestions":"782"},{"ruleId":"715","severity":1,"message":"783","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":16},{"ruleId":"711","severity":1,"message":"784","line":748,"column":5,"nodeType":"713","endLine":748,"endColumn":63,"suggestions":"785"},{"ruleId":"786","severity":1,"message":"787","line":757,"column":5,"nodeType":"788","messageId":"789","endLine":764,"endColumn":6},{"ruleId":"786","severity":1,"message":"787","line":768,"column":5,"nodeType":"788","messageId":"789","endLine":775,"endColumn":6},{"ruleId":"786","severity":1,"message":"787","line":782,"column":5,"nodeType":"788","messageId":"789","endLine":787,"endColumn":6},{"ruleId":"786","severity":1,"message":"787","line":791,"column":5,"nodeType":"788","messageId":"789","endLine":796,"endColumn":6},{"ruleId":"715","severity":1,"message":"790","line":811,"column":5,"nodeType":"717","messageId":"718","endLine":811,"endColumn":17},{"ruleId":"728","replacedBy":"791"},{"ruleId":"730","replacedBy":"792"},{"ruleId":"715","severity":1,"message":"793","line":2,"column":39,"nodeType":"717","messageId":"718","endLine":2,"endColumn":47},{"ruleId":"715","severity":1,"message":"794","line":2,"column":49,"nodeType":"717","messageId":"718","endLine":2,"endColumn":53},{"ruleId":"715","severity":1,"message":"795","line":21,"column":10,"nodeType":"717","messageId":"718","endLine":21,"endColumn":18},{"ruleId":"711","severity":1,"message":"796","line":54,"column":6,"nodeType":"713","endLine":54,"endColumn":29,"suggestions":"797"},{"ruleId":"715","severity":1,"message":"798","line":7,"column":8,"nodeType":"717","messageId":"718","endLine":7,"endColumn":14},{"ruleId":"715","severity":1,"message":"732","line":9,"column":3,"nodeType":"717","messageId":"718","endLine":9,"endColumn":15},{"ruleId":"715","severity":1,"message":"799","line":12,"column":3,"nodeType":"717","messageId":"718","endLine":12,"endColumn":15},{"ruleId":"715","severity":1,"message":"761","line":18,"column":25,"nodeType":"717","messageId":"718","endLine":18,"endColumn":30},{"ruleId":"715","severity":1,"message":"800","line":27,"column":8,"nodeType":"717","messageId":"718","endLine":27,"endColumn":28},{"ruleId":"715","severity":1,"message":"801","line":38,"column":20,"nodeType":"717","messageId":"718","endLine":38,"endColumn":31},{"ruleId":"711","severity":1,"message":"773","line":47,"column":6,"nodeType":"713","endLine":47,"endColumn":8,"suggestions":"802"},{"ruleId":"715","severity":1,"message":"803","line":5,"column":22,"nodeType":"717","messageId":"718","endLine":5,"endColumn":26},{"ruleId":"711","severity":1,"message":"804","line":25,"column":6,"nodeType":"713","endLine":25,"endColumn":8,"suggestions":"805"},{"ruleId":"728","replacedBy":"806"},{"ruleId":"730","replacedBy":"807"},{"ruleId":"715","severity":1,"message":"737","line":1,"column":27,"nodeType":"717","messageId":"718","endLine":1,"endColumn":36},{"ruleId":"715","severity":1,"message":"808","line":6,"column":3,"nodeType":"717","messageId":"718","endLine":6,"endColumn":21},{"ruleId":"715","severity":1,"message":"809","line":7,"column":3,"nodeType":"717","messageId":"718","endLine":7,"endColumn":16},{"ruleId":"715","severity":1,"message":"765","line":37,"column":11,"nodeType":"717","messageId":"718","endLine":37,"endColumn":17},{"ruleId":"715","severity":1,"message":"766","line":37,"column":19,"nodeType":"717","messageId":"718","endLine":37,"endColumn":24},{"ruleId":"715","severity":1,"message":"810","line":49,"column":9,"nodeType":"717","messageId":"718","endLine":49,"endColumn":22},{"ruleId":"715","severity":1,"message":"811","line":10,"column":8,"nodeType":"717","messageId":"718","endLine":10,"endColumn":23},{"ruleId":"728","replacedBy":"812"},{"ruleId":"730","replacedBy":"813"},{"ruleId":"715","severity":1,"message":"814","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":18},{"ruleId":"715","severity":1,"message":"815","line":6,"column":3,"nodeType":"717","messageId":"718","endLine":6,"endColumn":17},{"ruleId":"715","severity":1,"message":"816","line":8,"column":10,"nodeType":"717","messageId":"718","endLine":8,"endColumn":22},{"ruleId":"715","severity":1,"message":"817","line":38,"column":10,"nodeType":"717","messageId":"718","endLine":38,"endColumn":20},{"ruleId":"715","severity":1,"message":"818","line":45,"column":10,"nodeType":"717","messageId":"718","endLine":45,"endColumn":15},{"ruleId":"715","severity":1,"message":"819","line":45,"column":17,"nodeType":"717","messageId":"718","endLine":45,"endColumn":25},{"ruleId":"715","severity":1,"message":"749","line":47,"column":10,"nodeType":"717","messageId":"718","endLine":47,"endColumn":17},{"ruleId":"728","replacedBy":"820"},{"ruleId":"730","replacedBy":"821"},{"ruleId":"715","severity":1,"message":"814","line":12,"column":10,"nodeType":"717","messageId":"718","endLine":12,"endColumn":25},{"ruleId":"715","severity":1,"message":"749","line":109,"column":10,"nodeType":"717","messageId":"718","endLine":109,"endColumn":17},{"ruleId":"715","severity":1,"message":"750","line":109,"column":19,"nodeType":"717","messageId":"718","endLine":109,"endColumn":29},{"ruleId":"711","severity":1,"message":"822","line":121,"column":6,"nodeType":"713","endLine":121,"endColumn":8,"suggestions":"823"},{"ruleId":"715","severity":1,"message":"824","line":166,"column":9,"nodeType":"717","messageId":"718","endLine":166,"endColumn":21},{"ruleId":"715","severity":1,"message":"825","line":2,"column":25,"nodeType":"717","messageId":"718","endLine":2,"endColumn":37},{"ruleId":"826","severity":1,"message":"827","line":44,"column":13,"nodeType":"717","messageId":"828","endLine":44,"endColumn":14},{"ruleId":"715","severity":1,"message":"829","line":10,"column":3,"nodeType":"717","messageId":"718","endLine":10,"endColumn":16},{"ruleId":"715","severity":1,"message":"830","line":18,"column":3,"nodeType":"717","messageId":"718","endLine":18,"endColumn":28},{"ruleId":"715","severity":1,"message":"746","line":2,"column":25,"nodeType":"717","messageId":"718","endLine":2,"endColumn":30},{"ruleId":"715","severity":1,"message":"831","line":2,"column":32,"nodeType":"717","messageId":"718","endLine":2,"endColumn":37},{"ruleId":"715","severity":1,"message":"832","line":2,"column":47,"nodeType":"717","messageId":"718","endLine":2,"endColumn":53},{"ruleId":"715","severity":1,"message":"833","line":3,"column":10,"nodeType":"717","messageId":"718","endLine":3,"endColumn":29},{"ruleId":"715","severity":1,"message":"834","line":4,"column":10,"nodeType":"717","messageId":"718","endLine":4,"endColumn":20},{"ruleId":"711","severity":1,"message":"835","line":50,"column":6,"nodeType":"713","endLine":50,"endColumn":8,"suggestions":"836"},{"ruleId":"715","severity":1,"message":"837","line":2,"column":40,"nodeType":"717","messageId":"718","endLine":2,"endColumn":46},{"ruleId":"715","severity":1,"message":"838","line":2,"column":48,"nodeType":"717","messageId":"718","endLine":2,"endColumn":55},{"ruleId":"715","severity":1,"message":"839","line":7,"column":8,"nodeType":"717","messageId":"718","endLine":7,"endColumn":9},{"ruleId":"715","severity":1,"message":"840","line":16,"column":8,"nodeType":"717","messageId":"718","endLine":16,"endColumn":12},{"ruleId":"841","severity":1,"message":"842","line":25,"column":3,"nodeType":"843","messageId":"743","endLine":25,"endColumn":10},{"ruleId":"841","severity":1,"message":"844","line":27,"column":3,"nodeType":"843","messageId":"743","endLine":27,"endColumn":9},{"ruleId":"711","severity":1,"message":"773","line":47,"column":6,"nodeType":"713","endLine":47,"endColumn":8,"suggestions":"845"},{"ruleId":"711","severity":1,"message":"846","line":101,"column":6,"nodeType":"713","endLine":101,"endColumn":78,"suggestions":"847"},{"ruleId":"715","severity":1,"message":"757","line":55,"column":10,"nodeType":"717","messageId":"718","endLine":55,"endColumn":34},{"ruleId":"715","severity":1,"message":"765","line":58,"column":11,"nodeType":"717","messageId":"718","endLine":58,"endColumn":17},{"ruleId":"711","severity":1,"message":"848","line":68,"column":6,"nodeType":"713","endLine":68,"endColumn":8,"suggestions":"849"},{"ruleId":"850","severity":1,"message":"851","line":400,"column":17,"nodeType":"852","endLine":400,"endColumn":32},{"ruleId":"728","replacedBy":"853"},{"ruleId":"730","replacedBy":"854"},{"ruleId":"715","severity":1,"message":"855","line":3,"column":10,"nodeType":"717","messageId":"718","endLine":3,"endColumn":28},{"ruleId":"715","severity":1,"message":"765","line":53,"column":11,"nodeType":"717","messageId":"718","endLine":53,"endColumn":17},{"ruleId":"711","severity":1,"message":"856","line":100,"column":6,"nodeType":"713","endLine":100,"endColumn":19,"suggestions":"857"},{"ruleId":"715","severity":1,"message":"858","line":1,"column":17,"nodeType":"717","messageId":"718","endLine":1,"endColumn":25},{"ruleId":"715","severity":1,"message":"758","line":21,"column":10,"nodeType":"717","messageId":"718","endLine":21,"endColumn":11},{"ruleId":"711","severity":1,"message":"859","line":36,"column":6,"nodeType":"713","endLine":36,"endColumn":8,"suggestions":"860"},{"ruleId":"715","severity":1,"message":"861","line":13,"column":10,"nodeType":"717","messageId":"718","endLine":13,"endColumn":14},{"ruleId":"715","severity":1,"message":"862","line":23,"column":11,"nodeType":"717","messageId":"718","endLine":23,"endColumn":14},{"ruleId":"715","severity":1,"message":"863","line":19,"column":3,"nodeType":"717","messageId":"718","endLine":19,"endColumn":18},{"ruleId":"715","severity":1,"message":"758","line":33,"column":10,"nodeType":"717","messageId":"718","endLine":33,"endColumn":11},{"ruleId":"715","severity":1,"message":"864","line":86,"column":10,"nodeType":"717","messageId":"718","endLine":86,"endColumn":18},{"ruleId":"715","severity":1,"message":"865","line":139,"column":10,"nodeType":"717","messageId":"718","endLine":139,"endColumn":18},{"ruleId":"715","severity":1,"message":"866","line":139,"column":20,"nodeType":"717","messageId":"718","endLine":139,"endColumn":31},{"ruleId":"711","severity":1,"message":"867","line":145,"column":6,"nodeType":"713","endLine":145,"endColumn":8,"suggestions":"868"},{"ruleId":"869","severity":1,"message":"870","line":318,"column":21,"nodeType":"871","messageId":"872","endLine":318,"endColumn":23},{"ruleId":"711","severity":1,"message":"873","line":26,"column":13,"nodeType":"871","endLine":28,"endColumn":4},{"ruleId":"715","severity":1,"message":"837","line":2,"column":43,"nodeType":"717","messageId":"718","endLine":2,"endColumn":49},{"ruleId":"715","severity":1,"message":"838","line":2,"column":57,"nodeType":"717","messageId":"718","endLine":2,"endColumn":64},{"ruleId":"715","severity":1,"message":"748","line":4,"column":26,"nodeType":"717","messageId":"718","endLine":4,"endColumn":38},{"ruleId":"715","severity":1,"message":"749","line":40,"column":10,"nodeType":"717","messageId":"718","endLine":40,"endColumn":17},{"ruleId":"715","severity":1,"message":"750","line":40,"column":19,"nodeType":"717","messageId":"718","endLine":40,"endColumn":29},{"ruleId":"715","severity":1,"message":"874","line":1,"column":17,"nodeType":"717","messageId":"718","endLine":1,"endColumn":27},{"ruleId":"715","severity":1,"message":"875","line":1,"column":29,"nodeType":"717","messageId":"718","endLine":1,"endColumn":35},{"ruleId":"715","severity":1,"message":"737","line":1,"column":37,"nodeType":"717","messageId":"718","endLine":1,"endColumn":46},{"ruleId":"715","severity":1,"message":"876","line":5,"column":5,"nodeType":"717","messageId":"718","endLine":5,"endColumn":10},{"ruleId":"715","severity":1,"message":"814","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":18},{"ruleId":"715","severity":1,"message":"815","line":6,"column":3,"nodeType":"717","messageId":"718","endLine":6,"endColumn":17},{"ruleId":"715","severity":1,"message":"816","line":8,"column":10,"nodeType":"717","messageId":"718","endLine":8,"endColumn":22},{"ruleId":"715","severity":1,"message":"721","line":35,"column":20,"nodeType":"717","messageId":"718","endLine":35,"endColumn":31},{"ruleId":"715","severity":1,"message":"817","line":38,"column":10,"nodeType":"717","messageId":"718","endLine":38,"endColumn":20},{"ruleId":"715","severity":1,"message":"749","line":47,"column":10,"nodeType":"717","messageId":"718","endLine":47,"endColumn":17},{"ruleId":"711","severity":1,"message":"877","line":91,"column":6,"nodeType":"713","endLine":91,"endColumn":8,"suggestions":"878"},{"ruleId":"715","severity":1,"message":"879","line":25,"column":10,"nodeType":"717","messageId":"718","endLine":25,"endColumn":19},{"ruleId":"715","severity":1,"message":"880","line":36,"column":10,"nodeType":"717","messageId":"718","endLine":36,"endColumn":13},{"ruleId":"715","severity":1,"message":"866","line":51,"column":20,"nodeType":"717","messageId":"718","endLine":51,"endColumn":31},{"ruleId":"715","severity":1,"message":"881","line":53,"column":10,"nodeType":"717","messageId":"718","endLine":53,"endColumn":27},{"ruleId":"711","severity":1,"message":"773","line":113,"column":6,"nodeType":"713","endLine":113,"endColumn":16,"suggestions":"882"},{"ruleId":"715","severity":1,"message":"883","line":9,"column":3,"nodeType":"717","messageId":"718","endLine":9,"endColumn":15},{"ruleId":"715","severity":1,"message":"757","line":38,"column":10,"nodeType":"717","messageId":"718","endLine":38,"endColumn":34},{"ruleId":"711","severity":1,"message":"884","line":75,"column":6,"nodeType":"713","endLine":75,"endColumn":15,"suggestions":"885"},{"ruleId":"711","severity":1,"message":"886","line":102,"column":6,"nodeType":"713","endLine":102,"endColumn":23,"suggestions":"887"},{"ruleId":"715","severity":1,"message":"861","line":12,"column":10,"nodeType":"717","messageId":"718","endLine":12,"endColumn":14},{"ruleId":"715","severity":1,"message":"803","line":3,"column":22,"nodeType":"717","messageId":"718","endLine":3,"endColumn":26},{"ruleId":"715","severity":1,"message":"758","line":9,"column":10,"nodeType":"717","messageId":"718","endLine":9,"endColumn":11},{"ruleId":"715","severity":1,"message":"865","line":10,"column":10,"nodeType":"717","messageId":"718","endLine":10,"endColumn":18},{"ruleId":"715","severity":1,"message":"866","line":10,"column":20,"nodeType":"717","messageId":"718","endLine":10,"endColumn":31},{"ruleId":"711","severity":1,"message":"722","line":16,"column":6,"nodeType":"713","endLine":16,"endColumn":8,"suggestions":"888"},{"ruleId":"715","severity":1,"message":"889","line":4,"column":3,"nodeType":"717","messageId":"718","endLine":4,"endColumn":18},{"ruleId":"715","severity":1,"message":"890","line":5,"column":3,"nodeType":"717","messageId":"718","endLine":5,"endColumn":15},{"ruleId":"715","severity":1,"message":"891","line":7,"column":3,"nodeType":"717","messageId":"718","endLine":7,"endColumn":22},{"ruleId":"715","severity":1,"message":"892","line":8,"column":3,"nodeType":"717","messageId":"718","endLine":8,"endColumn":13},{"ruleId":"715","severity":1,"message":"761","line":12,"column":18,"nodeType":"717","messageId":"718","endLine":12,"endColumn":23},{"ruleId":"715","severity":1,"message":"758","line":26,"column":10,"nodeType":"717","messageId":"718","endLine":26,"endColumn":11},{"ruleId":"711","severity":1,"message":"773","line":46,"column":6,"nodeType":"713","endLine":46,"endColumn":18,"suggestions":"893"},{"ruleId":"894","severity":1,"message":"895","line":77,"column":9,"nodeType":"777","endLine":77,"endColumn":70},{"ruleId":"894","severity":1,"message":"895","line":84,"column":9,"nodeType":"777","endLine":84,"endColumn":69},{"ruleId":"715","severity":1,"message":"834","line":4,"column":10,"nodeType":"717","messageId":"718","endLine":4,"endColumn":20},{"ruleId":"711","severity":1,"message":"896","line":23,"column":6,"nodeType":"713","endLine":23,"endColumn":8,"suggestions":"897"},{"ruleId":"715","severity":1,"message":"866","line":32,"column":20,"nodeType":"717","messageId":"718","endLine":32,"endColumn":31},{"ruleId":"715","severity":1,"message":"765","line":38,"column":11,"nodeType":"717","messageId":"718","endLine":38,"endColumn":17},{"ruleId":"711","severity":1,"message":"898","line":64,"column":6,"nodeType":"713","endLine":64,"endColumn":15,"suggestions":"899"},{"ruleId":"715","severity":1,"message":"866","line":23,"column":20,"nodeType":"717","messageId":"718","endLine":23,"endColumn":31},{"ruleId":"711","severity":1,"message":"900","line":42,"column":6,"nodeType":"713","endLine":42,"endColumn":8,"suggestions":"901"},{"ruleId":"715","severity":1,"message":"749","line":13,"column":10,"nodeType":"717","messageId":"718","endLine":13,"endColumn":17},{"ruleId":"711","severity":1,"message":"902","line":35,"column":6,"nodeType":"713","endLine":35,"endColumn":22,"suggestions":"903"},{"ruleId":"715","severity":1,"message":"866","line":18,"column":20,"nodeType":"717","messageId":"718","endLine":18,"endColumn":31},{"ruleId":"711","severity":1,"message":"904","line":44,"column":6,"nodeType":"713","endLine":44,"endColumn":12,"suggestions":"905"},{"ruleId":"715","severity":1,"message":"906","line":414,"column":10,"nodeType":"717","messageId":"718","endLine":414,"endColumn":18},{"ruleId":"715","severity":1,"message":"907","line":414,"column":20,"nodeType":"717","messageId":"718","endLine":414,"endColumn":31},{"ruleId":"715","severity":1,"message":"866","line":416,"column":20,"nodeType":"717","messageId":"718","endLine":416,"endColumn":31},{"ruleId":"711","severity":1,"message":"908","line":551,"column":6,"nodeType":"713","endLine":551,"endColumn":8,"suggestions":"909"},{"ruleId":"715","severity":1,"message":"749","line":13,"column":10,"nodeType":"717","messageId":"718","endLine":13,"endColumn":17},{"ruleId":"715","severity":1,"message":"833","line":19,"column":3,"nodeType":"717","messageId":"718","endLine":19,"endColumn":22},{"ruleId":"715","severity":1,"message":"910","line":31,"column":3,"nodeType":"717","messageId":"718","endLine":31,"endColumn":17},{"ruleId":"715","severity":1,"message":"911","line":38,"column":38,"nodeType":"717","messageId":"718","endLine":38,"endColumn":47},{"ruleId":"711","severity":1,"message":"912","line":131,"column":6,"nodeType":"713","endLine":131,"endColumn":16,"suggestions":"913"},{"ruleId":"715","severity":1,"message":"914","line":170,"column":9,"nodeType":"717","messageId":"718","endLine":170,"endColumn":18},{"ruleId":"715","severity":1,"message":"761","line":2,"column":16,"nodeType":"717","messageId":"718","endLine":2,"endColumn":21},{"ruleId":"715","severity":1,"message":"745","line":2,"column":23,"nodeType":"717","messageId":"718","endLine":2,"endColumn":29},{"ruleId":"715","severity":1,"message":"864","line":83,"column":10,"nodeType":"717","messageId":"718","endLine":83,"endColumn":18},{"ruleId":"715","severity":1,"message":"866","line":134,"column":20,"nodeType":"717","messageId":"718","endLine":134,"endColumn":31},{"ruleId":"715","severity":1,"message":"745","line":6,"column":10,"nodeType":"717","messageId":"718","endLine":6,"endColumn":16},{"ruleId":"711","severity":1,"message":"915","line":36,"column":6,"nodeType":"713","endLine":36,"endColumn":8,"suggestions":"916"},{"ruleId":"715","severity":1,"message":"917","line":18,"column":22,"nodeType":"717","messageId":"718","endLine":18,"endColumn":35},{"ruleId":"715","severity":1,"message":"838","line":6,"column":3,"nodeType":"717","messageId":"718","endLine":6,"endColumn":10},{"ruleId":"715","severity":1,"message":"748","line":12,"column":10,"nodeType":"717","messageId":"718","endLine":12,"endColumn":22},{"ruleId":"715","severity":1,"message":"866","line":40,"column":20,"nodeType":"717","messageId":"718","endLine":40,"endColumn":31},{"ruleId":"715","severity":1,"message":"749","line":50,"column":10,"nodeType":"717","messageId":"718","endLine":50,"endColumn":17},{"ruleId":"715","severity":1,"message":"750","line":50,"column":19,"nodeType":"717","messageId":"718","endLine":50,"endColumn":29},{"ruleId":"715","severity":1,"message":"751","line":51,"column":10,"nodeType":"717","messageId":"718","endLine":51,"endColumn":25},{"ruleId":"715","severity":1,"message":"752","line":51,"column":27,"nodeType":"717","messageId":"718","endLine":51,"endColumn":45},{"ruleId":"715","severity":1,"message":"761","line":5,"column":18,"nodeType":"717","messageId":"718","endLine":5,"endColumn":23},{"ruleId":"715","severity":1,"message":"758","line":19,"column":10,"nodeType":"717","messageId":"718","endLine":19,"endColumn":11},{"ruleId":"711","severity":1,"message":"773","line":39,"column":6,"nodeType":"713","endLine":39,"endColumn":18,"suggestions":"918"},{"ruleId":"894","severity":1,"message":"895","line":70,"column":9,"nodeType":"777","endLine":70,"endColumn":70},{"ruleId":"894","severity":1,"message":"895","line":77,"column":9,"nodeType":"777","endLine":77,"endColumn":69},{"ruleId":"715","severity":1,"message":"737","line":1,"column":29,"nodeType":"717","messageId":"718","endLine":1,"endColumn":38},{"ruleId":"715","severity":1,"message":"738","line":29,"column":10,"nodeType":"717","messageId":"718","endLine":29,"endColumn":18},{"ruleId":"715","severity":1,"message":"739","line":29,"column":20,"nodeType":"717","messageId":"718","endLine":29,"endColumn":31},{"ruleId":"740","severity":1,"message":"741","line":36,"column":43,"nodeType":"742","messageId":"743","endLine":36,"endColumn":45},{"ruleId":"715","severity":1,"message":"919","line":7,"column":3,"nodeType":"717","messageId":"718","endLine":7,"endColumn":15},{"ruleId":"715","severity":1,"message":"920","line":26,"column":7,"nodeType":"717","messageId":"718","endLine":26,"endColumn":24},{"ruleId":"711","severity":1,"message":"773","line":94,"column":6,"nodeType":"713","endLine":94,"endColumn":16,"suggestions":"921"},{"ruleId":"775","severity":1,"message":"776","line":101,"column":17,"nodeType":"777","endLine":101,"endColumn":36},{"ruleId":"715","severity":1,"message":"922","line":53,"column":7,"nodeType":"717","messageId":"718","endLine":53,"endColumn":21},{"ruleId":"715","severity":1,"message":"866","line":90,"column":20,"nodeType":"717","messageId":"718","endLine":90,"endColumn":31},{"ruleId":"715","severity":1,"message":"765","line":91,"column":11,"nodeType":"717","messageId":"718","endLine":91,"endColumn":17},{"ruleId":"711","severity":1,"message":"923","line":182,"column":6,"nodeType":"713","endLine":182,"endColumn":8,"suggestions":"924"},{"ruleId":"869","severity":1,"message":"925","line":227,"column":16,"nodeType":"871","messageId":"926","endLine":227,"endColumn":18},{"ruleId":"715","severity":1,"message":"758","line":25,"column":10,"nodeType":"717","messageId":"718","endLine":25,"endColumn":11},{"ruleId":"711","severity":1,"message":"796","line":63,"column":6,"nodeType":"713","endLine":63,"endColumn":16,"suggestions":"927"},{"ruleId":"841","severity":1,"message":"842","line":21,"column":3,"nodeType":"843","messageId":"743","endLine":21,"endColumn":10},{"ruleId":"715","severity":1,"message":"928","line":26,"column":10,"nodeType":"717","messageId":"718","endLine":26,"endColumn":14},{"ruleId":"715","severity":1,"message":"929","line":26,"column":16,"nodeType":"717","messageId":"718","endLine":26,"endColumn":23},{"ruleId":"711","severity":1,"message":"930","line":42,"column":6,"nodeType":"713","endLine":42,"endColumn":20,"suggestions":"931"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["932"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["933"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-native-reassign",["934"],"no-negated-in-lhs",["935"],"'StarOutlined' is defined but never used.","'ForwardOutlined' is defined but never used.",["934"],["935"],"'includes' is defined but never used.","'useEffect' is defined but never used.","'language' is assigned a value but never used.","'setLangauge' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getUserProfileInfo' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Option' is assigned a value but never used.","'PlusOutlined' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'thumbnailBase64' is assigned a value but never used.","'setThumbnailBase64' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'props'. Either include them or remove the dependency array.",["936"],"'ReactElement' is defined but never used.","'ChonkyFileActionData' is defined but never used.","'exerciseWorkoutTimeTrack' is assigned a value but never used.","'t' is assigned a value but never used.",["934"],["935"],"'Modal' is defined but never used.","'PlayerState' is defined but never used.","'setPlayerState' is assigned a value but never used.","'setCurrentBreak' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'playing' is assigned a value but never used.","'setPlaying' is assigned a value but never used.",["937"],"'r' is assigned a value but never used.",["934"],["935"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["938"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fechUserInfo'. Either include it or remove the dependency array.",["939"],"React Hook useEffect has a missing dependency: 'createSub'. Either include it or remove the dependency array.",["940"],"'getAllRecipes' is defined but never used.","React Hook useCallback has missing dependencies: 'checkForType', 'mediaActions', 'mediaType', 'setCurrentFolderName', 'setOpenUploadModal', and 'setRemoteMediaManagerVisible'. Either include them or remove the dependency array. If 'checkForType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["941"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'resetFileMap' is assigned a value but never used.",["934"],["935"],"'Checkbox' is defined but never used.","'List' is defined but never used.","'category' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["942"],"'Footer' is defined but never used.","'LikeOutlined' is defined but never used.","'ChallengeReviewModal' is defined but never used.","'serUserInfo' is assigned a value but never used.",["943"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.onPricingPage'. Either include them or remove the dependency array.",["944"],["934"],["935"],"'CaretRightOutlined' is defined but never used.","'PauseOutlined' is defined but never used.","'totalDuration' is assigned a value but never used.","'UpdateChallenge' is defined but never used.",["934"],["935"],"'LoadingOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'registerUser' is defined but never used.","'membership' is assigned a value but never used.","'goals' is assigned a value but never used.","'setGoals' is assigned a value but never used.",["934"],["935"],"React Hook useEffect has a missing dependency: 'fethData'. Either include it or remove the dependency array.",["945"],"'selectBefore' is assigned a value but never used.","'UserOutlined' is defined but never used.","no-redeclare","'n' is already defined.","redeclared","'AuditOutlined' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'Input' is defined but never used.","'Switch' is defined but never used.","'CloseSquareOutlined' is defined but never used.","'createPost' is defined but never used.","React Hook useEffect has missing dependencies: 'form', 'selectedFaq.answer', 'selectedFaq.category', 'selectedFaq.isPublic', and 'selectedFaq.question'. Either include them or remove the dependency array. If 'setIsPublic' needs the current value of 'selectedFaq.isPublic', you can also switch to useReducer instead of useState and read 'selectedFaq.isPublic' in the reducer.",["946"],"'Upload' is defined but never used.","'message' is defined but never used.","'_' is defined but never used.","'slug' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","Duplicate key 'margin'.",["947"],"React Hook useEffect has a missing dependency: 'challanges'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterChallenges' needs the current value of 'challanges'.",["948"],"React Hook useEffect has missing dependencies: 'fetchData', 'props.history', 'setUserInfo', and 'userInfo'. Either include them or remove the dependency array.",["949"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["934"],["935"],"'updateBlogCategory' is defined but never used.","React Hook useEffect has missing dependencies: 'gender', 'months', and 'recommandedChal'. Either include them or remove the dependency array. If 'setMybody' needs the current value of 'gender', you can also switch to useReducer instead of useState and read 'gender' in the reducer.",["950"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchInfo'. Either include it or remove the dependency array.",["951"],"'form' is assigned a value but never used.","'res' is assigned a value but never used.","'createChallenge' is defined but never used.","'products' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addStuffToMainTabForm'. Either include it or remove the dependency array.",["952"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'useContext' is defined but never used.","'useRef' is defined but never used.","'count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'userInfo'. Either include them or remove the dependency array.",["953"],"'checkUser' is defined but never used.","'set' is defined but never used.","'selectedChallenge' is assigned a value but never used.",["954"],"'breakContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setExerciseWorkoutTimeTrack'. Either include it or remove the dependency array.",["955"],"React Hook useEffect has missing dependencies: 'currentExercise.index', 'moveToNextExercise', 'playerState', 'setPlayerState', 'setTimerVisible', and 'workout.exercises'. Either include them or remove the dependency array. If 'moveToNextExercise' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["956"],["957"],"'CommentOutlined' is defined but never used.","'FireOutlined' is defined but never used.","'ClockCircleOutlined' is defined but never used.","'FlagFilled' is defined but never used.",["958"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'form', 'postInfo.image', 'postInfo.text', 'postInfo.title', and 'postInfo.type'. Either include them or remove the dependency array. If 'setType' needs the current value of 'postInfo.type', you can also switch to useReducer instead of useState and read 'postInfo.type' in the reducer.",["959"],"React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["960"],"React Hook useEffect has missing dependencies: 'exerciseValues' and 'form'. Either include them or remove the dependency array.",["961"],"React Hook useEffect has missing dependencies: 'challengesApplicableOn' and 'form'. Either include them or remove the dependency array. You can also do a functional update 'setChallengesApplicableOn(c => ...)' if you only need 'challengesApplicableOn' in the 'setChallengesApplicableOn' call.",["962"],"React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["963"],"'newPrice' is assigned a value but never used.","'setNewPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedChallenge.price'. Either include it or remove the dependency array.",["964"],"'createProducts' is defined but never used.","'Draggable' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchExercises'. Either include it or remove the dependency array.",["965"],"'rmProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNextChallenges'. Either include it or remove the dependency array.",["966"],"'setFullscreen' is assigned a value but never used.",["967"],"'LockOutlined' is defined but never used.","'passwordIconStyle' is assigned a value but never used.",["968"],"'iconsListStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eatingBehave', 'fetchData', 'recommandedWeekDiet', 'selectedrRecipes', 'setMealsForTheWeek', and 'userProfile'. Either include them or remove the dependency array. You can also do a functional update 'setEatingBehave(e => ...)' if you only need 'eatingBehave' in the 'setEatingBehave' call.",["969"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["970"],"'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allTrainers'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterTrainers' needs the current value of 'allTrainers'.",["971"],{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},"no-global-assign","no-unsafe-negation",{"desc":"976","fix":"977"},{"desc":"974","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},{"desc":"979","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"979","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1011","fix":"1012"},{"desc":"1013","fix":"1014"},{"desc":"974","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1016","fix":"1034"},{"desc":"1009","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1040","fix":"1041"},"Update the dependencies array to be: [checkUserInfo]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [props.history]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [form, props]",{"range":"1046","text":"1047"},{"range":"1048","text":"1045"},"Update the dependencies array to be: [fetchData]",{"range":"1049","text":"1050"},"Update the dependencies array to be: [fechUserInfo]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [createSub]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [checkForType, deleteFiles, mediaActions, mediaType, setCurrentFolderId, setCurrentFolderName, setOpenUploadModal, setRemoteMediaManagerVisible]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [form, props.selectedProduct]",{"range":"1057","text":"1058"},{"range":"1059","text":"1050"},"Update the dependencies array to be: [props.history, props.onPricingPage]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [fethData]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [form, selectedFaq.answer, selectedFaq.category, selectedFaq.isPublic, selectedFaq.question]",{"range":"1064","text":"1065"},{"range":"1066","text":"1050"},"Update the dependencies array to be: [challanges, filterByBodyFocus, filterByEquipments, filterByGoal, filterByIntensity]",{"range":"1067","text":"1068"},"Update the dependencies array to be: [fetchData, props.history, setUserInfo, userInfo]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [gender, months, recommandedChal, userProfile]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [fetchInfo]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [addStuffToMainTabForm]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [form, userInfo]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [fetchData, userInfo]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [setExerciseWorkoutTimeTrack, workout]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [currentExercise.index, exerciseSeconds, moveToNextExercise, playerState, setPlayerState, setTimerVisible, workout.exercises]",{"range":"1083","text":"1084"},{"range":"1085","text":"1045"},"Update the dependencies array to be: [fetchData, pageNumber]",{"range":"1086","text":"1087"},"Update the dependencies array to be: [form, postInfo.image, postInfo.text, postInfo.title, postInfo.type]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [current, getUserDetails]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [exerciseValues, form]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [challengesApplicableOn, form, selectedCoupon]",{"range":"1094","text":"1095"},"Update the dependencies array to be: [item, userInfo.id]",{"range":"1096","text":"1097"},"Update the dependencies array to be: [selectedChallenge.price]",{"range":"1098","text":"1099"},"Update the dependencies array to be: [fetchExercises, trainers]",{"range":"1100","text":"1101"},"Update the dependencies array to be: [getNextChallenges]",{"range":"1102","text":"1103"},{"range":"1104","text":"1087"},{"range":"1105","text":"1080"},"Update the dependencies array to be: [eatingBehave, fetchData, recommandedWeekDiet, selectedrRecipes, setMealsForTheWeek, userProfile]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [blogInfo, form]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [allTrainers, filterGender]",{"range":"1110","text":"1111"},[2486,2488],"[checkUserInfo]",[1297,1299],"[props.history]",[6493,6495],"[form, props]",[1266,1268],[2237,2239],"[fetchData]",[3604,3606],"[fechUserInfo]",[391,393],"[createSub]",[22835,22893],"[checkForType, deleteFiles, mediaActions, mediaType, setCurrentFolderId, setCurrentFolderName, setOpenUploadModal, setRemoteMediaManagerVisible]",[2139,2162],"[form, props.selectedProduct]",[1675,1677],[1020,1022],"[props.history, props.onPricingPage]",[2898,2900],"[fethData]",[1626,1628],"[form, selectedFaq.answer, selectedFaq.category, selectedFaq.isPublic, selectedFaq.question]",[1789,1791],[3683,3755],"[challanges, filterByBodyFocus, filterByEquipments, filterByGoal, filterByIntensity]",[2670,2672],"[fetchData, props.history, setUserInfo, userInfo]",[3148,3161],"[gender, months, recommandedChal, userProfile]",[1146,1148],"[fetchInfo]",[6491,6493],"[addStuffToMainTabForm]",[3396,3398],"[form, userInfo]",[4845,4855],"[fetchData, userInfo]",[2337,2346],"[setExerciseWorkoutTimeTrack, workout]",[3159,3176],"[currentExercise.index, exerciseSeconds, moveToNextExercise, playerState, setPlayerState, setTimerVisible, workout.exercises]",[555,557],[1448,1460],"[fetchData, pageNumber]",[922,924],"[form, postInfo.image, postInfo.text, postInfo.title, postInfo.type]",[2494,2503],"[current, getUserDetails]",[1499,1501],"[exerciseValues, form]",[1240,1256],"[challengesApplicableOn, form, selectedCoupon]",[1733,1739],"[item, userInfo.id]",[20454,20456],"[selectedChallenge.price]",[3469,3479],"[fetchExercises, trainers]",[1756,1758],"[getNextChallenges]",[1350,1362],[2978,2988],[5821,5823],"[eatingBehave, fetchData, recommandedWeekDiet, selectedrRecipes, setMealsForTheWeek, userProfile]",[2556,2566],"[blogInfo, form]",[1357,1371],"[allTrainers, filterGender]"]